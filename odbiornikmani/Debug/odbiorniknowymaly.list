
odbiorniknowymaly.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003b30  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000002c  08003c3c  08003c3c  00013c3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003c68  08003c68  00020010  2**0
                  CONTENTS
  4 .ARM          00000000  08003c68  08003c68  00020010  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003c68  08003c68  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003c68  08003c68  00013c68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003c6c  08003c6c  00013c6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000010  20000000  08003c70  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000ec  20000010  08003c80  00020010  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000fc  08003c80  000200fc  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020010  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000aee7  00000000  00000000  00020039  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001dd5  00000000  00000000  0002af20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000c90  00000000  00000000  0002ccf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000b98  00000000  00000000  0002d988  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001779f  00000000  00000000  0002e520  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000d262  00000000  00000000  00045cbf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008725c  00000000  00000000  00052f21  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000da17d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000338c  00000000  00000000  000da1d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000010 	.word	0x20000010
 8000128:	00000000 	.word	0x00000000
 800012c:	08003c24 	.word	0x08003c24

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000014 	.word	0x20000014
 8000148:	08003c24 	.word	0x08003c24

0800014c <MX_GPIO_Init>:
 800014c:	b580      	push	{r7, lr}
 800014e:	b088      	sub	sp, #32
 8000150:	af00      	add	r7, sp, #0
 8000152:	f107 0310 	add.w	r3, r7, #16
 8000156:	2200      	movs	r2, #0
 8000158:	601a      	str	r2, [r3, #0]
 800015a:	605a      	str	r2, [r3, #4]
 800015c:	609a      	str	r2, [r3, #8]
 800015e:	60da      	str	r2, [r3, #12]
 8000160:	4b38      	ldr	r3, [pc, #224]	; (8000244 <MX_GPIO_Init+0xf8>)
 8000162:	699b      	ldr	r3, [r3, #24]
 8000164:	4a37      	ldr	r2, [pc, #220]	; (8000244 <MX_GPIO_Init+0xf8>)
 8000166:	f043 0310 	orr.w	r3, r3, #16
 800016a:	6193      	str	r3, [r2, #24]
 800016c:	4b35      	ldr	r3, [pc, #212]	; (8000244 <MX_GPIO_Init+0xf8>)
 800016e:	699b      	ldr	r3, [r3, #24]
 8000170:	f003 0310 	and.w	r3, r3, #16
 8000174:	60fb      	str	r3, [r7, #12]
 8000176:	68fb      	ldr	r3, [r7, #12]
 8000178:	4b32      	ldr	r3, [pc, #200]	; (8000244 <MX_GPIO_Init+0xf8>)
 800017a:	699b      	ldr	r3, [r3, #24]
 800017c:	4a31      	ldr	r2, [pc, #196]	; (8000244 <MX_GPIO_Init+0xf8>)
 800017e:	f043 0320 	orr.w	r3, r3, #32
 8000182:	6193      	str	r3, [r2, #24]
 8000184:	4b2f      	ldr	r3, [pc, #188]	; (8000244 <MX_GPIO_Init+0xf8>)
 8000186:	699b      	ldr	r3, [r3, #24]
 8000188:	f003 0320 	and.w	r3, r3, #32
 800018c:	60bb      	str	r3, [r7, #8]
 800018e:	68bb      	ldr	r3, [r7, #8]
 8000190:	4b2c      	ldr	r3, [pc, #176]	; (8000244 <MX_GPIO_Init+0xf8>)
 8000192:	699b      	ldr	r3, [r3, #24]
 8000194:	4a2b      	ldr	r2, [pc, #172]	; (8000244 <MX_GPIO_Init+0xf8>)
 8000196:	f043 0304 	orr.w	r3, r3, #4
 800019a:	6193      	str	r3, [r2, #24]
 800019c:	4b29      	ldr	r3, [pc, #164]	; (8000244 <MX_GPIO_Init+0xf8>)
 800019e:	699b      	ldr	r3, [r3, #24]
 80001a0:	f003 0304 	and.w	r3, r3, #4
 80001a4:	607b      	str	r3, [r7, #4]
 80001a6:	687b      	ldr	r3, [r7, #4]
 80001a8:	4b26      	ldr	r3, [pc, #152]	; (8000244 <MX_GPIO_Init+0xf8>)
 80001aa:	699b      	ldr	r3, [r3, #24]
 80001ac:	4a25      	ldr	r2, [pc, #148]	; (8000244 <MX_GPIO_Init+0xf8>)
 80001ae:	f043 0308 	orr.w	r3, r3, #8
 80001b2:	6193      	str	r3, [r2, #24]
 80001b4:	4b23      	ldr	r3, [pc, #140]	; (8000244 <MX_GPIO_Init+0xf8>)
 80001b6:	699b      	ldr	r3, [r3, #24]
 80001b8:	f003 0308 	and.w	r3, r3, #8
 80001bc:	603b      	str	r3, [r7, #0]
 80001be:	683b      	ldr	r3, [r7, #0]
 80001c0:	2200      	movs	r2, #0
 80001c2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80001c6:	4820      	ldr	r0, [pc, #128]	; (8000248 <MX_GPIO_Init+0xfc>)
 80001c8:	f001 fda8 	bl	8001d1c <HAL_GPIO_WritePin>
 80001cc:	2200      	movs	r2, #0
 80001ce:	f44f 7146 	mov.w	r1, #792	; 0x318
 80001d2:	481e      	ldr	r0, [pc, #120]	; (800024c <MX_GPIO_Init+0x100>)
 80001d4:	f001 fda2 	bl	8001d1c <HAL_GPIO_WritePin>
 80001d8:	2200      	movs	r2, #0
 80001da:	2103      	movs	r1, #3
 80001dc:	481c      	ldr	r0, [pc, #112]	; (8000250 <MX_GPIO_Init+0x104>)
 80001de:	f001 fd9d 	bl	8001d1c <HAL_GPIO_WritePin>
 80001e2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80001e6:	613b      	str	r3, [r7, #16]
 80001e8:	2301      	movs	r3, #1
 80001ea:	617b      	str	r3, [r7, #20]
 80001ec:	2300      	movs	r3, #0
 80001ee:	61bb      	str	r3, [r7, #24]
 80001f0:	2302      	movs	r3, #2
 80001f2:	61fb      	str	r3, [r7, #28]
 80001f4:	f107 0310 	add.w	r3, r7, #16
 80001f8:	4619      	mov	r1, r3
 80001fa:	4813      	ldr	r0, [pc, #76]	; (8000248 <MX_GPIO_Init+0xfc>)
 80001fc:	f001 fc12 	bl	8001a24 <HAL_GPIO_Init>
 8000200:	f44f 7346 	mov.w	r3, #792	; 0x318
 8000204:	613b      	str	r3, [r7, #16]
 8000206:	2301      	movs	r3, #1
 8000208:	617b      	str	r3, [r7, #20]
 800020a:	2300      	movs	r3, #0
 800020c:	61bb      	str	r3, [r7, #24]
 800020e:	2302      	movs	r3, #2
 8000210:	61fb      	str	r3, [r7, #28]
 8000212:	f107 0310 	add.w	r3, r7, #16
 8000216:	4619      	mov	r1, r3
 8000218:	480c      	ldr	r0, [pc, #48]	; (800024c <MX_GPIO_Init+0x100>)
 800021a:	f001 fc03 	bl	8001a24 <HAL_GPIO_Init>
 800021e:	2303      	movs	r3, #3
 8000220:	613b      	str	r3, [r7, #16]
 8000222:	2301      	movs	r3, #1
 8000224:	617b      	str	r3, [r7, #20]
 8000226:	2300      	movs	r3, #0
 8000228:	61bb      	str	r3, [r7, #24]
 800022a:	2302      	movs	r3, #2
 800022c:	61fb      	str	r3, [r7, #28]
 800022e:	f107 0310 	add.w	r3, r7, #16
 8000232:	4619      	mov	r1, r3
 8000234:	4806      	ldr	r0, [pc, #24]	; (8000250 <MX_GPIO_Init+0x104>)
 8000236:	f001 fbf5 	bl	8001a24 <HAL_GPIO_Init>
 800023a:	bf00      	nop
 800023c:	3720      	adds	r7, #32
 800023e:	46bd      	mov	sp, r7
 8000240:	bd80      	pop	{r7, pc}
 8000242:	bf00      	nop
 8000244:	40021000 	.word	0x40021000
 8000248:	40011000 	.word	0x40011000
 800024c:	40010800 	.word	0x40010800
 8000250:	40010c00 	.word	0x40010c00

08000254 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000254:	b580      	push	{r7, lr}
 8000256:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000258:	f001 fa7a 	bl	8001750 <HAL_Init>
  void joytrigcontrol();
  void joystickcontrol();
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800025c:	f000 f894 	bl	8000388 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000260:	f7ff ff74 	bl	800014c <MX_GPIO_Init>
  MX_SPI1_Init();
 8000264:	f001 f8b2 	bl	80013cc <MX_SPI1_Init>
  MX_TIM2_Init();
 8000268:	f001 f980 	bl	800156c <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */

  //nRF initialize and settings

  nRF24_Init(&hspi1);
 800026c:	483c      	ldr	r0, [pc, #240]	; (8000360 <main+0x10c>)
 800026e:	f001 f865 	bl	800133c <nRF24_Init>
  nRF24_SetRXAddress(0, "Odb");
 8000272:	493c      	ldr	r1, [pc, #240]	; (8000364 <main+0x110>)
 8000274:	2000      	movs	r0, #0
 8000276:	f000 ffa6 	bl	80011c6 <nRF24_SetRXAddress>
  nRF24_SetTXAddress("Nad");
 800027a:	483b      	ldr	r0, [pc, #236]	; (8000368 <main+0x114>)
 800027c:	f000 ffdc 	bl	8001238 <nRF24_SetTXAddress>
  nRF24_RX_Mode();
 8000280:	f000 fdea 	bl	8000e58 <nRF24_RX_Mode>

  //Set timer 2 to PWM function

  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8000284:	2104      	movs	r1, #4
 8000286:	4839      	ldr	r0, [pc, #228]	; (800036c <main+0x118>)
 8000288:	f002 ff88 	bl	800319c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 800028c:	2108      	movs	r1, #8
 800028e:	4837      	ldr	r0, [pc, #220]	; (800036c <main+0x118>)
 8000290:	f002 ff84 	bl	800319c <HAL_TIM_PWM_Start>
  time = HAL_GetTick();
 8000294:	f001 fab4 	bl	8001800 <HAL_GetTick>
 8000298:	4603      	mov	r3, r0
 800029a:	4a35      	ldr	r2, [pc, #212]	; (8000370 <main+0x11c>)
 800029c:	6013      	str	r3, [r2, #0]
  timereset = HAL_GetTick();
 800029e:	f001 faaf 	bl	8001800 <HAL_GetTick>
 80002a2:	4603      	mov	r3, r0
 80002a4:	4a33      	ldr	r2, [pc, #204]	; (8000374 <main+0x120>)
 80002a6:	6013      	str	r3, [r2, #0]
  while (1)
  {

	  //Check if there is receive message

	  if(nRF24_RXAvailible())
 80002a8:	f001 f828 	bl	80012fc <nRF24_RXAvailible>
 80002ac:	4603      	mov	r3, r0
 80002ae:	2b00      	cmp	r3, #0
 80002b0:	d02e      	beq.n	8000310 <main+0xbc>
	  	  	  {
		  	  //if working blink diode once per second
		  	  	 if (HAL_GetTick()-time >1000)
 80002b2:	f001 faa5 	bl	8001800 <HAL_GetTick>
 80002b6:	4602      	mov	r2, r0
 80002b8:	4b2d      	ldr	r3, [pc, #180]	; (8000370 <main+0x11c>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	1ad3      	subs	r3, r2, r3
 80002be:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80002c2:	d909      	bls.n	80002d8 <main+0x84>
		  	  	 {
		  	  		HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 80002c4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80002c8:	482b      	ldr	r0, [pc, #172]	; (8000378 <main+0x124>)
 80002ca:	f001 fd3f 	bl	8001d4c <HAL_GPIO_TogglePin>
		  	  		time = HAL_GetTick();
 80002ce:	f001 fa97 	bl	8001800 <HAL_GetTick>
 80002d2:	4603      	mov	r3, r0
 80002d4:	4a26      	ldr	r2, [pc, #152]	; (8000370 <main+0x11c>)
 80002d6:	6013      	str	r3, [r2, #0]
		  	  	 }
		  	  	 //read received data and save to nrfdata variable
	  	  		 nRF24_ReadRXPaylaod(nrfdata);
 80002d8:	4828      	ldr	r0, [pc, #160]	; (800037c <main+0x128>)
 80002da:	f000 fff3 	bl	80012c4 <nRF24_ReadRXPaylaod>
	  	  		 //choose working mode according to first character in received data
	  	  		 if ((int) nrfdata[0] == 35) //character #
 80002de:	4b27      	ldr	r3, [pc, #156]	; (800037c <main+0x128>)
 80002e0:	781b      	ldrb	r3, [r3, #0]
 80002e2:	2b23      	cmp	r3, #35	; 0x23
 80002e4:	d102      	bne.n	80002ec <main+0x98>
	  	  		 {
	  	  			 triggercontrol();
 80002e6:	f000 f8d9 	bl	800049c <triggercontrol>
 80002ea:	e00c      	b.n	8000306 <main+0xb2>
	  	  		 }
	  	  		 else if ((int) nrfdata[0] == 36) //character $
 80002ec:	4b23      	ldr	r3, [pc, #140]	; (800037c <main+0x128>)
 80002ee:	781b      	ldrb	r3, [r3, #0]
 80002f0:	2b24      	cmp	r3, #36	; 0x24
 80002f2:	d102      	bne.n	80002fa <main+0xa6>
	  	  		 {
	  	  			 joystickcontrol();
 80002f4:	f000 fa14 	bl	8000720 <joystickcontrol>
 80002f8:	e005      	b.n	8000306 <main+0xb2>
	  	  		 }
	  	  		 else if ((int) nrfdata[0] == 37) //character %
 80002fa:	4b20      	ldr	r3, [pc, #128]	; (800037c <main+0x128>)
 80002fc:	781b      	ldrb	r3, [r3, #0]
 80002fe:	2b25      	cmp	r3, #37	; 0x25
 8000300:	d101      	bne.n	8000306 <main+0xb2>
	  	  		 {
	  	  			 joytrigcontrol();
 8000302:	f000 f919 	bl	8000538 <joytrigcontrol>
	  	  		 }

	  	  		 timereset = HAL_GetTick();
 8000306:	f001 fa7b 	bl	8001800 <HAL_GetTick>
 800030a:	4603      	mov	r3, r0
 800030c:	4a19      	ldr	r2, [pc, #100]	; (8000374 <main+0x120>)
 800030e:	6013      	str	r3, [r2, #0]
	  	  	  }
	  //if there is no signal restart nRF24 and stop motor
	  if(HAL_GetTick()-timereset > 1000)
 8000310:	f001 fa76 	bl	8001800 <HAL_GetTick>
 8000314:	4602      	mov	r2, r0
 8000316:	4b17      	ldr	r3, [pc, #92]	; (8000374 <main+0x120>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	1ad3      	subs	r3, r2, r3
 800031c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000320:	d9c2      	bls.n	80002a8 <main+0x54>
	  {
		  nRF24_Init(&hspi1);
 8000322:	480f      	ldr	r0, [pc, #60]	; (8000360 <main+0x10c>)
 8000324:	f001 f80a 	bl	800133c <nRF24_Init>
		  nRF24_SetRXAddress(0, "Odb");
 8000328:	490e      	ldr	r1, [pc, #56]	; (8000364 <main+0x110>)
 800032a:	2000      	movs	r0, #0
 800032c:	f000 ff4b 	bl	80011c6 <nRF24_SetRXAddress>
		  nRF24_SetTXAddress("Nad");
 8000330:	480d      	ldr	r0, [pc, #52]	; (8000368 <main+0x114>)
 8000332:	f000 ff81 	bl	8001238 <nRF24_SetTXAddress>
		  nRF24_RX_Mode();
 8000336:	f000 fd8f 	bl	8000e58 <nRF24_RX_Mode>
		  HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_RESET);
 800033a:	2200      	movs	r2, #0
 800033c:	2101      	movs	r1, #1
 800033e:	4810      	ldr	r0, [pc, #64]	; (8000380 <main+0x12c>)
 8000340:	f001 fcec 	bl	8001d1c <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_RESET);
 8000344:	2200      	movs	r2, #0
 8000346:	2108      	movs	r1, #8
 8000348:	480e      	ldr	r0, [pc, #56]	; (8000384 <main+0x130>)
 800034a:	f001 fce7 	bl	8001d1c <HAL_GPIO_WritePin>
		  PWMval(1, 0);
 800034e:	2100      	movs	r1, #0
 8000350:	2001      	movs	r0, #1
 8000352:	f000 f883 	bl	800045c <PWMval>
		  PWMval(2, 0);
 8000356:	2100      	movs	r1, #0
 8000358:	2002      	movs	r0, #2
 800035a:	f000 f87f 	bl	800045c <PWMval>
	  if(nRF24_RXAvailible())
 800035e:	e7a3      	b.n	80002a8 <main+0x54>
 8000360:	20000058 	.word	0x20000058
 8000364:	08003c3c 	.word	0x08003c3c
 8000368:	08003c40 	.word	0x08003c40
 800036c:	200000b0 	.word	0x200000b0
 8000370:	20000048 	.word	0x20000048
 8000374:	2000004c 	.word	0x2000004c
 8000378:	40011000 	.word	0x40011000
 800037c:	2000002c 	.word	0x2000002c
 8000380:	40010c00 	.word	0x40010c00
 8000384:	40010800 	.word	0x40010800

08000388 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000388:	b580      	push	{r7, lr}
 800038a:	b090      	sub	sp, #64	; 0x40
 800038c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800038e:	f107 0318 	add.w	r3, r7, #24
 8000392:	2228      	movs	r2, #40	; 0x28
 8000394:	2100      	movs	r1, #0
 8000396:	4618      	mov	r0, r3
 8000398:	f003 fc3c 	bl	8003c14 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800039c:	1d3b      	adds	r3, r7, #4
 800039e:	2200      	movs	r2, #0
 80003a0:	601a      	str	r2, [r3, #0]
 80003a2:	605a      	str	r2, [r3, #4]
 80003a4:	609a      	str	r2, [r3, #8]
 80003a6:	60da      	str	r2, [r3, #12]
 80003a8:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80003aa:	2301      	movs	r3, #1
 80003ac:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80003ae:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80003b2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80003b4:	2300      	movs	r3, #0
 80003b6:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80003b8:	2301      	movs	r3, #1
 80003ba:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80003bc:	2302      	movs	r3, #2
 80003be:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80003c0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80003c4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 80003c6:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80003ca:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80003cc:	f107 0318 	add.w	r3, r7, #24
 80003d0:	4618      	mov	r0, r3
 80003d2:	f001 fcd5 	bl	8001d80 <HAL_RCC_OscConfig>
 80003d6:	4603      	mov	r3, r0
 80003d8:	2b00      	cmp	r3, #0
 80003da:	d001      	beq.n	80003e0 <SystemClock_Config+0x58>
  {
    Error_Handler();
 80003dc:	f000 fc40 	bl	8000c60 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80003e0:	230f      	movs	r3, #15
 80003e2:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80003e4:	2302      	movs	r3, #2
 80003e6:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80003e8:	2300      	movs	r3, #0
 80003ea:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80003ec:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80003f0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80003f2:	2300      	movs	r3, #0
 80003f4:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80003f6:	1d3b      	adds	r3, r7, #4
 80003f8:	2101      	movs	r1, #1
 80003fa:	4618      	mov	r0, r3
 80003fc:	f001 ff42 	bl	8002284 <HAL_RCC_ClockConfig>
 8000400:	4603      	mov	r3, r0
 8000402:	2b00      	cmp	r3, #0
 8000404:	d001      	beq.n	800040a <SystemClock_Config+0x82>
  {
    Error_Handler();
 8000406:	f000 fc2b 	bl	8000c60 <Error_Handler>
  }
}
 800040a:	bf00      	nop
 800040c:	3740      	adds	r7, #64	; 0x40
 800040e:	46bd      	mov	sp, r7
 8000410:	bd80      	pop	{r7, pc}

08000412 <map>:

/* USER CODE BEGIN 4 */

uint16_t map(uint16_t input_value, uint16_t minRange, uint16_t maxRange, uint16_t New_minRange, uint16_t New_maxRange)
{
 8000412:	b490      	push	{r4, r7}
 8000414:	b082      	sub	sp, #8
 8000416:	af00      	add	r7, sp, #0
 8000418:	4604      	mov	r4, r0
 800041a:	4608      	mov	r0, r1
 800041c:	4611      	mov	r1, r2
 800041e:	461a      	mov	r2, r3
 8000420:	4623      	mov	r3, r4
 8000422:	80fb      	strh	r3, [r7, #6]
 8000424:	4603      	mov	r3, r0
 8000426:	80bb      	strh	r3, [r7, #4]
 8000428:	460b      	mov	r3, r1
 800042a:	807b      	strh	r3, [r7, #2]
 800042c:	4613      	mov	r3, r2
 800042e:	803b      	strh	r3, [r7, #0]
	return (((input_value - minRange)*(New_maxRange - New_minRange))/(maxRange - minRange) + New_minRange);
 8000430:	88fa      	ldrh	r2, [r7, #6]
 8000432:	88bb      	ldrh	r3, [r7, #4]
 8000434:	1ad3      	subs	r3, r2, r3
 8000436:	8a39      	ldrh	r1, [r7, #16]
 8000438:	883a      	ldrh	r2, [r7, #0]
 800043a:	1a8a      	subs	r2, r1, r2
 800043c:	fb03 f202 	mul.w	r2, r3, r2
 8000440:	8879      	ldrh	r1, [r7, #2]
 8000442:	88bb      	ldrh	r3, [r7, #4]
 8000444:	1acb      	subs	r3, r1, r3
 8000446:	fb92 f3f3 	sdiv	r3, r2, r3
 800044a:	b29a      	uxth	r2, r3
 800044c:	883b      	ldrh	r3, [r7, #0]
 800044e:	4413      	add	r3, r2
 8000450:	b29b      	uxth	r3, r3
}
 8000452:	4618      	mov	r0, r3
 8000454:	3708      	adds	r7, #8
 8000456:	46bd      	mov	sp, r7
 8000458:	bc90      	pop	{r4, r7}
 800045a:	4770      	bx	lr

0800045c <PWMval>:
void PWMval(uint8_t ch, uint16_t val)
{
 800045c:	b480      	push	{r7}
 800045e:	b083      	sub	sp, #12
 8000460:	af00      	add	r7, sp, #0
 8000462:	4603      	mov	r3, r0
 8000464:	460a      	mov	r2, r1
 8000466:	71fb      	strb	r3, [r7, #7]
 8000468:	4613      	mov	r3, r2
 800046a:	80bb      	strh	r3, [r7, #4]
	switch (ch)
 800046c:	79fb      	ldrb	r3, [r7, #7]
 800046e:	2b01      	cmp	r3, #1
 8000470:	d002      	beq.n	8000478 <PWMval+0x1c>
 8000472:	2b02      	cmp	r3, #2
 8000474:	d005      	beq.n	8000482 <PWMval+0x26>
	break;
	case 2:
	__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_3, val);
	break;
	}
}
 8000476:	e009      	b.n	800048c <PWMval+0x30>
	__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_2, val);
 8000478:	4b07      	ldr	r3, [pc, #28]	; (8000498 <PWMval+0x3c>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	88ba      	ldrh	r2, [r7, #4]
 800047e:	639a      	str	r2, [r3, #56]	; 0x38
	break;
 8000480:	e004      	b.n	800048c <PWMval+0x30>
	__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_3, val);
 8000482:	4b05      	ldr	r3, [pc, #20]	; (8000498 <PWMval+0x3c>)
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	88ba      	ldrh	r2, [r7, #4]
 8000488:	63da      	str	r2, [r3, #60]	; 0x3c
	break;
 800048a:	bf00      	nop
}
 800048c:	bf00      	nop
 800048e:	370c      	adds	r7, #12
 8000490:	46bd      	mov	sp, r7
 8000492:	bc80      	pop	{r7}
 8000494:	4770      	bx	lr
 8000496:	bf00      	nop
 8000498:	200000b0 	.word	0x200000b0

0800049c <triggercontrol>:
void triggercontrol()
{
 800049c:	b580      	push	{r7, lr}
 800049e:	b082      	sub	sp, #8
 80004a0:	af02      	add	r7, sp, #8

	lpwm = map(nrfdata[3],32,127,0,1000);
 80004a2:	4b20      	ldr	r3, [pc, #128]	; (8000524 <triggercontrol+0x88>)
 80004a4:	78db      	ldrb	r3, [r3, #3]
 80004a6:	b298      	uxth	r0, r3
 80004a8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80004ac:	9300      	str	r3, [sp, #0]
 80004ae:	2300      	movs	r3, #0
 80004b0:	227f      	movs	r2, #127	; 0x7f
 80004b2:	2120      	movs	r1, #32
 80004b4:	f7ff ffad 	bl	8000412 <map>
 80004b8:	4603      	mov	r3, r0
 80004ba:	461a      	mov	r2, r3
 80004bc:	4b1a      	ldr	r3, [pc, #104]	; (8000528 <triggercontrol+0x8c>)
 80004be:	801a      	strh	r2, [r3, #0]
	rpwm = map(nrfdata[4],32,127,0,1000);
 80004c0:	4b18      	ldr	r3, [pc, #96]	; (8000524 <triggercontrol+0x88>)
 80004c2:	791b      	ldrb	r3, [r3, #4]
 80004c4:	b298      	uxth	r0, r3
 80004c6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80004ca:	9300      	str	r3, [sp, #0]
 80004cc:	2300      	movs	r3, #0
 80004ce:	227f      	movs	r2, #127	; 0x7f
 80004d0:	2120      	movs	r1, #32
 80004d2:	f7ff ff9e 	bl	8000412 <map>
 80004d6:	4603      	mov	r3, r0
 80004d8:	461a      	mov	r2, r3
 80004da:	4b14      	ldr	r3, [pc, #80]	; (800052c <triggercontrol+0x90>)
 80004dc:	801a      	strh	r2, [r3, #0]
	HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_RESET);
 80004de:	2200      	movs	r2, #0
 80004e0:	2102      	movs	r1, #2
 80004e2:	4813      	ldr	r0, [pc, #76]	; (8000530 <triggercontrol+0x94>)
 80004e4:	f001 fc1a 	bl	8001d1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_RESET);
 80004e8:	2200      	movs	r2, #0
 80004ea:	2110      	movs	r1, #16
 80004ec:	4811      	ldr	r0, [pc, #68]	; (8000534 <triggercontrol+0x98>)
 80004ee:	f001 fc15 	bl	8001d1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_SET);
 80004f2:	2201      	movs	r2, #1
 80004f4:	2101      	movs	r1, #1
 80004f6:	480e      	ldr	r0, [pc, #56]	; (8000530 <triggercontrol+0x94>)
 80004f8:	f001 fc10 	bl	8001d1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_SET);
 80004fc:	2201      	movs	r2, #1
 80004fe:	2108      	movs	r1, #8
 8000500:	480c      	ldr	r0, [pc, #48]	; (8000534 <triggercontrol+0x98>)
 8000502:	f001 fc0b 	bl	8001d1c <HAL_GPIO_WritePin>
	PWMval(1, lpwm);
 8000506:	4b08      	ldr	r3, [pc, #32]	; (8000528 <triggercontrol+0x8c>)
 8000508:	881b      	ldrh	r3, [r3, #0]
 800050a:	4619      	mov	r1, r3
 800050c:	2001      	movs	r0, #1
 800050e:	f7ff ffa5 	bl	800045c <PWMval>
	PWMval(2, rpwm);
 8000512:	4b06      	ldr	r3, [pc, #24]	; (800052c <triggercontrol+0x90>)
 8000514:	881b      	ldrh	r3, [r3, #0]
 8000516:	4619      	mov	r1, r3
 8000518:	2002      	movs	r0, #2
 800051a:	f7ff ff9f 	bl	800045c <PWMval>
}
 800051e:	bf00      	nop
 8000520:	46bd      	mov	sp, r7
 8000522:	bd80      	pop	{r7, pc}
 8000524:	2000002c 	.word	0x2000002c
 8000528:	20000032 	.word	0x20000032
 800052c:	20000034 	.word	0x20000034
 8000530:	40010c00 	.word	0x40010c00
 8000534:	40010800 	.word	0x40010800

08000538 <joytrigcontrol>:
void joytrigcontrol()
{
 8000538:	b590      	push	{r4, r7, lr}
 800053a:	b083      	sub	sp, #12
 800053c:	af02      	add	r7, sp, #8
	pwm1 = map(nrfdata[3],32,127,0,1000);
 800053e:	4b6b      	ldr	r3, [pc, #428]	; (80006ec <joytrigcontrol+0x1b4>)
 8000540:	78db      	ldrb	r3, [r3, #3]
 8000542:	b298      	uxth	r0, r3
 8000544:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000548:	9300      	str	r3, [sp, #0]
 800054a:	2300      	movs	r3, #0
 800054c:	227f      	movs	r2, #127	; 0x7f
 800054e:	2120      	movs	r1, #32
 8000550:	f7ff ff5f 	bl	8000412 <map>
 8000554:	4603      	mov	r3, r0
 8000556:	461a      	mov	r2, r3
 8000558:	4b65      	ldr	r3, [pc, #404]	; (80006f0 <joytrigcontrol+0x1b8>)
 800055a:	801a      	strh	r2, [r3, #0]
	pwm2 = map(nrfdata[4],32,127,0,1000);
 800055c:	4b63      	ldr	r3, [pc, #396]	; (80006ec <joytrigcontrol+0x1b4>)
 800055e:	791b      	ldrb	r3, [r3, #4]
 8000560:	b298      	uxth	r0, r3
 8000562:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000566:	9300      	str	r3, [sp, #0]
 8000568:	2300      	movs	r3, #0
 800056a:	227f      	movs	r2, #127	; 0x7f
 800056c:	2120      	movs	r1, #32
 800056e:	f7ff ff50 	bl	8000412 <map>
 8000572:	4603      	mov	r3, r0
 8000574:	461a      	mov	r2, r3
 8000576:	4b5f      	ldr	r3, [pc, #380]	; (80006f4 <joytrigcontrol+0x1bc>)
 8000578:	801a      	strh	r2, [r3, #0]
	HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_RESET);
 800057a:	2200      	movs	r2, #0
 800057c:	2102      	movs	r1, #2
 800057e:	485e      	ldr	r0, [pc, #376]	; (80006f8 <joytrigcontrol+0x1c0>)
 8000580:	f001 fbcc 	bl	8001d1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_RESET);
 8000584:	2200      	movs	r2, #0
 8000586:	2110      	movs	r1, #16
 8000588:	485c      	ldr	r0, [pc, #368]	; (80006fc <joytrigcontrol+0x1c4>)
 800058a:	f001 fbc7 	bl	8001d1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_SET);
 800058e:	2201      	movs	r2, #1
 8000590:	2101      	movs	r1, #1
 8000592:	4859      	ldr	r0, [pc, #356]	; (80006f8 <joytrigcontrol+0x1c0>)
 8000594:	f001 fbc2 	bl	8001d1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_SET);
 8000598:	2201      	movs	r2, #1
 800059a:	2108      	movs	r1, #8
 800059c:	4857      	ldr	r0, [pc, #348]	; (80006fc <joytrigcontrol+0x1c4>)
 800059e:	f001 fbbd 	bl	8001d1c <HAL_GPIO_WritePin>
	steringpwm = map(nrfdata[1],32,127,0,1000);
 80005a2:	4b52      	ldr	r3, [pc, #328]	; (80006ec <joytrigcontrol+0x1b4>)
 80005a4:	785b      	ldrb	r3, [r3, #1]
 80005a6:	b298      	uxth	r0, r3
 80005a8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80005ac:	9300      	str	r3, [sp, #0]
 80005ae:	2300      	movs	r3, #0
 80005b0:	227f      	movs	r2, #127	; 0x7f
 80005b2:	2120      	movs	r1, #32
 80005b4:	f7ff ff2d 	bl	8000412 <map>
 80005b8:	4603      	mov	r3, r0
 80005ba:	461a      	mov	r2, r3
 80005bc:	4b50      	ldr	r3, [pc, #320]	; (8000700 <joytrigcontrol+0x1c8>)
 80005be:	801a      	strh	r2, [r3, #0]
	power = pwm2 - pwm1;
 80005c0:	4b4c      	ldr	r3, [pc, #304]	; (80006f4 <joytrigcontrol+0x1bc>)
 80005c2:	881b      	ldrh	r3, [r3, #0]
 80005c4:	461a      	mov	r2, r3
 80005c6:	4b4a      	ldr	r3, [pc, #296]	; (80006f0 <joytrigcontrol+0x1b8>)
 80005c8:	881b      	ldrh	r3, [r3, #0]
 80005ca:	1ad3      	subs	r3, r2, r3
 80005cc:	4a4d      	ldr	r2, [pc, #308]	; (8000704 <joytrigcontrol+0x1cc>)
 80005ce:	6013      	str	r3, [r2, #0]
	if (power < 0)
 80005d0:	4b4c      	ldr	r3, [pc, #304]	; (8000704 <joytrigcontrol+0x1cc>)
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	2b00      	cmp	r3, #0
 80005d6:	da18      	bge.n	800060a <joytrigcontrol+0xd2>
		{
			HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_RESET);
 80005d8:	2200      	movs	r2, #0
 80005da:	2101      	movs	r1, #1
 80005dc:	4846      	ldr	r0, [pc, #280]	; (80006f8 <joytrigcontrol+0x1c0>)
 80005de:	f001 fb9d 	bl	8001d1c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_RESET);
 80005e2:	2200      	movs	r2, #0
 80005e4:	2108      	movs	r1, #8
 80005e6:	4845      	ldr	r0, [pc, #276]	; (80006fc <joytrigcontrol+0x1c4>)
 80005e8:	f001 fb98 	bl	8001d1c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_SET);
 80005ec:	2201      	movs	r2, #1
 80005ee:	2102      	movs	r1, #2
 80005f0:	4841      	ldr	r0, [pc, #260]	; (80006f8 <joytrigcontrol+0x1c0>)
 80005f2:	f001 fb93 	bl	8001d1c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_SET);
 80005f6:	2201      	movs	r2, #1
 80005f8:	2110      	movs	r1, #16
 80005fa:	4840      	ldr	r0, [pc, #256]	; (80006fc <joytrigcontrol+0x1c4>)
 80005fc:	f001 fb8e 	bl	8001d1c <HAL_GPIO_WritePin>
			power = power * (-1);
 8000600:	4b40      	ldr	r3, [pc, #256]	; (8000704 <joytrigcontrol+0x1cc>)
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	425b      	negs	r3, r3
 8000606:	4a3f      	ldr	r2, [pc, #252]	; (8000704 <joytrigcontrol+0x1cc>)
 8000608:	6013      	str	r3, [r2, #0]
		}
	if(steringpwm < lowvalue)
 800060a:	4b3d      	ldr	r3, [pc, #244]	; (8000700 <joytrigcontrol+0x1c8>)
 800060c:	881a      	ldrh	r2, [r3, #0]
 800060e:	4b3e      	ldr	r3, [pc, #248]	; (8000708 <joytrigcontrol+0x1d0>)
 8000610:	881b      	ldrh	r3, [r3, #0]
 8000612:	429a      	cmp	r2, r3
 8000614:	d225      	bcs.n	8000662 <joytrigcontrol+0x12a>
		{
			lpwm = power;
 8000616:	4b3b      	ldr	r3, [pc, #236]	; (8000704 <joytrigcontrol+0x1cc>)
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	b29a      	uxth	r2, r3
 800061c:	4b3b      	ldr	r3, [pc, #236]	; (800070c <joytrigcontrol+0x1d4>)
 800061e:	801a      	strh	r2, [r3, #0]
			irpwm = power - (1000-map(steringpwm,0,lowvalue,0,1000));
 8000620:	4b38      	ldr	r3, [pc, #224]	; (8000704 <joytrigcontrol+0x1cc>)
 8000622:	681c      	ldr	r4, [r3, #0]
 8000624:	4b36      	ldr	r3, [pc, #216]	; (8000700 <joytrigcontrol+0x1c8>)
 8000626:	8818      	ldrh	r0, [r3, #0]
 8000628:	4b37      	ldr	r3, [pc, #220]	; (8000708 <joytrigcontrol+0x1d0>)
 800062a:	881a      	ldrh	r2, [r3, #0]
 800062c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000630:	9300      	str	r3, [sp, #0]
 8000632:	2300      	movs	r3, #0
 8000634:	2100      	movs	r1, #0
 8000636:	f7ff feec 	bl	8000412 <map>
 800063a:	4603      	mov	r3, r0
 800063c:	f5c3 737a 	rsb	r3, r3, #1000	; 0x3e8
 8000640:	1ae3      	subs	r3, r4, r3
 8000642:	4a33      	ldr	r2, [pc, #204]	; (8000710 <joytrigcontrol+0x1d8>)
 8000644:	6013      	str	r3, [r2, #0]
			if (irpwm < 0)
 8000646:	4b32      	ldr	r3, [pc, #200]	; (8000710 <joytrigcontrol+0x1d8>)
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	2b00      	cmp	r3, #0
 800064c:	da03      	bge.n	8000656 <joytrigcontrol+0x11e>
			{
				rpwm = 0;
 800064e:	4b31      	ldr	r3, [pc, #196]	; (8000714 <joytrigcontrol+0x1dc>)
 8000650:	2200      	movs	r2, #0
 8000652:	801a      	strh	r2, [r3, #0]
 8000654:	e03a      	b.n	80006cc <joytrigcontrol+0x194>
			}
			else
			{
				rpwm = irpwm;
 8000656:	4b2e      	ldr	r3, [pc, #184]	; (8000710 <joytrigcontrol+0x1d8>)
 8000658:	681b      	ldr	r3, [r3, #0]
 800065a:	b29a      	uxth	r2, r3
 800065c:	4b2d      	ldr	r3, [pc, #180]	; (8000714 <joytrigcontrol+0x1dc>)
 800065e:	801a      	strh	r2, [r3, #0]
 8000660:	e034      	b.n	80006cc <joytrigcontrol+0x194>
			}
		}
	else if(steringpwm > higvalue)
 8000662:	4b27      	ldr	r3, [pc, #156]	; (8000700 <joytrigcontrol+0x1c8>)
 8000664:	881a      	ldrh	r2, [r3, #0]
 8000666:	4b2c      	ldr	r3, [pc, #176]	; (8000718 <joytrigcontrol+0x1e0>)
 8000668:	881b      	ldrh	r3, [r3, #0]
 800066a:	429a      	cmp	r2, r3
 800066c:	d924      	bls.n	80006b8 <joytrigcontrol+0x180>
		{
			ilpwm = power - map(steringpwm,higvalue,1000,0,1000);
 800066e:	4b25      	ldr	r3, [pc, #148]	; (8000704 <joytrigcontrol+0x1cc>)
 8000670:	681c      	ldr	r4, [r3, #0]
 8000672:	4b23      	ldr	r3, [pc, #140]	; (8000700 <joytrigcontrol+0x1c8>)
 8000674:	8818      	ldrh	r0, [r3, #0]
 8000676:	4b28      	ldr	r3, [pc, #160]	; (8000718 <joytrigcontrol+0x1e0>)
 8000678:	8819      	ldrh	r1, [r3, #0]
 800067a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800067e:	9300      	str	r3, [sp, #0]
 8000680:	2300      	movs	r3, #0
 8000682:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000686:	f7ff fec4 	bl	8000412 <map>
 800068a:	4603      	mov	r3, r0
 800068c:	1ae3      	subs	r3, r4, r3
 800068e:	4a23      	ldr	r2, [pc, #140]	; (800071c <joytrigcontrol+0x1e4>)
 8000690:	6013      	str	r3, [r2, #0]
			rpwm = power;
 8000692:	4b1c      	ldr	r3, [pc, #112]	; (8000704 <joytrigcontrol+0x1cc>)
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	b29a      	uxth	r2, r3
 8000698:	4b1e      	ldr	r3, [pc, #120]	; (8000714 <joytrigcontrol+0x1dc>)
 800069a:	801a      	strh	r2, [r3, #0]
			if (ilpwm < 0)
 800069c:	4b1f      	ldr	r3, [pc, #124]	; (800071c <joytrigcontrol+0x1e4>)
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	da03      	bge.n	80006ac <joytrigcontrol+0x174>
			{
				lpwm = 0;
 80006a4:	4b19      	ldr	r3, [pc, #100]	; (800070c <joytrigcontrol+0x1d4>)
 80006a6:	2200      	movs	r2, #0
 80006a8:	801a      	strh	r2, [r3, #0]
 80006aa:	e00f      	b.n	80006cc <joytrigcontrol+0x194>
			}
			else
			{
				lpwm = ilpwm;
 80006ac:	4b1b      	ldr	r3, [pc, #108]	; (800071c <joytrigcontrol+0x1e4>)
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	b29a      	uxth	r2, r3
 80006b2:	4b16      	ldr	r3, [pc, #88]	; (800070c <joytrigcontrol+0x1d4>)
 80006b4:	801a      	strh	r2, [r3, #0]
 80006b6:	e009      	b.n	80006cc <joytrigcontrol+0x194>
			}
		}
	else
		{
			rpwm = power;
 80006b8:	4b12      	ldr	r3, [pc, #72]	; (8000704 <joytrigcontrol+0x1cc>)
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	b29a      	uxth	r2, r3
 80006be:	4b15      	ldr	r3, [pc, #84]	; (8000714 <joytrigcontrol+0x1dc>)
 80006c0:	801a      	strh	r2, [r3, #0]
			lpwm = power;
 80006c2:	4b10      	ldr	r3, [pc, #64]	; (8000704 <joytrigcontrol+0x1cc>)
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	b29a      	uxth	r2, r3
 80006c8:	4b10      	ldr	r3, [pc, #64]	; (800070c <joytrigcontrol+0x1d4>)
 80006ca:	801a      	strh	r2, [r3, #0]
		}
	PWMval(1, rpwm);
 80006cc:	4b11      	ldr	r3, [pc, #68]	; (8000714 <joytrigcontrol+0x1dc>)
 80006ce:	881b      	ldrh	r3, [r3, #0]
 80006d0:	4619      	mov	r1, r3
 80006d2:	2001      	movs	r0, #1
 80006d4:	f7ff fec2 	bl	800045c <PWMval>
	PWMval(2, lpwm);
 80006d8:	4b0c      	ldr	r3, [pc, #48]	; (800070c <joytrigcontrol+0x1d4>)
 80006da:	881b      	ldrh	r3, [r3, #0]
 80006dc:	4619      	mov	r1, r3
 80006de:	2002      	movs	r0, #2
 80006e0:	f7ff febc 	bl	800045c <PWMval>
}
 80006e4:	bf00      	nop
 80006e6:	3704      	adds	r7, #4
 80006e8:	46bd      	mov	sp, r7
 80006ea:	bd90      	pop	{r4, r7, pc}
 80006ec:	2000002c 	.word	0x2000002c
 80006f0:	20000036 	.word	0x20000036
 80006f4:	20000038 	.word	0x20000038
 80006f8:	40010c00 	.word	0x40010c00
 80006fc:	40010800 	.word	0x40010800
 8000700:	2000003a 	.word	0x2000003a
 8000704:	2000003c 	.word	0x2000003c
 8000708:	20000000 	.word	0x20000000
 800070c:	20000032 	.word	0x20000032
 8000710:	20000044 	.word	0x20000044
 8000714:	20000034 	.word	0x20000034
 8000718:	20000002 	.word	0x20000002
 800071c:	20000040 	.word	0x20000040

08000720 <joystickcontrol>:

void joystickcontrol()
{
 8000720:	b590      	push	{r4, r7, lr}
 8000722:	b083      	sub	sp, #12
 8000724:	af02      	add	r7, sp, #8
	lpwm = map(nrfdata[1],32,127,0,1000);
 8000726:	4ba0      	ldr	r3, [pc, #640]	; (80009a8 <joystickcontrol+0x288>)
 8000728:	785b      	ldrb	r3, [r3, #1]
 800072a:	b298      	uxth	r0, r3
 800072c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000730:	9300      	str	r3, [sp, #0]
 8000732:	2300      	movs	r3, #0
 8000734:	227f      	movs	r2, #127	; 0x7f
 8000736:	2120      	movs	r1, #32
 8000738:	f7ff fe6b 	bl	8000412 <map>
 800073c:	4603      	mov	r3, r0
 800073e:	461a      	mov	r2, r3
 8000740:	4b9a      	ldr	r3, [pc, #616]	; (80009ac <joystickcontrol+0x28c>)
 8000742:	801a      	strh	r2, [r3, #0]
	rpwm = map(nrfdata[2],32,127,0,1000);
 8000744:	4b98      	ldr	r3, [pc, #608]	; (80009a8 <joystickcontrol+0x288>)
 8000746:	789b      	ldrb	r3, [r3, #2]
 8000748:	b298      	uxth	r0, r3
 800074a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800074e:	9300      	str	r3, [sp, #0]
 8000750:	2300      	movs	r3, #0
 8000752:	227f      	movs	r2, #127	; 0x7f
 8000754:	2120      	movs	r1, #32
 8000756:	f7ff fe5c 	bl	8000412 <map>
 800075a:	4603      	mov	r3, r0
 800075c:	461a      	mov	r2, r3
 800075e:	4b94      	ldr	r3, [pc, #592]	; (80009b0 <joystickcontrol+0x290>)
 8000760:	801a      	strh	r2, [r3, #0]
	if(lowvalue <= lpwm && lpwm <= higvalue && lowvalue <= rpwm && rpwm <= higvalue)
 8000762:	4b94      	ldr	r3, [pc, #592]	; (80009b4 <joystickcontrol+0x294>)
 8000764:	881a      	ldrh	r2, [r3, #0]
 8000766:	4b91      	ldr	r3, [pc, #580]	; (80009ac <joystickcontrol+0x28c>)
 8000768:	881b      	ldrh	r3, [r3, #0]
 800076a:	429a      	cmp	r2, r3
 800076c:	d831      	bhi.n	80007d2 <joystickcontrol+0xb2>
 800076e:	4b8f      	ldr	r3, [pc, #572]	; (80009ac <joystickcontrol+0x28c>)
 8000770:	881a      	ldrh	r2, [r3, #0]
 8000772:	4b91      	ldr	r3, [pc, #580]	; (80009b8 <joystickcontrol+0x298>)
 8000774:	881b      	ldrh	r3, [r3, #0]
 8000776:	429a      	cmp	r2, r3
 8000778:	d82b      	bhi.n	80007d2 <joystickcontrol+0xb2>
 800077a:	4b8e      	ldr	r3, [pc, #568]	; (80009b4 <joystickcontrol+0x294>)
 800077c:	881a      	ldrh	r2, [r3, #0]
 800077e:	4b8c      	ldr	r3, [pc, #560]	; (80009b0 <joystickcontrol+0x290>)
 8000780:	881b      	ldrh	r3, [r3, #0]
 8000782:	429a      	cmp	r2, r3
 8000784:	d825      	bhi.n	80007d2 <joystickcontrol+0xb2>
 8000786:	4b8a      	ldr	r3, [pc, #552]	; (80009b0 <joystickcontrol+0x290>)
 8000788:	881a      	ldrh	r2, [r3, #0]
 800078a:	4b8b      	ldr	r3, [pc, #556]	; (80009b8 <joystickcontrol+0x298>)
 800078c:	881b      	ldrh	r3, [r3, #0]
 800078e:	429a      	cmp	r2, r3
 8000790:	d81f      	bhi.n	80007d2 <joystickcontrol+0xb2>
	{
		HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_RESET);
 8000792:	2200      	movs	r2, #0
 8000794:	2102      	movs	r1, #2
 8000796:	4889      	ldr	r0, [pc, #548]	; (80009bc <joystickcontrol+0x29c>)
 8000798:	f001 fac0 	bl	8001d1c <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_RESET);
 800079c:	2200      	movs	r2, #0
 800079e:	2110      	movs	r1, #16
 80007a0:	4887      	ldr	r0, [pc, #540]	; (80009c0 <joystickcontrol+0x2a0>)
 80007a2:	f001 fabb 	bl	8001d1c <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_RESET);
 80007a6:	2200      	movs	r2, #0
 80007a8:	2101      	movs	r1, #1
 80007aa:	4884      	ldr	r0, [pc, #528]	; (80009bc <joystickcontrol+0x29c>)
 80007ac:	f001 fab6 	bl	8001d1c <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_RESET);
 80007b0:	2200      	movs	r2, #0
 80007b2:	2108      	movs	r1, #8
 80007b4:	4882      	ldr	r0, [pc, #520]	; (80009c0 <joystickcontrol+0x2a0>)
 80007b6:	f001 fab1 	bl	8001d1c <HAL_GPIO_WritePin>
		HAL_Delay(10);
 80007ba:	200a      	movs	r0, #10
 80007bc:	f001 f82a 	bl	8001814 <HAL_Delay>
		PWMval(1, 0);
 80007c0:	2100      	movs	r1, #0
 80007c2:	2001      	movs	r0, #1
 80007c4:	f7ff fe4a 	bl	800045c <PWMval>
		PWMval(2, 0);
 80007c8:	2100      	movs	r1, #0
 80007ca:	2002      	movs	r0, #2
 80007cc:	f7ff fe46 	bl	800045c <PWMval>

		}


	}
}
 80007d0:	e235      	b.n	8000c3e <joystickcontrol+0x51e>
		if (rpwm < lowvalue)
 80007d2:	4b77      	ldr	r3, [pc, #476]	; (80009b0 <joystickcontrol+0x290>)
 80007d4:	881a      	ldrh	r2, [r3, #0]
 80007d6:	4b77      	ldr	r3, [pc, #476]	; (80009b4 <joystickcontrol+0x294>)
 80007d8:	881b      	ldrh	r3, [r3, #0]
 80007da:	429a      	cmp	r2, r3
 80007dc:	f080 80f2 	bcs.w	80009c4 <joystickcontrol+0x2a4>
			if(lpwm < lowvalue)
 80007e0:	4b72      	ldr	r3, [pc, #456]	; (80009ac <joystickcontrol+0x28c>)
 80007e2:	881a      	ldrh	r2, [r3, #0]
 80007e4:	4b73      	ldr	r3, [pc, #460]	; (80009b4 <joystickcontrol+0x294>)
 80007e6:	881b      	ldrh	r3, [r3, #0]
 80007e8:	429a      	cmp	r2, r3
 80007ea:	d249      	bcs.n	8000880 <joystickcontrol+0x160>
				rpwm =1000- map(rpwm,0,lowvalue,0,1000);
 80007ec:	4b70      	ldr	r3, [pc, #448]	; (80009b0 <joystickcontrol+0x290>)
 80007ee:	8818      	ldrh	r0, [r3, #0]
 80007f0:	4b70      	ldr	r3, [pc, #448]	; (80009b4 <joystickcontrol+0x294>)
 80007f2:	881a      	ldrh	r2, [r3, #0]
 80007f4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80007f8:	9300      	str	r3, [sp, #0]
 80007fa:	2300      	movs	r3, #0
 80007fc:	2100      	movs	r1, #0
 80007fe:	f7ff fe08 	bl	8000412 <map>
 8000802:	4603      	mov	r3, r0
 8000804:	f5c3 737a 	rsb	r3, r3, #1000	; 0x3e8
 8000808:	b29a      	uxth	r2, r3
 800080a:	4b69      	ldr	r3, [pc, #420]	; (80009b0 <joystickcontrol+0x290>)
 800080c:	801a      	strh	r2, [r3, #0]
				lpwm = rpwm + 1000-map(lpwm,0,lowvalue,0,1000);
 800080e:	4b68      	ldr	r3, [pc, #416]	; (80009b0 <joystickcontrol+0x290>)
 8000810:	881c      	ldrh	r4, [r3, #0]
 8000812:	4b66      	ldr	r3, [pc, #408]	; (80009ac <joystickcontrol+0x28c>)
 8000814:	8818      	ldrh	r0, [r3, #0]
 8000816:	4b67      	ldr	r3, [pc, #412]	; (80009b4 <joystickcontrol+0x294>)
 8000818:	881a      	ldrh	r2, [r3, #0]
 800081a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800081e:	9300      	str	r3, [sp, #0]
 8000820:	2300      	movs	r3, #0
 8000822:	2100      	movs	r1, #0
 8000824:	f7ff fdf5 	bl	8000412 <map>
 8000828:	4603      	mov	r3, r0
 800082a:	1ae3      	subs	r3, r4, r3
 800082c:	b29b      	uxth	r3, r3
 800082e:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8000832:	b29a      	uxth	r2, r3
 8000834:	4b5d      	ldr	r3, [pc, #372]	; (80009ac <joystickcontrol+0x28c>)
 8000836:	801a      	strh	r2, [r3, #0]
				HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_RESET);
 8000838:	2200      	movs	r2, #0
 800083a:	2102      	movs	r1, #2
 800083c:	485f      	ldr	r0, [pc, #380]	; (80009bc <joystickcontrol+0x29c>)
 800083e:	f001 fa6d 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_RESET);
 8000842:	2200      	movs	r2, #0
 8000844:	2110      	movs	r1, #16
 8000846:	485e      	ldr	r0, [pc, #376]	; (80009c0 <joystickcontrol+0x2a0>)
 8000848:	f001 fa68 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_SET);
 800084c:	2201      	movs	r2, #1
 800084e:	2101      	movs	r1, #1
 8000850:	485a      	ldr	r0, [pc, #360]	; (80009bc <joystickcontrol+0x29c>)
 8000852:	f001 fa63 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_SET);
 8000856:	2201      	movs	r2, #1
 8000858:	2108      	movs	r1, #8
 800085a:	4859      	ldr	r0, [pc, #356]	; (80009c0 <joystickcontrol+0x2a0>)
 800085c:	f001 fa5e 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_Delay(10);
 8000860:	200a      	movs	r0, #10
 8000862:	f000 ffd7 	bl	8001814 <HAL_Delay>
				PWMval(1, rpwm);
 8000866:	4b52      	ldr	r3, [pc, #328]	; (80009b0 <joystickcontrol+0x290>)
 8000868:	881b      	ldrh	r3, [r3, #0]
 800086a:	4619      	mov	r1, r3
 800086c:	2001      	movs	r0, #1
 800086e:	f7ff fdf5 	bl	800045c <PWMval>
				PWMval(2, lpwm);
 8000872:	4b4e      	ldr	r3, [pc, #312]	; (80009ac <joystickcontrol+0x28c>)
 8000874:	881b      	ldrh	r3, [r3, #0]
 8000876:	4619      	mov	r1, r3
 8000878:	2002      	movs	r0, #2
 800087a:	f7ff fdef 	bl	800045c <PWMval>
}
 800087e:	e1de      	b.n	8000c3e <joystickcontrol+0x51e>
			else if(lpwm >higvalue)
 8000880:	4b4a      	ldr	r3, [pc, #296]	; (80009ac <joystickcontrol+0x28c>)
 8000882:	881a      	ldrh	r2, [r3, #0]
 8000884:	4b4c      	ldr	r3, [pc, #304]	; (80009b8 <joystickcontrol+0x298>)
 8000886:	881b      	ldrh	r3, [r3, #0]
 8000888:	429a      	cmp	r2, r3
 800088a:	d94a      	bls.n	8000922 <joystickcontrol+0x202>
				lpwm = 1000-map(lpwm,higvalue,1000,0,1000);
 800088c:	4b47      	ldr	r3, [pc, #284]	; (80009ac <joystickcontrol+0x28c>)
 800088e:	8818      	ldrh	r0, [r3, #0]
 8000890:	4b49      	ldr	r3, [pc, #292]	; (80009b8 <joystickcontrol+0x298>)
 8000892:	8819      	ldrh	r1, [r3, #0]
 8000894:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000898:	9300      	str	r3, [sp, #0]
 800089a:	2300      	movs	r3, #0
 800089c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80008a0:	f7ff fdb7 	bl	8000412 <map>
 80008a4:	4603      	mov	r3, r0
 80008a6:	f5c3 737a 	rsb	r3, r3, #1000	; 0x3e8
 80008aa:	b29a      	uxth	r2, r3
 80008ac:	4b3f      	ldr	r3, [pc, #252]	; (80009ac <joystickcontrol+0x28c>)
 80008ae:	801a      	strh	r2, [r3, #0]
				rpwm = 1000-map(rpwm,0,lowvalue,0,1000)+ lpwm;
 80008b0:	4b3e      	ldr	r3, [pc, #248]	; (80009ac <joystickcontrol+0x28c>)
 80008b2:	881c      	ldrh	r4, [r3, #0]
 80008b4:	4b3e      	ldr	r3, [pc, #248]	; (80009b0 <joystickcontrol+0x290>)
 80008b6:	8818      	ldrh	r0, [r3, #0]
 80008b8:	4b3e      	ldr	r3, [pc, #248]	; (80009b4 <joystickcontrol+0x294>)
 80008ba:	881a      	ldrh	r2, [r3, #0]
 80008bc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80008c0:	9300      	str	r3, [sp, #0]
 80008c2:	2300      	movs	r3, #0
 80008c4:	2100      	movs	r1, #0
 80008c6:	f7ff fda4 	bl	8000412 <map>
 80008ca:	4603      	mov	r3, r0
 80008cc:	1ae3      	subs	r3, r4, r3
 80008ce:	b29b      	uxth	r3, r3
 80008d0:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80008d4:	b29a      	uxth	r2, r3
 80008d6:	4b36      	ldr	r3, [pc, #216]	; (80009b0 <joystickcontrol+0x290>)
 80008d8:	801a      	strh	r2, [r3, #0]
				HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_RESET);
 80008da:	2200      	movs	r2, #0
 80008dc:	2102      	movs	r1, #2
 80008de:	4837      	ldr	r0, [pc, #220]	; (80009bc <joystickcontrol+0x29c>)
 80008e0:	f001 fa1c 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_RESET);
 80008e4:	2200      	movs	r2, #0
 80008e6:	2110      	movs	r1, #16
 80008e8:	4835      	ldr	r0, [pc, #212]	; (80009c0 <joystickcontrol+0x2a0>)
 80008ea:	f001 fa17 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_SET);
 80008ee:	2201      	movs	r2, #1
 80008f0:	2101      	movs	r1, #1
 80008f2:	4832      	ldr	r0, [pc, #200]	; (80009bc <joystickcontrol+0x29c>)
 80008f4:	f001 fa12 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_SET);
 80008f8:	2201      	movs	r2, #1
 80008fa:	2108      	movs	r1, #8
 80008fc:	4830      	ldr	r0, [pc, #192]	; (80009c0 <joystickcontrol+0x2a0>)
 80008fe:	f001 fa0d 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_Delay(10);
 8000902:	200a      	movs	r0, #10
 8000904:	f000 ff86 	bl	8001814 <HAL_Delay>
				PWMval(1, rpwm);
 8000908:	4b29      	ldr	r3, [pc, #164]	; (80009b0 <joystickcontrol+0x290>)
 800090a:	881b      	ldrh	r3, [r3, #0]
 800090c:	4619      	mov	r1, r3
 800090e:	2001      	movs	r0, #1
 8000910:	f7ff fda4 	bl	800045c <PWMval>
				PWMval(2, lpwm);
 8000914:	4b25      	ldr	r3, [pc, #148]	; (80009ac <joystickcontrol+0x28c>)
 8000916:	881b      	ldrh	r3, [r3, #0]
 8000918:	4619      	mov	r1, r3
 800091a:	2002      	movs	r0, #2
 800091c:	f7ff fd9e 	bl	800045c <PWMval>
}
 8000920:	e18d      	b.n	8000c3e <joystickcontrol+0x51e>
			else if(lpwm >= lowvalue && lpwm <= higvalue)
 8000922:	4b22      	ldr	r3, [pc, #136]	; (80009ac <joystickcontrol+0x28c>)
 8000924:	881a      	ldrh	r2, [r3, #0]
 8000926:	4b23      	ldr	r3, [pc, #140]	; (80009b4 <joystickcontrol+0x294>)
 8000928:	881b      	ldrh	r3, [r3, #0]
 800092a:	429a      	cmp	r2, r3
 800092c:	f0c0 8187 	bcc.w	8000c3e <joystickcontrol+0x51e>
 8000930:	4b1e      	ldr	r3, [pc, #120]	; (80009ac <joystickcontrol+0x28c>)
 8000932:	881a      	ldrh	r2, [r3, #0]
 8000934:	4b20      	ldr	r3, [pc, #128]	; (80009b8 <joystickcontrol+0x298>)
 8000936:	881b      	ldrh	r3, [r3, #0]
 8000938:	429a      	cmp	r2, r3
 800093a:	f200 8180 	bhi.w	8000c3e <joystickcontrol+0x51e>
				rpwm = 1000- map(rpwm,0,lowvalue,0,1000);
 800093e:	4b1c      	ldr	r3, [pc, #112]	; (80009b0 <joystickcontrol+0x290>)
 8000940:	8818      	ldrh	r0, [r3, #0]
 8000942:	4b1c      	ldr	r3, [pc, #112]	; (80009b4 <joystickcontrol+0x294>)
 8000944:	881a      	ldrh	r2, [r3, #0]
 8000946:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800094a:	9300      	str	r3, [sp, #0]
 800094c:	2300      	movs	r3, #0
 800094e:	2100      	movs	r1, #0
 8000950:	f7ff fd5f 	bl	8000412 <map>
 8000954:	4603      	mov	r3, r0
 8000956:	f5c3 737a 	rsb	r3, r3, #1000	; 0x3e8
 800095a:	b29a      	uxth	r2, r3
 800095c:	4b14      	ldr	r3, [pc, #80]	; (80009b0 <joystickcontrol+0x290>)
 800095e:	801a      	strh	r2, [r3, #0]
				HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_RESET);
 8000960:	2200      	movs	r2, #0
 8000962:	2102      	movs	r1, #2
 8000964:	4815      	ldr	r0, [pc, #84]	; (80009bc <joystickcontrol+0x29c>)
 8000966:	f001 f9d9 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_RESET);
 800096a:	2200      	movs	r2, #0
 800096c:	2110      	movs	r1, #16
 800096e:	4814      	ldr	r0, [pc, #80]	; (80009c0 <joystickcontrol+0x2a0>)
 8000970:	f001 f9d4 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_SET);
 8000974:	2201      	movs	r2, #1
 8000976:	2101      	movs	r1, #1
 8000978:	4810      	ldr	r0, [pc, #64]	; (80009bc <joystickcontrol+0x29c>)
 800097a:	f001 f9cf 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_SET);
 800097e:	2201      	movs	r2, #1
 8000980:	2108      	movs	r1, #8
 8000982:	480f      	ldr	r0, [pc, #60]	; (80009c0 <joystickcontrol+0x2a0>)
 8000984:	f001 f9ca 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_Delay(10);
 8000988:	200a      	movs	r0, #10
 800098a:	f000 ff43 	bl	8001814 <HAL_Delay>
				PWMval(1, rpwm);
 800098e:	4b08      	ldr	r3, [pc, #32]	; (80009b0 <joystickcontrol+0x290>)
 8000990:	881b      	ldrh	r3, [r3, #0]
 8000992:	4619      	mov	r1, r3
 8000994:	2001      	movs	r0, #1
 8000996:	f7ff fd61 	bl	800045c <PWMval>
				PWMval(2, rpwm);
 800099a:	4b05      	ldr	r3, [pc, #20]	; (80009b0 <joystickcontrol+0x290>)
 800099c:	881b      	ldrh	r3, [r3, #0]
 800099e:	4619      	mov	r1, r3
 80009a0:	2002      	movs	r0, #2
 80009a2:	f7ff fd5b 	bl	800045c <PWMval>
}
 80009a6:	e14a      	b.n	8000c3e <joystickcontrol+0x51e>
 80009a8:	2000002c 	.word	0x2000002c
 80009ac:	20000032 	.word	0x20000032
 80009b0:	20000034 	.word	0x20000034
 80009b4:	20000000 	.word	0x20000000
 80009b8:	20000002 	.word	0x20000002
 80009bc:	40010c00 	.word	0x40010c00
 80009c0:	40010800 	.word	0x40010800
		else if (rpwm > higvalue)
 80009c4:	4ba0      	ldr	r3, [pc, #640]	; (8000c48 <joystickcontrol+0x528>)
 80009c6:	881a      	ldrh	r2, [r3, #0]
 80009c8:	4ba0      	ldr	r3, [pc, #640]	; (8000c4c <joystickcontrol+0x52c>)
 80009ca:	881b      	ldrh	r3, [r3, #0]
 80009cc:	429a      	cmp	r2, r3
 80009ce:	f240 80de 	bls.w	8000b8e <joystickcontrol+0x46e>
			if(lpwm < lowvalue)
 80009d2:	4b9f      	ldr	r3, [pc, #636]	; (8000c50 <joystickcontrol+0x530>)
 80009d4:	881a      	ldrh	r2, [r3, #0]
 80009d6:	4b9f      	ldr	r3, [pc, #636]	; (8000c54 <joystickcontrol+0x534>)
 80009d8:	881b      	ldrh	r3, [r3, #0]
 80009da:	429a      	cmp	r2, r3
 80009dc:	d248      	bcs.n	8000a70 <joystickcontrol+0x350>
				rpwm = map(rpwm,higvalue,1000,0,1000);
 80009de:	4b9a      	ldr	r3, [pc, #616]	; (8000c48 <joystickcontrol+0x528>)
 80009e0:	8818      	ldrh	r0, [r3, #0]
 80009e2:	4b9a      	ldr	r3, [pc, #616]	; (8000c4c <joystickcontrol+0x52c>)
 80009e4:	8819      	ldrh	r1, [r3, #0]
 80009e6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80009ea:	9300      	str	r3, [sp, #0]
 80009ec:	2300      	movs	r3, #0
 80009ee:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80009f2:	f7ff fd0e 	bl	8000412 <map>
 80009f6:	4603      	mov	r3, r0
 80009f8:	461a      	mov	r2, r3
 80009fa:	4b93      	ldr	r3, [pc, #588]	; (8000c48 <joystickcontrol+0x528>)
 80009fc:	801a      	strh	r2, [r3, #0]
				lpwm = 1000-map(lpwm,0,lowvalue,0,1000)+rpwm;
 80009fe:	4b92      	ldr	r3, [pc, #584]	; (8000c48 <joystickcontrol+0x528>)
 8000a00:	881c      	ldrh	r4, [r3, #0]
 8000a02:	4b93      	ldr	r3, [pc, #588]	; (8000c50 <joystickcontrol+0x530>)
 8000a04:	8818      	ldrh	r0, [r3, #0]
 8000a06:	4b93      	ldr	r3, [pc, #588]	; (8000c54 <joystickcontrol+0x534>)
 8000a08:	881a      	ldrh	r2, [r3, #0]
 8000a0a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000a0e:	9300      	str	r3, [sp, #0]
 8000a10:	2300      	movs	r3, #0
 8000a12:	2100      	movs	r1, #0
 8000a14:	f7ff fcfd 	bl	8000412 <map>
 8000a18:	4603      	mov	r3, r0
 8000a1a:	1ae3      	subs	r3, r4, r3
 8000a1c:	b29b      	uxth	r3, r3
 8000a1e:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8000a22:	b29a      	uxth	r2, r3
 8000a24:	4b8a      	ldr	r3, [pc, #552]	; (8000c50 <joystickcontrol+0x530>)
 8000a26:	801a      	strh	r2, [r3, #0]
				HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_RESET);
 8000a28:	2200      	movs	r2, #0
 8000a2a:	2101      	movs	r1, #1
 8000a2c:	488a      	ldr	r0, [pc, #552]	; (8000c58 <joystickcontrol+0x538>)
 8000a2e:	f001 f975 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_RESET);
 8000a32:	2200      	movs	r2, #0
 8000a34:	2108      	movs	r1, #8
 8000a36:	4889      	ldr	r0, [pc, #548]	; (8000c5c <joystickcontrol+0x53c>)
 8000a38:	f001 f970 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_SET);
 8000a3c:	2201      	movs	r2, #1
 8000a3e:	2102      	movs	r1, #2
 8000a40:	4885      	ldr	r0, [pc, #532]	; (8000c58 <joystickcontrol+0x538>)
 8000a42:	f001 f96b 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_SET);
 8000a46:	2201      	movs	r2, #1
 8000a48:	2110      	movs	r1, #16
 8000a4a:	4884      	ldr	r0, [pc, #528]	; (8000c5c <joystickcontrol+0x53c>)
 8000a4c:	f001 f966 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_Delay(10);
 8000a50:	200a      	movs	r0, #10
 8000a52:	f000 fedf 	bl	8001814 <HAL_Delay>
				PWMval(1, lpwm);
 8000a56:	4b7e      	ldr	r3, [pc, #504]	; (8000c50 <joystickcontrol+0x530>)
 8000a58:	881b      	ldrh	r3, [r3, #0]
 8000a5a:	4619      	mov	r1, r3
 8000a5c:	2001      	movs	r0, #1
 8000a5e:	f7ff fcfd 	bl	800045c <PWMval>
				PWMval(2, rpwm);
 8000a62:	4b79      	ldr	r3, [pc, #484]	; (8000c48 <joystickcontrol+0x528>)
 8000a64:	881b      	ldrh	r3, [r3, #0]
 8000a66:	4619      	mov	r1, r3
 8000a68:	2002      	movs	r0, #2
 8000a6a:	f7ff fcf7 	bl	800045c <PWMval>
}
 8000a6e:	e0e6      	b.n	8000c3e <joystickcontrol+0x51e>
			else if(lpwm > higvalue)
 8000a70:	4b77      	ldr	r3, [pc, #476]	; (8000c50 <joystickcontrol+0x530>)
 8000a72:	881a      	ldrh	r2, [r3, #0]
 8000a74:	4b75      	ldr	r3, [pc, #468]	; (8000c4c <joystickcontrol+0x52c>)
 8000a76:	881b      	ldrh	r3, [r3, #0]
 8000a78:	429a      	cmp	r2, r3
 8000a7a:	d946      	bls.n	8000b0a <joystickcontrol+0x3ea>
				rpwm = map(rpwm,higvalue,1000,0,1000);
 8000a7c:	4b72      	ldr	r3, [pc, #456]	; (8000c48 <joystickcontrol+0x528>)
 8000a7e:	8818      	ldrh	r0, [r3, #0]
 8000a80:	4b72      	ldr	r3, [pc, #456]	; (8000c4c <joystickcontrol+0x52c>)
 8000a82:	8819      	ldrh	r1, [r3, #0]
 8000a84:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000a88:	9300      	str	r3, [sp, #0]
 8000a8a:	2300      	movs	r3, #0
 8000a8c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000a90:	f7ff fcbf 	bl	8000412 <map>
 8000a94:	4603      	mov	r3, r0
 8000a96:	461a      	mov	r2, r3
 8000a98:	4b6b      	ldr	r3, [pc, #428]	; (8000c48 <joystickcontrol+0x528>)
 8000a9a:	801a      	strh	r2, [r3, #0]
				lpwm = map(lpwm,0,higvalue,0,1000)+rpwm;
 8000a9c:	4b6c      	ldr	r3, [pc, #432]	; (8000c50 <joystickcontrol+0x530>)
 8000a9e:	8818      	ldrh	r0, [r3, #0]
 8000aa0:	4b6a      	ldr	r3, [pc, #424]	; (8000c4c <joystickcontrol+0x52c>)
 8000aa2:	881a      	ldrh	r2, [r3, #0]
 8000aa4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000aa8:	9300      	str	r3, [sp, #0]
 8000aaa:	2300      	movs	r3, #0
 8000aac:	2100      	movs	r1, #0
 8000aae:	f7ff fcb0 	bl	8000412 <map>
 8000ab2:	4603      	mov	r3, r0
 8000ab4:	461a      	mov	r2, r3
 8000ab6:	4b64      	ldr	r3, [pc, #400]	; (8000c48 <joystickcontrol+0x528>)
 8000ab8:	881b      	ldrh	r3, [r3, #0]
 8000aba:	4413      	add	r3, r2
 8000abc:	b29a      	uxth	r2, r3
 8000abe:	4b64      	ldr	r3, [pc, #400]	; (8000c50 <joystickcontrol+0x530>)
 8000ac0:	801a      	strh	r2, [r3, #0]
				HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_RESET);
 8000ac2:	2200      	movs	r2, #0
 8000ac4:	2101      	movs	r1, #1
 8000ac6:	4864      	ldr	r0, [pc, #400]	; (8000c58 <joystickcontrol+0x538>)
 8000ac8:	f001 f928 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_RESET);
 8000acc:	2200      	movs	r2, #0
 8000ace:	2108      	movs	r1, #8
 8000ad0:	4862      	ldr	r0, [pc, #392]	; (8000c5c <joystickcontrol+0x53c>)
 8000ad2:	f001 f923 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_SET);
 8000ad6:	2201      	movs	r2, #1
 8000ad8:	2102      	movs	r1, #2
 8000ada:	485f      	ldr	r0, [pc, #380]	; (8000c58 <joystickcontrol+0x538>)
 8000adc:	f001 f91e 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_SET);
 8000ae0:	2201      	movs	r2, #1
 8000ae2:	2110      	movs	r1, #16
 8000ae4:	485d      	ldr	r0, [pc, #372]	; (8000c5c <joystickcontrol+0x53c>)
 8000ae6:	f001 f919 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_Delay(10);
 8000aea:	200a      	movs	r0, #10
 8000aec:	f000 fe92 	bl	8001814 <HAL_Delay>
				PWMval(1, rpwm);
 8000af0:	4b55      	ldr	r3, [pc, #340]	; (8000c48 <joystickcontrol+0x528>)
 8000af2:	881b      	ldrh	r3, [r3, #0]
 8000af4:	4619      	mov	r1, r3
 8000af6:	2001      	movs	r0, #1
 8000af8:	f7ff fcb0 	bl	800045c <PWMval>
				PWMval(2, lpwm);
 8000afc:	4b54      	ldr	r3, [pc, #336]	; (8000c50 <joystickcontrol+0x530>)
 8000afe:	881b      	ldrh	r3, [r3, #0]
 8000b00:	4619      	mov	r1, r3
 8000b02:	2002      	movs	r0, #2
 8000b04:	f7ff fcaa 	bl	800045c <PWMval>
}
 8000b08:	e099      	b.n	8000c3e <joystickcontrol+0x51e>
			else if(lpwm >= lowvalue && lpwm <= higvalue)
 8000b0a:	4b51      	ldr	r3, [pc, #324]	; (8000c50 <joystickcontrol+0x530>)
 8000b0c:	881a      	ldrh	r2, [r3, #0]
 8000b0e:	4b51      	ldr	r3, [pc, #324]	; (8000c54 <joystickcontrol+0x534>)
 8000b10:	881b      	ldrh	r3, [r3, #0]
 8000b12:	429a      	cmp	r2, r3
 8000b14:	f0c0 8093 	bcc.w	8000c3e <joystickcontrol+0x51e>
 8000b18:	4b4d      	ldr	r3, [pc, #308]	; (8000c50 <joystickcontrol+0x530>)
 8000b1a:	881a      	ldrh	r2, [r3, #0]
 8000b1c:	4b4b      	ldr	r3, [pc, #300]	; (8000c4c <joystickcontrol+0x52c>)
 8000b1e:	881b      	ldrh	r3, [r3, #0]
 8000b20:	429a      	cmp	r2, r3
 8000b22:	f200 808c 	bhi.w	8000c3e <joystickcontrol+0x51e>
				rpwm = map(rpwm,higvalue,1000,0,1000);
 8000b26:	4b48      	ldr	r3, [pc, #288]	; (8000c48 <joystickcontrol+0x528>)
 8000b28:	8818      	ldrh	r0, [r3, #0]
 8000b2a:	4b48      	ldr	r3, [pc, #288]	; (8000c4c <joystickcontrol+0x52c>)
 8000b2c:	8819      	ldrh	r1, [r3, #0]
 8000b2e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000b32:	9300      	str	r3, [sp, #0]
 8000b34:	2300      	movs	r3, #0
 8000b36:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000b3a:	f7ff fc6a 	bl	8000412 <map>
 8000b3e:	4603      	mov	r3, r0
 8000b40:	461a      	mov	r2, r3
 8000b42:	4b41      	ldr	r3, [pc, #260]	; (8000c48 <joystickcontrol+0x528>)
 8000b44:	801a      	strh	r2, [r3, #0]
				HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_RESET);
 8000b46:	2200      	movs	r2, #0
 8000b48:	2101      	movs	r1, #1
 8000b4a:	4843      	ldr	r0, [pc, #268]	; (8000c58 <joystickcontrol+0x538>)
 8000b4c:	f001 f8e6 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_RESET);
 8000b50:	2200      	movs	r2, #0
 8000b52:	2108      	movs	r1, #8
 8000b54:	4841      	ldr	r0, [pc, #260]	; (8000c5c <joystickcontrol+0x53c>)
 8000b56:	f001 f8e1 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_SET);
 8000b5a:	2201      	movs	r2, #1
 8000b5c:	2102      	movs	r1, #2
 8000b5e:	483e      	ldr	r0, [pc, #248]	; (8000c58 <joystickcontrol+0x538>)
 8000b60:	f001 f8dc 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_SET);
 8000b64:	2201      	movs	r2, #1
 8000b66:	2110      	movs	r1, #16
 8000b68:	483c      	ldr	r0, [pc, #240]	; (8000c5c <joystickcontrol+0x53c>)
 8000b6a:	f001 f8d7 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_Delay(10);
 8000b6e:	200a      	movs	r0, #10
 8000b70:	f000 fe50 	bl	8001814 <HAL_Delay>
				PWMval(1, rpwm);
 8000b74:	4b34      	ldr	r3, [pc, #208]	; (8000c48 <joystickcontrol+0x528>)
 8000b76:	881b      	ldrh	r3, [r3, #0]
 8000b78:	4619      	mov	r1, r3
 8000b7a:	2001      	movs	r0, #1
 8000b7c:	f7ff fc6e 	bl	800045c <PWMval>
				PWMval(2, rpwm);
 8000b80:	4b31      	ldr	r3, [pc, #196]	; (8000c48 <joystickcontrol+0x528>)
 8000b82:	881b      	ldrh	r3, [r3, #0]
 8000b84:	4619      	mov	r1, r3
 8000b86:	2002      	movs	r0, #2
 8000b88:	f7ff fc68 	bl	800045c <PWMval>
}
 8000b8c:	e057      	b.n	8000c3e <joystickcontrol+0x51e>
		else if (rpwm <= higvalue && rpwm >= lowvalue)
 8000b8e:	4b2e      	ldr	r3, [pc, #184]	; (8000c48 <joystickcontrol+0x528>)
 8000b90:	881a      	ldrh	r2, [r3, #0]
 8000b92:	4b2e      	ldr	r3, [pc, #184]	; (8000c4c <joystickcontrol+0x52c>)
 8000b94:	881b      	ldrh	r3, [r3, #0]
 8000b96:	429a      	cmp	r2, r3
 8000b98:	d851      	bhi.n	8000c3e <joystickcontrol+0x51e>
 8000b9a:	4b2b      	ldr	r3, [pc, #172]	; (8000c48 <joystickcontrol+0x528>)
 8000b9c:	881a      	ldrh	r2, [r3, #0]
 8000b9e:	4b2d      	ldr	r3, [pc, #180]	; (8000c54 <joystickcontrol+0x534>)
 8000ba0:	881b      	ldrh	r3, [r3, #0]
 8000ba2:	429a      	cmp	r2, r3
 8000ba4:	d34b      	bcc.n	8000c3e <joystickcontrol+0x51e>
			if (lpwm > higvalue)
 8000ba6:	4b2a      	ldr	r3, [pc, #168]	; (8000c50 <joystickcontrol+0x530>)
 8000ba8:	881a      	ldrh	r2, [r3, #0]
 8000baa:	4b28      	ldr	r3, [pc, #160]	; (8000c4c <joystickcontrol+0x52c>)
 8000bac:	881b      	ldrh	r3, [r3, #0]
 8000bae:	429a      	cmp	r2, r3
 8000bb0:	d91f      	bls.n	8000bf2 <joystickcontrol+0x4d2>
				HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_RESET);
 8000bb2:	2200      	movs	r2, #0
 8000bb4:	2101      	movs	r1, #1
 8000bb6:	4828      	ldr	r0, [pc, #160]	; (8000c58 <joystickcontrol+0x538>)
 8000bb8:	f001 f8b0 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_RESET);
 8000bbc:	2200      	movs	r2, #0
 8000bbe:	2110      	movs	r1, #16
 8000bc0:	4826      	ldr	r0, [pc, #152]	; (8000c5c <joystickcontrol+0x53c>)
 8000bc2:	f001 f8ab 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_SET);
 8000bc6:	2201      	movs	r2, #1
 8000bc8:	2108      	movs	r1, #8
 8000bca:	4824      	ldr	r0, [pc, #144]	; (8000c5c <joystickcontrol+0x53c>)
 8000bcc:	f001 f8a6 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_SET);
 8000bd0:	2201      	movs	r2, #1
 8000bd2:	2102      	movs	r1, #2
 8000bd4:	4820      	ldr	r0, [pc, #128]	; (8000c58 <joystickcontrol+0x538>)
 8000bd6:	f001 f8a1 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_Delay(10);
 8000bda:	200a      	movs	r0, #10
 8000bdc:	f000 fe1a 	bl	8001814 <HAL_Delay>
				PWMval(1,0);
 8000be0:	2100      	movs	r1, #0
 8000be2:	2001      	movs	r0, #1
 8000be4:	f7ff fc3a 	bl	800045c <PWMval>
				PWMval(2,900);
 8000be8:	f44f 7161 	mov.w	r1, #900	; 0x384
 8000bec:	2002      	movs	r0, #2
 8000bee:	f7ff fc35 	bl	800045c <PWMval>
			if(lpwm < lowvalue)
 8000bf2:	4b17      	ldr	r3, [pc, #92]	; (8000c50 <joystickcontrol+0x530>)
 8000bf4:	881a      	ldrh	r2, [r3, #0]
 8000bf6:	4b17      	ldr	r3, [pc, #92]	; (8000c54 <joystickcontrol+0x534>)
 8000bf8:	881b      	ldrh	r3, [r3, #0]
 8000bfa:	429a      	cmp	r2, r3
 8000bfc:	d21f      	bcs.n	8000c3e <joystickcontrol+0x51e>
				HAL_GPIO_WritePin(DIR_ML1_GPIO_Port, DIR_ML1_Pin, GPIO_PIN_RESET);
 8000bfe:	2200      	movs	r2, #0
 8000c00:	2101      	movs	r1, #1
 8000c02:	4815      	ldr	r0, [pc, #84]	; (8000c58 <joystickcontrol+0x538>)
 8000c04:	f001 f88a 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR1_GPIO_Port, DIR_MR1_Pin, GPIO_PIN_RESET);
 8000c08:	2200      	movs	r2, #0
 8000c0a:	2108      	movs	r1, #8
 8000c0c:	4813      	ldr	r0, [pc, #76]	; (8000c5c <joystickcontrol+0x53c>)
 8000c0e:	f001 f885 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_ML2_GPIO_Port, DIR_ML2_Pin, GPIO_PIN_SET);
 8000c12:	2201      	movs	r2, #1
 8000c14:	2102      	movs	r1, #2
 8000c16:	4810      	ldr	r0, [pc, #64]	; (8000c58 <joystickcontrol+0x538>)
 8000c18:	f001 f880 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(DIR_MR2_GPIO_Port, DIR_MR2_Pin, GPIO_PIN_SET);
 8000c1c:	2201      	movs	r2, #1
 8000c1e:	2110      	movs	r1, #16
 8000c20:	480e      	ldr	r0, [pc, #56]	; (8000c5c <joystickcontrol+0x53c>)
 8000c22:	f001 f87b 	bl	8001d1c <HAL_GPIO_WritePin>
				HAL_Delay(10);
 8000c26:	200a      	movs	r0, #10
 8000c28:	f000 fdf4 	bl	8001814 <HAL_Delay>
				PWMval(1,900);
 8000c2c:	f44f 7161 	mov.w	r1, #900	; 0x384
 8000c30:	2001      	movs	r0, #1
 8000c32:	f7ff fc13 	bl	800045c <PWMval>
				PWMval(2,0);
 8000c36:	2100      	movs	r1, #0
 8000c38:	2002      	movs	r0, #2
 8000c3a:	f7ff fc0f 	bl	800045c <PWMval>
}
 8000c3e:	bf00      	nop
 8000c40:	3704      	adds	r7, #4
 8000c42:	46bd      	mov	sp, r7
 8000c44:	bd90      	pop	{r4, r7, pc}
 8000c46:	bf00      	nop
 8000c48:	20000034 	.word	0x20000034
 8000c4c:	20000002 	.word	0x20000002
 8000c50:	20000032 	.word	0x20000032
 8000c54:	20000000 	.word	0x20000000
 8000c58:	40010c00 	.word	0x40010c00
 8000c5c:	40010800 	.word	0x40010800

08000c60 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000c60:	b480      	push	{r7}
 8000c62:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000c64:	b672      	cpsid	i
}
 8000c66:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000c68:	e7fe      	b.n	8000c68 <Error_Handler+0x8>
	...

08000c6c <nRF24_SendSpi>:
#define NRF24_CE_LOW		HAL_GPIO_WritePin(CE_GPIO_Port, CE_Pin, GPIO_PIN_RESET)

// Spi send and read

static void nRF24_SendSpi(uint8_t *Data, uint8_t length)
{
 8000c6c:	b580      	push	{r7, lr}
 8000c6e:	b082      	sub	sp, #8
 8000c70:	af00      	add	r7, sp, #0
 8000c72:	6078      	str	r0, [r7, #4]
 8000c74:	460b      	mov	r3, r1
 8000c76:	70fb      	strb	r3, [r7, #3]
	HAL_SPI_Transmit(hspi_nrf, Data, length, 1000);
 8000c78:	4b06      	ldr	r3, [pc, #24]	; (8000c94 <nRF24_SendSpi+0x28>)
 8000c7a:	6818      	ldr	r0, [r3, #0]
 8000c7c:	78fb      	ldrb	r3, [r7, #3]
 8000c7e:	b29a      	uxth	r2, r3
 8000c80:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000c84:	6879      	ldr	r1, [r7, #4]
 8000c86:	f001 fcdd 	bl	8002644 <HAL_SPI_Transmit>
}
 8000c8a:	bf00      	nop
 8000c8c:	3708      	adds	r7, #8
 8000c8e:	46bd      	mov	sp, r7
 8000c90:	bd80      	pop	{r7, pc}
 8000c92:	bf00      	nop
 8000c94:	20000050 	.word	0x20000050

08000c98 <nRF24_ReadSpi>:

static void nRF24_ReadSpi(uint8_t *Data, uint8_t length)
{
 8000c98:	b580      	push	{r7, lr}
 8000c9a:	b082      	sub	sp, #8
 8000c9c:	af00      	add	r7, sp, #0
 8000c9e:	6078      	str	r0, [r7, #4]
 8000ca0:	460b      	mov	r3, r1
 8000ca2:	70fb      	strb	r3, [r7, #3]
	HAL_SPI_Receive(hspi_nrf, Data, length, 1000);
 8000ca4:	4b06      	ldr	r3, [pc, #24]	; (8000cc0 <nRF24_ReadSpi+0x28>)
 8000ca6:	6818      	ldr	r0, [r3, #0]
 8000ca8:	78fb      	ldrb	r3, [r7, #3]
 8000caa:	b29a      	uxth	r2, r3
 8000cac:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000cb0:	6879      	ldr	r1, [r7, #4]
 8000cb2:	f001 fe0a 	bl	80028ca <HAL_SPI_Receive>
}
 8000cb6:	bf00      	nop
 8000cb8:	3708      	adds	r7, #8
 8000cba:	46bd      	mov	sp, r7
 8000cbc:	bd80      	pop	{r7, pc}
 8000cbe:	bf00      	nop
 8000cc0:	20000050 	.word	0x20000050

08000cc4 <nRF24_ReadRegister>:

//Reading register

static uint8_t nRF24_ReadRegister(uint8_t reg)
{
 8000cc4:	b580      	push	{r7, lr}
 8000cc6:	b084      	sub	sp, #16
 8000cc8:	af00      	add	r7, sp, #0
 8000cca:	4603      	mov	r3, r0
 8000ccc:	71fb      	strb	r3, [r7, #7]
	uint8_t result;

	reg = NRF24_CMD_R_REGISTER | reg;
 8000cce:	79fb      	ldrb	r3, [r7, #7]
 8000cd0:	71fb      	strb	r3, [r7, #7]

	NRF24_CSN_LOW;
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000cd8:	480c      	ldr	r0, [pc, #48]	; (8000d0c <nRF24_ReadRegister+0x48>)
 8000cda:	f001 f81f 	bl	8001d1c <HAL_GPIO_WritePin>
	nRF24_SendSpi(&reg, 1);
 8000cde:	1dfb      	adds	r3, r7, #7
 8000ce0:	2101      	movs	r1, #1
 8000ce2:	4618      	mov	r0, r3
 8000ce4:	f7ff ffc2 	bl	8000c6c <nRF24_SendSpi>
	nRF24_ReadSpi(&result, 1);
 8000ce8:	f107 030f 	add.w	r3, r7, #15
 8000cec:	2101      	movs	r1, #1
 8000cee:	4618      	mov	r0, r3
 8000cf0:	f7ff ffd2 	bl	8000c98 <nRF24_ReadSpi>
	NRF24_CSN_HIGH;
 8000cf4:	2201      	movs	r2, #1
 8000cf6:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000cfa:	4804      	ldr	r0, [pc, #16]	; (8000d0c <nRF24_ReadRegister+0x48>)
 8000cfc:	f001 f80e 	bl	8001d1c <HAL_GPIO_WritePin>

	return result;
 8000d00:	7bfb      	ldrb	r3, [r7, #15]
}
 8000d02:	4618      	mov	r0, r3
 8000d04:	3710      	adds	r7, #16
 8000d06:	46bd      	mov	sp, r7
 8000d08:	bd80      	pop	{r7, pc}
 8000d0a:	bf00      	nop
 8000d0c:	40010800 	.word	0x40010800

08000d10 <nRF24_ReadRegisters>:

static void nRF24_ReadRegisters(uint8_t reg, uint8_t* result, uint8_t lenght)
{
 8000d10:	b580      	push	{r7, lr}
 8000d12:	b082      	sub	sp, #8
 8000d14:	af00      	add	r7, sp, #0
 8000d16:	4603      	mov	r3, r0
 8000d18:	6039      	str	r1, [r7, #0]
 8000d1a:	71fb      	strb	r3, [r7, #7]
 8000d1c:	4613      	mov	r3, r2
 8000d1e:	71bb      	strb	r3, [r7, #6]
	reg = NRF24_CMD_R_REGISTER | reg;
 8000d20:	79fb      	ldrb	r3, [r7, #7]
 8000d22:	71fb      	strb	r3, [r7, #7]

	NRF24_CSN_LOW;
 8000d24:	2200      	movs	r2, #0
 8000d26:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000d2a:	480b      	ldr	r0, [pc, #44]	; (8000d58 <nRF24_ReadRegisters+0x48>)
 8000d2c:	f000 fff6 	bl	8001d1c <HAL_GPIO_WritePin>

	nRF24_SendSpi(&reg, 1);
 8000d30:	1dfb      	adds	r3, r7, #7
 8000d32:	2101      	movs	r1, #1
 8000d34:	4618      	mov	r0, r3
 8000d36:	f7ff ff99 	bl	8000c6c <nRF24_SendSpi>
	nRF24_ReadSpi(result, lenght);
 8000d3a:	79bb      	ldrb	r3, [r7, #6]
 8000d3c:	4619      	mov	r1, r3
 8000d3e:	6838      	ldr	r0, [r7, #0]
 8000d40:	f7ff ffaa 	bl	8000c98 <nRF24_ReadSpi>

	NRF24_CSN_HIGH;
 8000d44:	2201      	movs	r2, #1
 8000d46:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000d4a:	4803      	ldr	r0, [pc, #12]	; (8000d58 <nRF24_ReadRegisters+0x48>)
 8000d4c:	f000 ffe6 	bl	8001d1c <HAL_GPIO_WritePin>
}
 8000d50:	bf00      	nop
 8000d52:	3708      	adds	r7, #8
 8000d54:	46bd      	mov	sp, r7
 8000d56:	bd80      	pop	{r7, pc}
 8000d58:	40010800 	.word	0x40010800

08000d5c <nRF24_WriteRegister>:

static void nRF24_WriteRegister(uint8_t reg, uint8_t value)
{
 8000d5c:	b580      	push	{r7, lr}
 8000d5e:	b084      	sub	sp, #16
 8000d60:	af00      	add	r7, sp, #0
 8000d62:	4603      	mov	r3, r0
 8000d64:	460a      	mov	r2, r1
 8000d66:	71fb      	strb	r3, [r7, #7]
 8000d68:	4613      	mov	r3, r2
 8000d6a:	71bb      	strb	r3, [r7, #6]
	uint8_t list[2];

	list[0] = NRF24_CMD_W_REGISTER | reg;
 8000d6c:	79fb      	ldrb	r3, [r7, #7]
 8000d6e:	f043 0320 	orr.w	r3, r3, #32
 8000d72:	b2db      	uxtb	r3, r3
 8000d74:	733b      	strb	r3, [r7, #12]
	list[1] = value;
 8000d76:	79bb      	ldrb	r3, [r7, #6]
 8000d78:	737b      	strb	r3, [r7, #13]

	NRF24_CSN_LOW;
 8000d7a:	2200      	movs	r2, #0
 8000d7c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000d80:	4809      	ldr	r0, [pc, #36]	; (8000da8 <nRF24_WriteRegister+0x4c>)
 8000d82:	f000 ffcb 	bl	8001d1c <HAL_GPIO_WritePin>

	nRF24_SendSpi(list, 2);
 8000d86:	f107 030c 	add.w	r3, r7, #12
 8000d8a:	2102      	movs	r1, #2
 8000d8c:	4618      	mov	r0, r3
 8000d8e:	f7ff ff6d 	bl	8000c6c <nRF24_SendSpi>

	NRF24_CSN_HIGH;
 8000d92:	2201      	movs	r2, #1
 8000d94:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000d98:	4803      	ldr	r0, [pc, #12]	; (8000da8 <nRF24_WriteRegister+0x4c>)
 8000d9a:	f000 ffbf 	bl	8001d1c <HAL_GPIO_WritePin>
}
 8000d9e:	bf00      	nop
 8000da0:	3710      	adds	r7, #16
 8000da2:	46bd      	mov	sp, r7
 8000da4:	bd80      	pop	{r7, pc}
 8000da6:	bf00      	nop
 8000da8:	40010800 	.word	0x40010800

08000dac <nRF24_WriteRegisters>:

static void nRF24_WriteRegisters(uint8_t reg, uint8_t* result, uint8_t lenght)
{
 8000dac:	b580      	push	{r7, lr}
 8000dae:	b082      	sub	sp, #8
 8000db0:	af00      	add	r7, sp, #0
 8000db2:	4603      	mov	r3, r0
 8000db4:	6039      	str	r1, [r7, #0]
 8000db6:	71fb      	strb	r3, [r7, #7]
 8000db8:	4613      	mov	r3, r2
 8000dba:	71bb      	strb	r3, [r7, #6]
	reg = NRF24_CMD_W_REGISTER | reg;
 8000dbc:	79fb      	ldrb	r3, [r7, #7]
 8000dbe:	f043 0320 	orr.w	r3, r3, #32
 8000dc2:	b2db      	uxtb	r3, r3
 8000dc4:	71fb      	strb	r3, [r7, #7]

	NRF24_CSN_LOW;
 8000dc6:	2200      	movs	r2, #0
 8000dc8:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000dcc:	480b      	ldr	r0, [pc, #44]	; (8000dfc <nRF24_WriteRegisters+0x50>)
 8000dce:	f000 ffa5 	bl	8001d1c <HAL_GPIO_WritePin>

	nRF24_SendSpi(&reg, 1);
 8000dd2:	1dfb      	adds	r3, r7, #7
 8000dd4:	2101      	movs	r1, #1
 8000dd6:	4618      	mov	r0, r3
 8000dd8:	f7ff ff48 	bl	8000c6c <nRF24_SendSpi>
	nRF24_SendSpi(result, lenght);
 8000ddc:	79bb      	ldrb	r3, [r7, #6]
 8000dde:	4619      	mov	r1, r3
 8000de0:	6838      	ldr	r0, [r7, #0]
 8000de2:	f7ff ff43 	bl	8000c6c <nRF24_SendSpi>

	NRF24_CSN_HIGH;
 8000de6:	2201      	movs	r2, #1
 8000de8:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000dec:	4803      	ldr	r0, [pc, #12]	; (8000dfc <nRF24_WriteRegisters+0x50>)
 8000dee:	f000 ff95 	bl	8001d1c <HAL_GPIO_WritePin>
}
 8000df2:	bf00      	nop
 8000df4:	3708      	adds	r7, #8
 8000df6:	46bd      	mov	sp, r7
 8000df8:	bd80      	pop	{r7, pc}
 8000dfa:	bf00      	nop
 8000dfc:	40010800 	.word	0x40010800

08000e00 <nRF24_ReadConfig>:

uint8_t nRF24_ReadConfig(void)
{
 8000e00:	b580      	push	{r7, lr}
 8000e02:	af00      	add	r7, sp, #0
	return (nRF24_ReadRegister(NRF24_CONFIG));
 8000e04:	2000      	movs	r0, #0
 8000e06:	f7ff ff5d 	bl	8000cc4 <nRF24_ReadRegister>
 8000e0a:	4603      	mov	r3, r0
}
 8000e0c:	4618      	mov	r0, r3
 8000e0e:	bd80      	pop	{r7, pc}

08000e10 <nRF24_WriteConfig>:

void nRF24_WriteConfig(uint8_t config)
{
 8000e10:	b580      	push	{r7, lr}
 8000e12:	b082      	sub	sp, #8
 8000e14:	af00      	add	r7, sp, #0
 8000e16:	4603      	mov	r3, r0
 8000e18:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteRegister(NRF24_CONFIG, config);
 8000e1a:	79fb      	ldrb	r3, [r7, #7]
 8000e1c:	4619      	mov	r1, r3
 8000e1e:	2000      	movs	r0, #0
 8000e20:	f7ff ff9c 	bl	8000d5c <nRF24_WriteRegister>
}
 8000e24:	bf00      	nop
 8000e26:	3708      	adds	r7, #8
 8000e28:	46bd      	mov	sp, r7
 8000e2a:	bd80      	pop	{r7, pc}

08000e2c <nRF24_ReadStatus>:

uint8_t nRF24_ReadStatus(void)
{
 8000e2c:	b580      	push	{r7, lr}
 8000e2e:	af00      	add	r7, sp, #0
	return (nRF24_ReadRegister(NRF24_STATUS));
 8000e30:	2007      	movs	r0, #7
 8000e32:	f7ff ff47 	bl	8000cc4 <nRF24_ReadRegister>
 8000e36:	4603      	mov	r3, r0
}
 8000e38:	4618      	mov	r0, r3
 8000e3a:	bd80      	pop	{r7, pc}

08000e3c <nRF24_WriteStatus>:

void nRF24_WriteStatus(uint8_t st)
{
 8000e3c:	b580      	push	{r7, lr}
 8000e3e:	b082      	sub	sp, #8
 8000e40:	af00      	add	r7, sp, #0
 8000e42:	4603      	mov	r3, r0
 8000e44:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteRegister(NRF24_STATUS, st);
 8000e46:	79fb      	ldrb	r3, [r7, #7]
 8000e48:	4619      	mov	r1, r3
 8000e4a:	2007      	movs	r0, #7
 8000e4c:	f7ff ff86 	bl	8000d5c <nRF24_WriteRegister>
}
 8000e50:	bf00      	nop
 8000e52:	3708      	adds	r7, #8
 8000e54:	46bd      	mov	sp, r7
 8000e56:	bd80      	pop	{r7, pc}

08000e58 <nRF24_RX_Mode>:

void nRF24_RX_Mode(void)
{
 8000e58:	b580      	push	{r7, lr}
 8000e5a:	b082      	sub	sp, #8
 8000e5c:	af00      	add	r7, sp, #0
	uint8_t config = nRF24_ReadConfig();
 8000e5e:	f7ff ffcf 	bl	8000e00 <nRF24_ReadConfig>
 8000e62:	4603      	mov	r3, r0
 8000e64:	71fb      	strb	r3, [r7, #7]
	// Restore pipe 0 adress after comeback from TX mode
	nRF24_SetRXAddress(0, addr_p0_backup);
 8000e66:	4912      	ldr	r1, [pc, #72]	; (8000eb0 <nRF24_RX_Mode+0x58>)
 8000e68:	2000      	movs	r0, #0
 8000e6a:	f000 f9ac 	bl	80011c6 <nRF24_SetRXAddress>
	// PWR_UP bit set
	config |= (1<<NRF24_PWR_UP);
 8000e6e:	79fb      	ldrb	r3, [r7, #7]
 8000e70:	f043 0302 	orr.w	r3, r3, #2
 8000e74:	71fb      	strb	r3, [r7, #7]
	// PRIM_RX bit set
	config |= (1<<NRF24_PRIM_RX);
 8000e76:	79fb      	ldrb	r3, [r7, #7]
 8000e78:	f043 0301 	orr.w	r3, r3, #1
 8000e7c:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteConfig(config);
 8000e7e:	79fb      	ldrb	r3, [r7, #7]
 8000e80:	4618      	mov	r0, r3
 8000e82:	f7ff ffc5 	bl	8000e10 <nRF24_WriteConfig>
	// Reset status
	nRF24_WriteStatus((1<<NRF24_RX_DR)|(1<<NRF24_TX_DS)|(1<<NRF24_MAX_RT));
 8000e86:	2070      	movs	r0, #112	; 0x70
 8000e88:	f7ff ffd8 	bl	8000e3c <nRF24_WriteStatus>
	// Flush RX
	nRF24_FlushRX();
 8000e8c:	f000 f85a 	bl	8000f44 <nRF24_FlushRX>
	// Flush TX
	nRF24_FlushTX();
 8000e90:	f000 f874 	bl	8000f7c <nRF24_FlushTX>

	NRF24_CE_HIGH;
 8000e94:	2201      	movs	r2, #1
 8000e96:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000e9a:	4806      	ldr	r0, [pc, #24]	; (8000eb4 <nRF24_RX_Mode+0x5c>)
 8000e9c:	f000 ff3e 	bl	8001d1c <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8000ea0:	2001      	movs	r0, #1
 8000ea2:	f000 fcb7 	bl	8001814 <HAL_Delay>
}
 8000ea6:	bf00      	nop
 8000ea8:	3708      	adds	r7, #8
 8000eaa:	46bd      	mov	sp, r7
 8000eac:	bd80      	pop	{r7, pc}
 8000eae:	bf00      	nop
 8000eb0:	20000054 	.word	0x20000054
 8000eb4:	40010800 	.word	0x40010800

08000eb8 <nRF24_SetPALevel>:




void nRF24_SetPALevel(uint8_t lev)
{
 8000eb8:	b580      	push	{r7, lr}
 8000eba:	b084      	sub	sp, #16
 8000ebc:	af00      	add	r7, sp, #0
 8000ebe:	4603      	mov	r3, r0
 8000ec0:	71fb      	strb	r3, [r7, #7]
	uint8_t rf_setup = nRF24_ReadRegister(NRF24_RF_SETUP);
 8000ec2:	2006      	movs	r0, #6
 8000ec4:	f7ff fefe 	bl	8000cc4 <nRF24_ReadRegister>
 8000ec8:	4603      	mov	r3, r0
 8000eca:	73fb      	strb	r3, [r7, #15]
	rf_setup &= 0xF8; // Clear PWR bits
 8000ecc:	7bfb      	ldrb	r3, [r7, #15]
 8000ece:	f023 0307 	bic.w	r3, r3, #7
 8000ed2:	73fb      	strb	r3, [r7, #15]
	rf_setup |= (lev<<1);
 8000ed4:	79fb      	ldrb	r3, [r7, #7]
 8000ed6:	005b      	lsls	r3, r3, #1
 8000ed8:	b25a      	sxtb	r2, r3
 8000eda:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000ede:	4313      	orrs	r3, r2
 8000ee0:	b25b      	sxtb	r3, r3
 8000ee2:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteRegister(NRF24_RF_SETUP, rf_setup);
 8000ee4:	7bfb      	ldrb	r3, [r7, #15]
 8000ee6:	4619      	mov	r1, r3
 8000ee8:	2006      	movs	r0, #6
 8000eea:	f7ff ff37 	bl	8000d5c <nRF24_WriteRegister>
}
 8000eee:	bf00      	nop
 8000ef0:	3710      	adds	r7, #16
 8000ef2:	46bd      	mov	sp, r7
 8000ef4:	bd80      	pop	{r7, pc}

08000ef6 <nRF24_SetDataRate>:

void nRF24_SetDataRate(uint8_t dr)
{
 8000ef6:	b580      	push	{r7, lr}
 8000ef8:	b084      	sub	sp, #16
 8000efa:	af00      	add	r7, sp, #0
 8000efc:	4603      	mov	r3, r0
 8000efe:	71fb      	strb	r3, [r7, #7]
	uint8_t rf_setup = nRF24_ReadRegister(NRF24_RF_SETUP);
 8000f00:	2006      	movs	r0, #6
 8000f02:	f7ff fedf 	bl	8000cc4 <nRF24_ReadRegister>
 8000f06:	4603      	mov	r3, r0
 8000f08:	73fb      	strb	r3, [r7, #15]
	rf_setup &= 0xD7; // Clear DR bits (1MBPS)
 8000f0a:	7bfb      	ldrb	r3, [r7, #15]
 8000f0c:	f023 0328 	bic.w	r3, r3, #40	; 0x28
 8000f10:	73fb      	strb	r3, [r7, #15]
	if(dr == NRF24_RF_DR_250KBPS)
 8000f12:	79fb      	ldrb	r3, [r7, #7]
 8000f14:	2b02      	cmp	r3, #2
 8000f16:	d104      	bne.n	8000f22 <nRF24_SetDataRate+0x2c>
		rf_setup |= (1<<NRF24_RF_DR_LOW);
 8000f18:	7bfb      	ldrb	r3, [r7, #15]
 8000f1a:	f043 0320 	orr.w	r3, r3, #32
 8000f1e:	73fb      	strb	r3, [r7, #15]
 8000f20:	e006      	b.n	8000f30 <nRF24_SetDataRate+0x3a>
	else if(dr == NRF24_RF_DR_2MBPS)
 8000f22:	79fb      	ldrb	r3, [r7, #7]
 8000f24:	2b01      	cmp	r3, #1
 8000f26:	d103      	bne.n	8000f30 <nRF24_SetDataRate+0x3a>
		rf_setup |= (1<<NRF24_RF_DR_HIGH);
 8000f28:	7bfb      	ldrb	r3, [r7, #15]
 8000f2a:	f043 0308 	orr.w	r3, r3, #8
 8000f2e:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteRegister(NRF24_RF_SETUP, rf_setup);
 8000f30:	7bfb      	ldrb	r3, [r7, #15]
 8000f32:	4619      	mov	r1, r3
 8000f34:	2006      	movs	r0, #6
 8000f36:	f7ff ff11 	bl	8000d5c <nRF24_WriteRegister>
}
 8000f3a:	bf00      	nop
 8000f3c:	3710      	adds	r7, #16
 8000f3e:	46bd      	mov	sp, r7
 8000f40:	bd80      	pop	{r7, pc}
	...

08000f44 <nRF24_FlushRX>:



void nRF24_FlushRX(void)
{
 8000f44:	b580      	push	{r7, lr}
 8000f46:	b082      	sub	sp, #8
 8000f48:	af00      	add	r7, sp, #0
	uint8_t command = NRF24_CMD_FLUSH_RX;
 8000f4a:	23e2      	movs	r3, #226	; 0xe2
 8000f4c:	71fb      	strb	r3, [r7, #7]

	NRF24_CSN_LOW;
 8000f4e:	2200      	movs	r2, #0
 8000f50:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f54:	4808      	ldr	r0, [pc, #32]	; (8000f78 <nRF24_FlushRX+0x34>)
 8000f56:	f000 fee1 	bl	8001d1c <HAL_GPIO_WritePin>
	nRF24_SendSpi(&command, 1);
 8000f5a:	1dfb      	adds	r3, r7, #7
 8000f5c:	2101      	movs	r1, #1
 8000f5e:	4618      	mov	r0, r3
 8000f60:	f7ff fe84 	bl	8000c6c <nRF24_SendSpi>
	NRF24_CSN_HIGH;
 8000f64:	2201      	movs	r2, #1
 8000f66:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f6a:	4803      	ldr	r0, [pc, #12]	; (8000f78 <nRF24_FlushRX+0x34>)
 8000f6c:	f000 fed6 	bl	8001d1c <HAL_GPIO_WritePin>
}
 8000f70:	bf00      	nop
 8000f72:	3708      	adds	r7, #8
 8000f74:	46bd      	mov	sp, r7
 8000f76:	bd80      	pop	{r7, pc}
 8000f78:	40010800 	.word	0x40010800

08000f7c <nRF24_FlushTX>:

void nRF24_FlushTX(void)
{
 8000f7c:	b580      	push	{r7, lr}
 8000f7e:	b082      	sub	sp, #8
 8000f80:	af00      	add	r7, sp, #0
	uint8_t command = NRF24_CMD_FLUSH_TX;
 8000f82:	23e1      	movs	r3, #225	; 0xe1
 8000f84:	71fb      	strb	r3, [r7, #7]

	NRF24_CSN_LOW;
 8000f86:	2200      	movs	r2, #0
 8000f88:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f8c:	4808      	ldr	r0, [pc, #32]	; (8000fb0 <nRF24_FlushTX+0x34>)
 8000f8e:	f000 fec5 	bl	8001d1c <HAL_GPIO_WritePin>
	nRF24_SendSpi(&command, 1);
 8000f92:	1dfb      	adds	r3, r7, #7
 8000f94:	2101      	movs	r1, #1
 8000f96:	4618      	mov	r0, r3
 8000f98:	f7ff fe68 	bl	8000c6c <nRF24_SendSpi>
	NRF24_CSN_HIGH;
 8000f9c:	2201      	movs	r2, #1
 8000f9e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000fa2:	4803      	ldr	r0, [pc, #12]	; (8000fb0 <nRF24_FlushTX+0x34>)
 8000fa4:	f000 feba 	bl	8001d1c <HAL_GPIO_WritePin>
}
 8000fa8:	bf00      	nop
 8000faa:	3708      	adds	r7, #8
 8000fac:	46bd      	mov	sp, r7
 8000fae:	bd80      	pop	{r7, pc}
 8000fb0:	40010800 	.word	0x40010800

08000fb4 <nRF24_EnableCRC>:

void nRF24_EnableCRC(uint8_t onoff)
{
 8000fb4:	b580      	push	{r7, lr}
 8000fb6:	b084      	sub	sp, #16
 8000fb8:	af00      	add	r7, sp, #0
 8000fba:	4603      	mov	r3, r0
 8000fbc:	71fb      	strb	r3, [r7, #7]
	uint8_t config = nRF24_ReadConfig();
 8000fbe:	f7ff ff1f 	bl	8000e00 <nRF24_ReadConfig>
 8000fc2:	4603      	mov	r3, r0
 8000fc4:	73fb      	strb	r3, [r7, #15]

	if(onoff)
 8000fc6:	79fb      	ldrb	r3, [r7, #7]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d004      	beq.n	8000fd6 <nRF24_EnableCRC+0x22>
		config |= (1<<NRF24_EN_CRC);
 8000fcc:	7bfb      	ldrb	r3, [r7, #15]
 8000fce:	f043 0308 	orr.w	r3, r3, #8
 8000fd2:	73fb      	strb	r3, [r7, #15]
 8000fd4:	e003      	b.n	8000fde <nRF24_EnableCRC+0x2a>
	else
		config &= ~(1<<NRF24_EN_CRC);
 8000fd6:	7bfb      	ldrb	r3, [r7, #15]
 8000fd8:	f023 0308 	bic.w	r3, r3, #8
 8000fdc:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteConfig(config);
 8000fde:	7bfb      	ldrb	r3, [r7, #15]
 8000fe0:	4618      	mov	r0, r3
 8000fe2:	f7ff ff15 	bl	8000e10 <nRF24_WriteConfig>
}
 8000fe6:	bf00      	nop
 8000fe8:	3710      	adds	r7, #16
 8000fea:	46bd      	mov	sp, r7
 8000fec:	bd80      	pop	{r7, pc}

08000fee <nRF24_SetCRCLength>:

void nRF24_SetCRCLength(uint8_t crcl)
{
 8000fee:	b580      	push	{r7, lr}
 8000ff0:	b084      	sub	sp, #16
 8000ff2:	af00      	add	r7, sp, #0
 8000ff4:	4603      	mov	r3, r0
 8000ff6:	71fb      	strb	r3, [r7, #7]
	uint8_t config = nRF24_ReadConfig();
 8000ff8:	f7ff ff02 	bl	8000e00 <nRF24_ReadConfig>
 8000ffc:	4603      	mov	r3, r0
 8000ffe:	73fb      	strb	r3, [r7, #15]
	if(crcl == NRF24_CRC_WIDTH_2B)
 8001000:	79fb      	ldrb	r3, [r7, #7]
 8001002:	2b01      	cmp	r3, #1
 8001004:	d104      	bne.n	8001010 <nRF24_SetCRCLength+0x22>
		config |= (1<<NRF24_CRCO);
 8001006:	7bfb      	ldrb	r3, [r7, #15]
 8001008:	f043 0304 	orr.w	r3, r3, #4
 800100c:	73fb      	strb	r3, [r7, #15]
 800100e:	e003      	b.n	8001018 <nRF24_SetCRCLength+0x2a>
	else
		config &= ~(1<<NRF24_CRCO);
 8001010:	7bfb      	ldrb	r3, [r7, #15]
 8001012:	f023 0304 	bic.w	r3, r3, #4
 8001016:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteConfig(config);
 8001018:	7bfb      	ldrb	r3, [r7, #15]
 800101a:	4618      	mov	r0, r3
 800101c:	f7ff fef8 	bl	8000e10 <nRF24_WriteConfig>
}
 8001020:	bf00      	nop
 8001022:	3710      	adds	r7, #16
 8001024:	46bd      	mov	sp, r7
 8001026:	bd80      	pop	{r7, pc}

08001028 <nRF24_SetRetries>:

void nRF24_SetRetries(uint8_t ard, uint8_t arc)
{
 8001028:	b580      	push	{r7, lr}
 800102a:	b082      	sub	sp, #8
 800102c:	af00      	add	r7, sp, #0
 800102e:	4603      	mov	r3, r0
 8001030:	460a      	mov	r2, r1
 8001032:	71fb      	strb	r3, [r7, #7]
 8001034:	4613      	mov	r3, r2
 8001036:	71bb      	strb	r3, [r7, #6]
	// ard * 250us, arc repeats
	nRF24_WriteRegister(NRF24_SETUP_RETR, (((ard & 0x0F)<<NRF24_ARD) | ((arc & 0x0F)<<NRF24_ARC)));
 8001038:	79fb      	ldrb	r3, [r7, #7]
 800103a:	011b      	lsls	r3, r3, #4
 800103c:	b25a      	sxtb	r2, r3
 800103e:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001042:	f003 030f 	and.w	r3, r3, #15
 8001046:	b25b      	sxtb	r3, r3
 8001048:	4313      	orrs	r3, r2
 800104a:	b25b      	sxtb	r3, r3
 800104c:	b2db      	uxtb	r3, r3
 800104e:	4619      	mov	r1, r3
 8001050:	2004      	movs	r0, #4
 8001052:	f7ff fe83 	bl	8000d5c <nRF24_WriteRegister>
}
 8001056:	bf00      	nop
 8001058:	3708      	adds	r7, #8
 800105a:	46bd      	mov	sp, r7
 800105c:	bd80      	pop	{r7, pc}

0800105e <nRF24_SetRFChannel>:

void nRF24_SetRFChannel(uint8_t channel)
{
 800105e:	b580      	push	{r7, lr}
 8001060:	b082      	sub	sp, #8
 8001062:	af00      	add	r7, sp, #0
 8001064:	4603      	mov	r3, r0
 8001066:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteRegister(NRF24_RF_CH, (channel & 0x7F));
 8001068:	79fb      	ldrb	r3, [r7, #7]
 800106a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800106e:	b2db      	uxtb	r3, r3
 8001070:	4619      	mov	r1, r3
 8001072:	2005      	movs	r0, #5
 8001074:	f7ff fe72 	bl	8000d5c <nRF24_WriteRegister>
}
 8001078:	bf00      	nop
 800107a:	3708      	adds	r7, #8
 800107c:	46bd      	mov	sp, r7
 800107e:	bd80      	pop	{r7, pc}

08001080 <nRF24_SetPayloadSize>:

void nRF24_SetPayloadSize(uint8_t pipe, uint8_t size)
{
 8001080:	b580      	push	{r7, lr}
 8001082:	b082      	sub	sp, #8
 8001084:	af00      	add	r7, sp, #0
 8001086:	4603      	mov	r3, r0
 8001088:	460a      	mov	r2, r1
 800108a:	71fb      	strb	r3, [r7, #7]
 800108c:	4613      	mov	r3, r2
 800108e:	71bb      	strb	r3, [r7, #6]
	if(pipe > 5)
 8001090:	79fb      	ldrb	r3, [r7, #7]
 8001092:	2b05      	cmp	r3, #5
 8001094:	d901      	bls.n	800109a <nRF24_SetPayloadSize+0x1a>
		pipe = 5; // Block too high pipe number
 8001096:	2305      	movs	r3, #5
 8001098:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteRegister(NRF24_RX_PW_P0 + pipe , (size & 0x3F));
 800109a:	79fb      	ldrb	r3, [r7, #7]
 800109c:	3311      	adds	r3, #17
 800109e:	b2da      	uxtb	r2, r3
 80010a0:	79bb      	ldrb	r3, [r7, #6]
 80010a2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80010a6:	b2db      	uxtb	r3, r3
 80010a8:	4619      	mov	r1, r3
 80010aa:	4610      	mov	r0, r2
 80010ac:	f7ff fe56 	bl	8000d5c <nRF24_WriteRegister>
}
 80010b0:	bf00      	nop
 80010b2:	3708      	adds	r7, #8
 80010b4:	46bd      	mov	sp, r7
 80010b6:	bd80      	pop	{r7, pc}

080010b8 <nRF24_EnablePipe>:

void nRF24_EnablePipe(uint8_t pipe, uint8_t onoff)
{
 80010b8:	b580      	push	{r7, lr}
 80010ba:	b084      	sub	sp, #16
 80010bc:	af00      	add	r7, sp, #0
 80010be:	4603      	mov	r3, r0
 80010c0:	460a      	mov	r2, r1
 80010c2:	71fb      	strb	r3, [r7, #7]
 80010c4:	4613      	mov	r3, r2
 80010c6:	71bb      	strb	r3, [r7, #6]
	if(pipe > 5)
 80010c8:	79fb      	ldrb	r3, [r7, #7]
 80010ca:	2b05      	cmp	r3, #5
 80010cc:	d901      	bls.n	80010d2 <nRF24_EnablePipe+0x1a>
		pipe = 5; // Block too high pipe number
 80010ce:	2305      	movs	r3, #5
 80010d0:	71fb      	strb	r3, [r7, #7]
	uint8_t enable_pipe = nRF24_ReadRegister(NRF24_EN_RXADDR);
 80010d2:	2002      	movs	r0, #2
 80010d4:	f7ff fdf6 	bl	8000cc4 <nRF24_ReadRegister>
 80010d8:	4603      	mov	r3, r0
 80010da:	73fb      	strb	r3, [r7, #15]
	if(onoff == 1)
 80010dc:	79bb      	ldrb	r3, [r7, #6]
 80010de:	2b01      	cmp	r3, #1
 80010e0:	d10a      	bne.n	80010f8 <nRF24_EnablePipe+0x40>
		enable_pipe |= (1<<pipe);
 80010e2:	79fb      	ldrb	r3, [r7, #7]
 80010e4:	2201      	movs	r2, #1
 80010e6:	fa02 f303 	lsl.w	r3, r2, r3
 80010ea:	b25a      	sxtb	r2, r3
 80010ec:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80010f0:	4313      	orrs	r3, r2
 80010f2:	b25b      	sxtb	r3, r3
 80010f4:	73fb      	strb	r3, [r7, #15]
 80010f6:	e00b      	b.n	8001110 <nRF24_EnablePipe+0x58>
	else
		enable_pipe &= ~(1<<pipe);
 80010f8:	79fb      	ldrb	r3, [r7, #7]
 80010fa:	2201      	movs	r2, #1
 80010fc:	fa02 f303 	lsl.w	r3, r2, r3
 8001100:	b25b      	sxtb	r3, r3
 8001102:	43db      	mvns	r3, r3
 8001104:	b25a      	sxtb	r2, r3
 8001106:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800110a:	4013      	ands	r3, r2
 800110c:	b25b      	sxtb	r3, r3
 800110e:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteRegister(NRF24_EN_RXADDR, enable_pipe);
 8001110:	7bfb      	ldrb	r3, [r7, #15]
 8001112:	4619      	mov	r1, r3
 8001114:	2002      	movs	r0, #2
 8001116:	f7ff fe21 	bl	8000d5c <nRF24_WriteRegister>
}
 800111a:	bf00      	nop
 800111c:	3710      	adds	r7, #16
 800111e:	46bd      	mov	sp, r7
 8001120:	bd80      	pop	{r7, pc}

08001122 <nRF24_AutoACK>:

void nRF24_AutoACK(uint8_t pipe, uint8_t onoff)
{
 8001122:	b580      	push	{r7, lr}
 8001124:	b084      	sub	sp, #16
 8001126:	af00      	add	r7, sp, #0
 8001128:	4603      	mov	r3, r0
 800112a:	460a      	mov	r2, r1
 800112c:	71fb      	strb	r3, [r7, #7]
 800112e:	4613      	mov	r3, r2
 8001130:	71bb      	strb	r3, [r7, #6]
	if(pipe > 5)
 8001132:	79fb      	ldrb	r3, [r7, #7]
 8001134:	2b05      	cmp	r3, #5
 8001136:	d901      	bls.n	800113c <nRF24_AutoACK+0x1a>
		pipe = 5; // Block too high pipe number
 8001138:	2305      	movs	r3, #5
 800113a:	71fb      	strb	r3, [r7, #7]
	uint8_t enaa = nRF24_ReadRegister(NRF24_EN_AA);
 800113c:	2001      	movs	r0, #1
 800113e:	f7ff fdc1 	bl	8000cc4 <nRF24_ReadRegister>
 8001142:	4603      	mov	r3, r0
 8001144:	73fb      	strb	r3, [r7, #15]
	if(onoff == 1)
 8001146:	79bb      	ldrb	r3, [r7, #6]
 8001148:	2b01      	cmp	r3, #1
 800114a:	d10a      	bne.n	8001162 <nRF24_AutoACK+0x40>
		enaa |= (1<<pipe);
 800114c:	79fb      	ldrb	r3, [r7, #7]
 800114e:	2201      	movs	r2, #1
 8001150:	fa02 f303 	lsl.w	r3, r2, r3
 8001154:	b25a      	sxtb	r2, r3
 8001156:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800115a:	4313      	orrs	r3, r2
 800115c:	b25b      	sxtb	r3, r3
 800115e:	73fb      	strb	r3, [r7, #15]
 8001160:	e00b      	b.n	800117a <nRF24_AutoACK+0x58>
	else
		enaa &= ~(1<<pipe);
 8001162:	79fb      	ldrb	r3, [r7, #7]
 8001164:	2201      	movs	r2, #1
 8001166:	fa02 f303 	lsl.w	r3, r2, r3
 800116a:	b25b      	sxtb	r3, r3
 800116c:	43db      	mvns	r3, r3
 800116e:	b25a      	sxtb	r2, r3
 8001170:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001174:	4013      	ands	r3, r2
 8001176:	b25b      	sxtb	r3, r3
 8001178:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteRegister(NRF24_EN_AA, enaa);
 800117a:	7bfb      	ldrb	r3, [r7, #15]
 800117c:	4619      	mov	r1, r3
 800117e:	2001      	movs	r0, #1
 8001180:	f7ff fdec 	bl	8000d5c <nRF24_WriteRegister>
}
 8001184:	bf00      	nop
 8001186:	3710      	adds	r7, #16
 8001188:	46bd      	mov	sp, r7
 800118a:	bd80      	pop	{r7, pc}

0800118c <nRF24_SetAddressWidth>:

void nRF24_SetAddressWidth(uint8_t size)
{
 800118c:	b580      	push	{r7, lr}
 800118e:	b082      	sub	sp, #8
 8001190:	af00      	add	r7, sp, #0
 8001192:	4603      	mov	r3, r0
 8001194:	71fb      	strb	r3, [r7, #7]
	if(size > 5)
 8001196:	79fb      	ldrb	r3, [r7, #7]
 8001198:	2b05      	cmp	r3, #5
 800119a:	d901      	bls.n	80011a0 <nRF24_SetAddressWidth+0x14>
		size = 5; // Maximum are 5 bytes
 800119c:	2305      	movs	r3, #5
 800119e:	71fb      	strb	r3, [r7, #7]
	if(size < 3)
 80011a0:	79fb      	ldrb	r3, [r7, #7]
 80011a2:	2b02      	cmp	r3, #2
 80011a4:	d801      	bhi.n	80011aa <nRF24_SetAddressWidth+0x1e>
		size = 3; // Minimum are 3 bytes
 80011a6:	2303      	movs	r3, #3
 80011a8:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteRegister(NRF24_SETUP_AW, ((size-2) & 0x03));
 80011aa:	79fb      	ldrb	r3, [r7, #7]
 80011ac:	3b02      	subs	r3, #2
 80011ae:	b2db      	uxtb	r3, r3
 80011b0:	f003 0303 	and.w	r3, r3, #3
 80011b4:	b2db      	uxtb	r3, r3
 80011b6:	4619      	mov	r1, r3
 80011b8:	2003      	movs	r0, #3
 80011ba:	f7ff fdcf 	bl	8000d5c <nRF24_WriteRegister>
}
 80011be:	bf00      	nop
 80011c0:	3708      	adds	r7, #8
 80011c2:	46bd      	mov	sp, r7
 80011c4:	bd80      	pop	{r7, pc}

080011c6 <nRF24_SetRXAddress>:

void nRF24_SetRXAddress(uint8_t pipe, uint8_t* address)
{
 80011c6:	b580      	push	{r7, lr}
 80011c8:	b084      	sub	sp, #16
 80011ca:	af00      	add	r7, sp, #0
 80011cc:	4603      	mov	r3, r0
 80011ce:	6039      	str	r1, [r7, #0]
 80011d0:	71fb      	strb	r3, [r7, #7]
	// pipe 0 and pipe 1 are fully 40-bits storaged
	// pipe 2-5 is storaged only with last byte. Rest are as same as pipe 1
	// pipe 0 and 1 are LSByte first so they are needed to reverse address
	if((pipe == 0) || (pipe == 1))
 80011d2:	79fb      	ldrb	r3, [r7, #7]
 80011d4:	2b00      	cmp	r3, #0
 80011d6:	d002      	beq.n	80011de <nRF24_SetRXAddress+0x18>
 80011d8:	79fb      	ldrb	r3, [r7, #7]
 80011da:	2b01      	cmp	r3, #1
 80011dc:	d11d      	bne.n	800121a <nRF24_SetRXAddress+0x54>
	{
		uint8_t i;
		uint8_t address_rev[NRF24_ADDR_SIZE];
		for(i = 0; i<NRF24_ADDR_SIZE; i++)
 80011de:	2300      	movs	r3, #0
 80011e0:	73fb      	strb	r3, [r7, #15]
 80011e2:	e00d      	b.n	8001200 <nRF24_SetRXAddress+0x3a>
			address_rev[NRF24_ADDR_SIZE - 1 - i] = address[i];
 80011e4:	7bfb      	ldrb	r3, [r7, #15]
 80011e6:	683a      	ldr	r2, [r7, #0]
 80011e8:	441a      	add	r2, r3
 80011ea:	7bfb      	ldrb	r3, [r7, #15]
 80011ec:	f1c3 0302 	rsb	r3, r3, #2
 80011f0:	7812      	ldrb	r2, [r2, #0]
 80011f2:	3310      	adds	r3, #16
 80011f4:	443b      	add	r3, r7
 80011f6:	f803 2c04 	strb.w	r2, [r3, #-4]
		for(i = 0; i<NRF24_ADDR_SIZE; i++)
 80011fa:	7bfb      	ldrb	r3, [r7, #15]
 80011fc:	3301      	adds	r3, #1
 80011fe:	73fb      	strb	r3, [r7, #15]
 8001200:	7bfb      	ldrb	r3, [r7, #15]
 8001202:	2b02      	cmp	r3, #2
 8001204:	d9ee      	bls.n	80011e4 <nRF24_SetRXAddress+0x1e>
		nRF24_WriteRegisters(NRF24_RX_ADDR_P0 + pipe, address_rev, NRF24_ADDR_SIZE);
 8001206:	79fb      	ldrb	r3, [r7, #7]
 8001208:	330a      	adds	r3, #10
 800120a:	b2db      	uxtb	r3, r3
 800120c:	f107 010c 	add.w	r1, r7, #12
 8001210:	2203      	movs	r2, #3
 8001212:	4618      	mov	r0, r3
 8001214:	f7ff fdca 	bl	8000dac <nRF24_WriteRegisters>
	{
 8001218:	e00a      	b.n	8001230 <nRF24_SetRXAddress+0x6a>
	}
	else
		nRF24_WriteRegister(NRF24_RX_ADDR_P0 + pipe, address[NRF24_ADDR_SIZE-1]);
 800121a:	79fb      	ldrb	r3, [r7, #7]
 800121c:	330a      	adds	r3, #10
 800121e:	b2da      	uxtb	r2, r3
 8001220:	683b      	ldr	r3, [r7, #0]
 8001222:	3302      	adds	r3, #2
 8001224:	781b      	ldrb	r3, [r3, #0]
 8001226:	4619      	mov	r1, r3
 8001228:	4610      	mov	r0, r2
 800122a:	f7ff fd97 	bl	8000d5c <nRF24_WriteRegister>
}
 800122e:	bf00      	nop
 8001230:	bf00      	nop
 8001232:	3710      	adds	r7, #16
 8001234:	46bd      	mov	sp, r7
 8001236:	bd80      	pop	{r7, pc}

08001238 <nRF24_SetTXAddress>:

void nRF24_SetTXAddress(uint8_t* address)
{
 8001238:	b580      	push	{r7, lr}
 800123a:	b084      	sub	sp, #16
 800123c:	af00      	add	r7, sp, #0
 800123e:	6078      	str	r0, [r7, #4]
	// TX address is storaged similar to RX pipe 0 - LSByte first
	uint8_t i;
	uint8_t address_rev[NRF24_ADDR_SIZE];

	nRF24_ReadRegisters(NRF24_RX_ADDR_P0, address_rev, NRF24_ADDR_SIZE); // Backup P0 address
 8001240:	f107 030c 	add.w	r3, r7, #12
 8001244:	2203      	movs	r2, #3
 8001246:	4619      	mov	r1, r3
 8001248:	200a      	movs	r0, #10
 800124a:	f7ff fd61 	bl	8000d10 <nRF24_ReadRegisters>
	for(i = 0; i<NRF24_ADDR_SIZE; i++)
 800124e:	2300      	movs	r3, #0
 8001250:	73fb      	strb	r3, [r7, #15]
 8001252:	e00c      	b.n	800126e <nRF24_SetTXAddress+0x36>
		addr_p0_backup[NRF24_ADDR_SIZE - 1 - i] = address_rev[i]; //Reverse P0 address
 8001254:	7bfa      	ldrb	r2, [r7, #15]
 8001256:	7bfb      	ldrb	r3, [r7, #15]
 8001258:	f1c3 0302 	rsb	r3, r3, #2
 800125c:	3210      	adds	r2, #16
 800125e:	443a      	add	r2, r7
 8001260:	f812 1c04 	ldrb.w	r1, [r2, #-4]
 8001264:	4a16      	ldr	r2, [pc, #88]	; (80012c0 <nRF24_SetTXAddress+0x88>)
 8001266:	54d1      	strb	r1, [r2, r3]
	for(i = 0; i<NRF24_ADDR_SIZE; i++)
 8001268:	7bfb      	ldrb	r3, [r7, #15]
 800126a:	3301      	adds	r3, #1
 800126c:	73fb      	strb	r3, [r7, #15]
 800126e:	7bfb      	ldrb	r3, [r7, #15]
 8001270:	2b02      	cmp	r3, #2
 8001272:	d9ef      	bls.n	8001254 <nRF24_SetTXAddress+0x1c>

	for(i = 0; i<NRF24_ADDR_SIZE; i++)
 8001274:	2300      	movs	r3, #0
 8001276:	73fb      	strb	r3, [r7, #15]
 8001278:	e00d      	b.n	8001296 <nRF24_SetTXAddress+0x5e>
		address_rev[NRF24_ADDR_SIZE - 1 - i] = address[i];
 800127a:	7bfb      	ldrb	r3, [r7, #15]
 800127c:	687a      	ldr	r2, [r7, #4]
 800127e:	441a      	add	r2, r3
 8001280:	7bfb      	ldrb	r3, [r7, #15]
 8001282:	f1c3 0302 	rsb	r3, r3, #2
 8001286:	7812      	ldrb	r2, [r2, #0]
 8001288:	3310      	adds	r3, #16
 800128a:	443b      	add	r3, r7
 800128c:	f803 2c04 	strb.w	r2, [r3, #-4]
	for(i = 0; i<NRF24_ADDR_SIZE; i++)
 8001290:	7bfb      	ldrb	r3, [r7, #15]
 8001292:	3301      	adds	r3, #1
 8001294:	73fb      	strb	r3, [r7, #15]
 8001296:	7bfb      	ldrb	r3, [r7, #15]
 8001298:	2b02      	cmp	r3, #2
 800129a:	d9ee      	bls.n	800127a <nRF24_SetTXAddress+0x42>
	//make pipe 0 address backup;

	nRF24_WriteRegisters(NRF24_RX_ADDR_P0, address_rev, NRF24_ADDR_SIZE); // Pipe 0 must be same for auto ACk
 800129c:	f107 030c 	add.w	r3, r7, #12
 80012a0:	2203      	movs	r2, #3
 80012a2:	4619      	mov	r1, r3
 80012a4:	200a      	movs	r0, #10
 80012a6:	f7ff fd81 	bl	8000dac <nRF24_WriteRegisters>
	nRF24_WriteRegisters(NRF24_TX_ADDR, address_rev, NRF24_ADDR_SIZE);
 80012aa:	f107 030c 	add.w	r3, r7, #12
 80012ae:	2203      	movs	r2, #3
 80012b0:	4619      	mov	r1, r3
 80012b2:	2010      	movs	r0, #16
 80012b4:	f7ff fd7a 	bl	8000dac <nRF24_WriteRegisters>

}
 80012b8:	bf00      	nop
 80012ba:	3710      	adds	r7, #16
 80012bc:	46bd      	mov	sp, r7
 80012be:	bd80      	pop	{r7, pc}
 80012c0:	20000054 	.word	0x20000054

080012c4 <nRF24_ReadRXPaylaod>:
	}while(!((status & (1<<NRF24_MAX_RT)) || (status & (1<<NRF24_TX_DS))));

}

void nRF24_ReadRXPaylaod(uint8_t *data)
{
 80012c4:	b580      	push	{r7, lr}
 80012c6:	b082      	sub	sp, #8
 80012c8:	af00      	add	r7, sp, #0
 80012ca:	6078      	str	r0, [r7, #4]
	nRF24_ReadRegisters(NRF24_CMD_R_RX_PAYLOAD, data, NRF24_PAYLOAD_SIZE);
 80012cc:	2205      	movs	r2, #5
 80012ce:	6879      	ldr	r1, [r7, #4]
 80012d0:	2061      	movs	r0, #97	; 0x61
 80012d2:	f7ff fd1d 	bl	8000d10 <nRF24_ReadRegisters>
	nRF24_WriteRegister(NRF24_STATUS, (1<NRF24_RX_DR));
 80012d6:	2101      	movs	r1, #1
 80012d8:	2007      	movs	r0, #7
 80012da:	f7ff fd3f 	bl	8000d5c <nRF24_WriteRegister>
	if(nRF24_ReadStatus() & (1<<NRF24_TX_DS))
 80012de:	f7ff fda5 	bl	8000e2c <nRF24_ReadStatus>
 80012e2:	4603      	mov	r3, r0
 80012e4:	f003 0320 	and.w	r3, r3, #32
 80012e8:	2b00      	cmp	r3, #0
 80012ea:	d003      	beq.n	80012f4 <nRF24_ReadRXPaylaod+0x30>
		nRF24_WriteRegister(NRF24_STATUS, (1<<NRF24_TX_DS));
 80012ec:	2120      	movs	r1, #32
 80012ee:	2007      	movs	r0, #7
 80012f0:	f7ff fd34 	bl	8000d5c <nRF24_WriteRegister>
}
 80012f4:	bf00      	nop
 80012f6:	3708      	adds	r7, #8
 80012f8:	46bd      	mov	sp, r7
 80012fa:	bd80      	pop	{r7, pc}

080012fc <nRF24_RXAvailible>:


uint8_t nRF24_RXAvailible(void)
{
 80012fc:	b580      	push	{r7, lr}
 80012fe:	b082      	sub	sp, #8
 8001300:	af00      	add	r7, sp, #0
	uint8_t status = nRF24_ReadStatus();
 8001302:	f7ff fd93 	bl	8000e2c <nRF24_ReadStatus>
 8001306:	4603      	mov	r3, r0
 8001308:	71fb      	strb	r3, [r7, #7]

	// RX FIFO Interrupt
	if ((status & (1 << 6)))
 800130a:	79fb      	ldrb	r3, [r7, #7]
 800130c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001310:	2b00      	cmp	r3, #0
 8001312:	d00c      	beq.n	800132e <nRF24_RXAvailible+0x32>
	{
		nrf24_rx_flag = 1;
 8001314:	4b08      	ldr	r3, [pc, #32]	; (8001338 <nRF24_RXAvailible+0x3c>)
 8001316:	2201      	movs	r2, #1
 8001318:	701a      	strb	r2, [r3, #0]
		status |= (1<<6); // Interrupt flag clear
 800131a:	79fb      	ldrb	r3, [r7, #7]
 800131c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001320:	71fb      	strb	r3, [r7, #7]
		nRF24_WriteStatus(status);
 8001322:	79fb      	ldrb	r3, [r7, #7]
 8001324:	4618      	mov	r0, r3
 8001326:	f7ff fd89 	bl	8000e3c <nRF24_WriteStatus>
		return 1;
 800132a:	2301      	movs	r3, #1
 800132c:	e000      	b.n	8001330 <nRF24_RXAvailible+0x34>
	}
	return 0;
 800132e:	2300      	movs	r3, #0
}
 8001330:	4618      	mov	r0, r3
 8001332:	3708      	adds	r7, #8
 8001334:	46bd      	mov	sp, r7
 8001336:	bd80      	pop	{r7, pc}
 8001338:	20000057 	.word	0x20000057

0800133c <nRF24_Init>:

void nRF24_Init(SPI_HandleTypeDef *hspi)
{
 800133c:	b580      	push	{r7, lr}
 800133e:	b082      	sub	sp, #8
 8001340:	af00      	add	r7, sp, #0
 8001342:	6078      	str	r0, [r7, #4]
	hspi_nrf = hspi;
 8001344:	4a1f      	ldr	r2, [pc, #124]	; (80013c4 <nRF24_Init+0x88>)
 8001346:	687b      	ldr	r3, [r7, #4]
 8001348:	6013      	str	r3, [r2, #0]

	NRF24_CE_LOW;
 800134a:	2200      	movs	r2, #0
 800134c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001350:	481d      	ldr	r0, [pc, #116]	; (80013c8 <nRF24_Init+0x8c>)
 8001352:	f000 fce3 	bl	8001d1c <HAL_GPIO_WritePin>
	NRF24_CSN_HIGH;
 8001356:	2201      	movs	r2, #1
 8001358:	f44f 7100 	mov.w	r1, #512	; 0x200
 800135c:	481a      	ldr	r0, [pc, #104]	; (80013c8 <nRF24_Init+0x8c>)
 800135e:	f000 fcdd 	bl	8001d1c <HAL_GPIO_WritePin>

	HAL_Delay(5);
 8001362:	2005      	movs	r0, #5
 8001364:	f000 fa56 	bl	8001814 <HAL_Delay>

	nRF24_SetPALevel(NRF24_PA_PWR_0dBM); // Radio power
 8001368:	2003      	movs	r0, #3
 800136a:	f7ff fda5 	bl	8000eb8 <nRF24_SetPALevel>
	nRF24_SetDataRate(NRF24_RF_DR_250KBPS); // Data Rate
 800136e:	2002      	movs	r0, #2
 8001370:	f7ff fdc1 	bl	8000ef6 <nRF24_SetDataRate>
	nRF24_EnableCRC(1); // Enable CRC
 8001374:	2001      	movs	r0, #1
 8001376:	f7ff fe1d 	bl	8000fb4 <nRF24_EnableCRC>
	nRF24_SetCRCLength(NRF24_CRC_WIDTH_1B); // CRC Length 1 byte
 800137a:	2000      	movs	r0, #0
 800137c:	f7ff fe37 	bl	8000fee <nRF24_SetCRCLength>
	nRF24_SetRetries(0x04, 0x07); // 1000us, 7 times
 8001380:	2107      	movs	r1, #7
 8001382:	2004      	movs	r0, #4
 8001384:	f7ff fe50 	bl	8001028 <nRF24_SetRetries>
	nRF24_WriteRegister(NRF24_DYNPD, 0); // Disable dynamic payloads for all pipes
 8001388:	2100      	movs	r1, #0
 800138a:	201c      	movs	r0, #28
 800138c:	f7ff fce6 	bl	8000d5c <nRF24_WriteRegister>
	nRF24_SetRFChannel(10); // Set RF channel for transmission
 8001390:	200a      	movs	r0, #10
 8001392:	f7ff fe64 	bl	800105e <nRF24_SetRFChannel>
	nRF24_SetPayloadSize(0, NRF24_PAYLOAD_SIZE); // Set 32 bytes payload for pipe 0
 8001396:	2105      	movs	r1, #5
 8001398:	2000      	movs	r0, #0
 800139a:	f7ff fe71 	bl	8001080 <nRF24_SetPayloadSize>
	nRF24_EnablePipe(0, 1); // Enable pipe 0
 800139e:	2101      	movs	r1, #1
 80013a0:	2000      	movs	r0, #0
 80013a2:	f7ff fe89 	bl	80010b8 <nRF24_EnablePipe>
	nRF24_AutoACK(0, 1); // Enable auto ACK for pipe 0
 80013a6:	2101      	movs	r1, #1
 80013a8:	2000      	movs	r0, #0
 80013aa:	f7ff feba 	bl	8001122 <nRF24_AutoACK>
	nRF24_SetAddressWidth(NRF24_ADDR_SIZE); // Set address size
 80013ae:	2003      	movs	r0, #3
 80013b0:	f7ff feec 	bl	800118c <nRF24_SetAddressWidth>

	HAL_Delay(20);
 80013b4:	2014      	movs	r0, #20
 80013b6:	f000 fa2d 	bl	8001814 <HAL_Delay>

}
 80013ba:	bf00      	nop
 80013bc:	3708      	adds	r7, #8
 80013be:	46bd      	mov	sp, r7
 80013c0:	bd80      	pop	{r7, pc}
 80013c2:	bf00      	nop
 80013c4:	20000050 	.word	0x20000050
 80013c8:	40010800 	.word	0x40010800

080013cc <MX_SPI1_Init>:
 80013cc:	b580      	push	{r7, lr}
 80013ce:	af00      	add	r7, sp, #0
 80013d0:	4b17      	ldr	r3, [pc, #92]	; (8001430 <MX_SPI1_Init+0x64>)
 80013d2:	4a18      	ldr	r2, [pc, #96]	; (8001434 <MX_SPI1_Init+0x68>)
 80013d4:	601a      	str	r2, [r3, #0]
 80013d6:	4b16      	ldr	r3, [pc, #88]	; (8001430 <MX_SPI1_Init+0x64>)
 80013d8:	f44f 7282 	mov.w	r2, #260	; 0x104
 80013dc:	605a      	str	r2, [r3, #4]
 80013de:	4b14      	ldr	r3, [pc, #80]	; (8001430 <MX_SPI1_Init+0x64>)
 80013e0:	2200      	movs	r2, #0
 80013e2:	609a      	str	r2, [r3, #8]
 80013e4:	4b12      	ldr	r3, [pc, #72]	; (8001430 <MX_SPI1_Init+0x64>)
 80013e6:	2200      	movs	r2, #0
 80013e8:	60da      	str	r2, [r3, #12]
 80013ea:	4b11      	ldr	r3, [pc, #68]	; (8001430 <MX_SPI1_Init+0x64>)
 80013ec:	2200      	movs	r2, #0
 80013ee:	611a      	str	r2, [r3, #16]
 80013f0:	4b0f      	ldr	r3, [pc, #60]	; (8001430 <MX_SPI1_Init+0x64>)
 80013f2:	2200      	movs	r2, #0
 80013f4:	615a      	str	r2, [r3, #20]
 80013f6:	4b0e      	ldr	r3, [pc, #56]	; (8001430 <MX_SPI1_Init+0x64>)
 80013f8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80013fc:	619a      	str	r2, [r3, #24]
 80013fe:	4b0c      	ldr	r3, [pc, #48]	; (8001430 <MX_SPI1_Init+0x64>)
 8001400:	2210      	movs	r2, #16
 8001402:	61da      	str	r2, [r3, #28]
 8001404:	4b0a      	ldr	r3, [pc, #40]	; (8001430 <MX_SPI1_Init+0x64>)
 8001406:	2200      	movs	r2, #0
 8001408:	621a      	str	r2, [r3, #32]
 800140a:	4b09      	ldr	r3, [pc, #36]	; (8001430 <MX_SPI1_Init+0x64>)
 800140c:	2200      	movs	r2, #0
 800140e:	625a      	str	r2, [r3, #36]	; 0x24
 8001410:	4b07      	ldr	r3, [pc, #28]	; (8001430 <MX_SPI1_Init+0x64>)
 8001412:	2200      	movs	r2, #0
 8001414:	629a      	str	r2, [r3, #40]	; 0x28
 8001416:	4b06      	ldr	r3, [pc, #24]	; (8001430 <MX_SPI1_Init+0x64>)
 8001418:	220a      	movs	r2, #10
 800141a:	62da      	str	r2, [r3, #44]	; 0x2c
 800141c:	4804      	ldr	r0, [pc, #16]	; (8001430 <MX_SPI1_Init+0x64>)
 800141e:	f001 f88d 	bl	800253c <HAL_SPI_Init>
 8001422:	4603      	mov	r3, r0
 8001424:	2b00      	cmp	r3, #0
 8001426:	d001      	beq.n	800142c <MX_SPI1_Init+0x60>
 8001428:	f7ff fc1a 	bl	8000c60 <Error_Handler>
 800142c:	bf00      	nop
 800142e:	bd80      	pop	{r7, pc}
 8001430:	20000058 	.word	0x20000058
 8001434:	40013000 	.word	0x40013000

08001438 <HAL_SPI_MspInit>:
 8001438:	b580      	push	{r7, lr}
 800143a:	b088      	sub	sp, #32
 800143c:	af00      	add	r7, sp, #0
 800143e:	6078      	str	r0, [r7, #4]
 8001440:	f107 0310 	add.w	r3, r7, #16
 8001444:	2200      	movs	r2, #0
 8001446:	601a      	str	r2, [r3, #0]
 8001448:	605a      	str	r2, [r3, #4]
 800144a:	609a      	str	r2, [r3, #8]
 800144c:	60da      	str	r2, [r3, #12]
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	681b      	ldr	r3, [r3, #0]
 8001452:	4a1b      	ldr	r2, [pc, #108]	; (80014c0 <HAL_SPI_MspInit+0x88>)
 8001454:	4293      	cmp	r3, r2
 8001456:	d12f      	bne.n	80014b8 <HAL_SPI_MspInit+0x80>
 8001458:	4b1a      	ldr	r3, [pc, #104]	; (80014c4 <HAL_SPI_MspInit+0x8c>)
 800145a:	699b      	ldr	r3, [r3, #24]
 800145c:	4a19      	ldr	r2, [pc, #100]	; (80014c4 <HAL_SPI_MspInit+0x8c>)
 800145e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001462:	6193      	str	r3, [r2, #24]
 8001464:	4b17      	ldr	r3, [pc, #92]	; (80014c4 <HAL_SPI_MspInit+0x8c>)
 8001466:	699b      	ldr	r3, [r3, #24]
 8001468:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800146c:	60fb      	str	r3, [r7, #12]
 800146e:	68fb      	ldr	r3, [r7, #12]
 8001470:	4b14      	ldr	r3, [pc, #80]	; (80014c4 <HAL_SPI_MspInit+0x8c>)
 8001472:	699b      	ldr	r3, [r3, #24]
 8001474:	4a13      	ldr	r2, [pc, #76]	; (80014c4 <HAL_SPI_MspInit+0x8c>)
 8001476:	f043 0304 	orr.w	r3, r3, #4
 800147a:	6193      	str	r3, [r2, #24]
 800147c:	4b11      	ldr	r3, [pc, #68]	; (80014c4 <HAL_SPI_MspInit+0x8c>)
 800147e:	699b      	ldr	r3, [r3, #24]
 8001480:	f003 0304 	and.w	r3, r3, #4
 8001484:	60bb      	str	r3, [r7, #8]
 8001486:	68bb      	ldr	r3, [r7, #8]
 8001488:	23a0      	movs	r3, #160	; 0xa0
 800148a:	613b      	str	r3, [r7, #16]
 800148c:	2302      	movs	r3, #2
 800148e:	617b      	str	r3, [r7, #20]
 8001490:	2303      	movs	r3, #3
 8001492:	61fb      	str	r3, [r7, #28]
 8001494:	f107 0310 	add.w	r3, r7, #16
 8001498:	4619      	mov	r1, r3
 800149a:	480b      	ldr	r0, [pc, #44]	; (80014c8 <HAL_SPI_MspInit+0x90>)
 800149c:	f000 fac2 	bl	8001a24 <HAL_GPIO_Init>
 80014a0:	2340      	movs	r3, #64	; 0x40
 80014a2:	613b      	str	r3, [r7, #16]
 80014a4:	2300      	movs	r3, #0
 80014a6:	617b      	str	r3, [r7, #20]
 80014a8:	2300      	movs	r3, #0
 80014aa:	61bb      	str	r3, [r7, #24]
 80014ac:	f107 0310 	add.w	r3, r7, #16
 80014b0:	4619      	mov	r1, r3
 80014b2:	4805      	ldr	r0, [pc, #20]	; (80014c8 <HAL_SPI_MspInit+0x90>)
 80014b4:	f000 fab6 	bl	8001a24 <HAL_GPIO_Init>
 80014b8:	bf00      	nop
 80014ba:	3720      	adds	r7, #32
 80014bc:	46bd      	mov	sp, r7
 80014be:	bd80      	pop	{r7, pc}
 80014c0:	40013000 	.word	0x40013000
 80014c4:	40021000 	.word	0x40021000
 80014c8:	40010800 	.word	0x40010800

080014cc <HAL_MspInit>:
 80014cc:	b480      	push	{r7}
 80014ce:	b083      	sub	sp, #12
 80014d0:	af00      	add	r7, sp, #0
 80014d2:	4b0e      	ldr	r3, [pc, #56]	; (800150c <HAL_MspInit+0x40>)
 80014d4:	699b      	ldr	r3, [r3, #24]
 80014d6:	4a0d      	ldr	r2, [pc, #52]	; (800150c <HAL_MspInit+0x40>)
 80014d8:	f043 0301 	orr.w	r3, r3, #1
 80014dc:	6193      	str	r3, [r2, #24]
 80014de:	4b0b      	ldr	r3, [pc, #44]	; (800150c <HAL_MspInit+0x40>)
 80014e0:	699b      	ldr	r3, [r3, #24]
 80014e2:	f003 0301 	and.w	r3, r3, #1
 80014e6:	607b      	str	r3, [r7, #4]
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	4b08      	ldr	r3, [pc, #32]	; (800150c <HAL_MspInit+0x40>)
 80014ec:	69db      	ldr	r3, [r3, #28]
 80014ee:	4a07      	ldr	r2, [pc, #28]	; (800150c <HAL_MspInit+0x40>)
 80014f0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80014f4:	61d3      	str	r3, [r2, #28]
 80014f6:	4b05      	ldr	r3, [pc, #20]	; (800150c <HAL_MspInit+0x40>)
 80014f8:	69db      	ldr	r3, [r3, #28]
 80014fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80014fe:	603b      	str	r3, [r7, #0]
 8001500:	683b      	ldr	r3, [r7, #0]
 8001502:	bf00      	nop
 8001504:	370c      	adds	r7, #12
 8001506:	46bd      	mov	sp, r7
 8001508:	bc80      	pop	{r7}
 800150a:	4770      	bx	lr
 800150c:	40021000 	.word	0x40021000

08001510 <NMI_Handler>:
 8001510:	b480      	push	{r7}
 8001512:	af00      	add	r7, sp, #0
 8001514:	e7fe      	b.n	8001514 <NMI_Handler+0x4>

08001516 <HardFault_Handler>:
 8001516:	b480      	push	{r7}
 8001518:	af00      	add	r7, sp, #0
 800151a:	e7fe      	b.n	800151a <HardFault_Handler+0x4>

0800151c <MemManage_Handler>:
 800151c:	b480      	push	{r7}
 800151e:	af00      	add	r7, sp, #0
 8001520:	e7fe      	b.n	8001520 <MemManage_Handler+0x4>

08001522 <BusFault_Handler>:
 8001522:	b480      	push	{r7}
 8001524:	af00      	add	r7, sp, #0
 8001526:	e7fe      	b.n	8001526 <BusFault_Handler+0x4>

08001528 <UsageFault_Handler>:
 8001528:	b480      	push	{r7}
 800152a:	af00      	add	r7, sp, #0
 800152c:	e7fe      	b.n	800152c <UsageFault_Handler+0x4>

0800152e <SVC_Handler>:
 800152e:	b480      	push	{r7}
 8001530:	af00      	add	r7, sp, #0
 8001532:	bf00      	nop
 8001534:	46bd      	mov	sp, r7
 8001536:	bc80      	pop	{r7}
 8001538:	4770      	bx	lr

0800153a <DebugMon_Handler>:
 800153a:	b480      	push	{r7}
 800153c:	af00      	add	r7, sp, #0
 800153e:	bf00      	nop
 8001540:	46bd      	mov	sp, r7
 8001542:	bc80      	pop	{r7}
 8001544:	4770      	bx	lr

08001546 <PendSV_Handler>:
 8001546:	b480      	push	{r7}
 8001548:	af00      	add	r7, sp, #0
 800154a:	bf00      	nop
 800154c:	46bd      	mov	sp, r7
 800154e:	bc80      	pop	{r7}
 8001550:	4770      	bx	lr

08001552 <SysTick_Handler>:
 8001552:	b580      	push	{r7, lr}
 8001554:	af00      	add	r7, sp, #0
 8001556:	f000 f941 	bl	80017dc <HAL_IncTick>
 800155a:	bf00      	nop
 800155c:	bd80      	pop	{r7, pc}

0800155e <SystemInit>:
 800155e:	b480      	push	{r7}
 8001560:	af00      	add	r7, sp, #0
 8001562:	bf00      	nop
 8001564:	46bd      	mov	sp, r7
 8001566:	bc80      	pop	{r7}
 8001568:	4770      	bx	lr
	...

0800156c <MX_TIM2_Init>:
 800156c:	b580      	push	{r7, lr}
 800156e:	b08e      	sub	sp, #56	; 0x38
 8001570:	af00      	add	r7, sp, #0
 8001572:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001576:	2200      	movs	r2, #0
 8001578:	601a      	str	r2, [r3, #0]
 800157a:	605a      	str	r2, [r3, #4]
 800157c:	609a      	str	r2, [r3, #8]
 800157e:	60da      	str	r2, [r3, #12]
 8001580:	f107 0320 	add.w	r3, r7, #32
 8001584:	2200      	movs	r2, #0
 8001586:	601a      	str	r2, [r3, #0]
 8001588:	605a      	str	r2, [r3, #4]
 800158a:	1d3b      	adds	r3, r7, #4
 800158c:	2200      	movs	r2, #0
 800158e:	601a      	str	r2, [r3, #0]
 8001590:	605a      	str	r2, [r3, #4]
 8001592:	609a      	str	r2, [r3, #8]
 8001594:	60da      	str	r2, [r3, #12]
 8001596:	611a      	str	r2, [r3, #16]
 8001598:	615a      	str	r2, [r3, #20]
 800159a:	619a      	str	r2, [r3, #24]
 800159c:	4b32      	ldr	r3, [pc, #200]	; (8001668 <MX_TIM2_Init+0xfc>)
 800159e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80015a2:	601a      	str	r2, [r3, #0]
 80015a4:	4b30      	ldr	r3, [pc, #192]	; (8001668 <MX_TIM2_Init+0xfc>)
 80015a6:	2203      	movs	r2, #3
 80015a8:	605a      	str	r2, [r3, #4]
 80015aa:	4b2f      	ldr	r3, [pc, #188]	; (8001668 <MX_TIM2_Init+0xfc>)
 80015ac:	2200      	movs	r2, #0
 80015ae:	609a      	str	r2, [r3, #8]
 80015b0:	4b2d      	ldr	r3, [pc, #180]	; (8001668 <MX_TIM2_Init+0xfc>)
 80015b2:	f240 32e7 	movw	r2, #999	; 0x3e7
 80015b6:	60da      	str	r2, [r3, #12]
 80015b8:	4b2b      	ldr	r3, [pc, #172]	; (8001668 <MX_TIM2_Init+0xfc>)
 80015ba:	2200      	movs	r2, #0
 80015bc:	611a      	str	r2, [r3, #16]
 80015be:	4b2a      	ldr	r3, [pc, #168]	; (8001668 <MX_TIM2_Init+0xfc>)
 80015c0:	2200      	movs	r2, #0
 80015c2:	619a      	str	r2, [r3, #24]
 80015c4:	4828      	ldr	r0, [pc, #160]	; (8001668 <MX_TIM2_Init+0xfc>)
 80015c6:	f001 fd41 	bl	800304c <HAL_TIM_Base_Init>
 80015ca:	4603      	mov	r3, r0
 80015cc:	2b00      	cmp	r3, #0
 80015ce:	d001      	beq.n	80015d4 <MX_TIM2_Init+0x68>
 80015d0:	f7ff fb46 	bl	8000c60 <Error_Handler>
 80015d4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80015d8:	62bb      	str	r3, [r7, #40]	; 0x28
 80015da:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80015de:	4619      	mov	r1, r3
 80015e0:	4821      	ldr	r0, [pc, #132]	; (8001668 <MX_TIM2_Init+0xfc>)
 80015e2:	f001 ff39 	bl	8003458 <HAL_TIM_ConfigClockSource>
 80015e6:	4603      	mov	r3, r0
 80015e8:	2b00      	cmp	r3, #0
 80015ea:	d001      	beq.n	80015f0 <MX_TIM2_Init+0x84>
 80015ec:	f7ff fb38 	bl	8000c60 <Error_Handler>
 80015f0:	481d      	ldr	r0, [pc, #116]	; (8001668 <MX_TIM2_Init+0xfc>)
 80015f2:	f001 fd7a 	bl	80030ea <HAL_TIM_PWM_Init>
 80015f6:	4603      	mov	r3, r0
 80015f8:	2b00      	cmp	r3, #0
 80015fa:	d001      	beq.n	8001600 <MX_TIM2_Init+0x94>
 80015fc:	f7ff fb30 	bl	8000c60 <Error_Handler>
 8001600:	2300      	movs	r3, #0
 8001602:	623b      	str	r3, [r7, #32]
 8001604:	2300      	movs	r3, #0
 8001606:	627b      	str	r3, [r7, #36]	; 0x24
 8001608:	f107 0320 	add.w	r3, r7, #32
 800160c:	4619      	mov	r1, r3
 800160e:	4816      	ldr	r0, [pc, #88]	; (8001668 <MX_TIM2_Init+0xfc>)
 8001610:	f002 fa84 	bl	8003b1c <HAL_TIMEx_MasterConfigSynchronization>
 8001614:	4603      	mov	r3, r0
 8001616:	2b00      	cmp	r3, #0
 8001618:	d001      	beq.n	800161e <MX_TIM2_Init+0xb2>
 800161a:	f7ff fb21 	bl	8000c60 <Error_Handler>
 800161e:	2360      	movs	r3, #96	; 0x60
 8001620:	607b      	str	r3, [r7, #4]
 8001622:	2300      	movs	r3, #0
 8001624:	60bb      	str	r3, [r7, #8]
 8001626:	2300      	movs	r3, #0
 8001628:	60fb      	str	r3, [r7, #12]
 800162a:	2300      	movs	r3, #0
 800162c:	617b      	str	r3, [r7, #20]
 800162e:	1d3b      	adds	r3, r7, #4
 8001630:	2204      	movs	r2, #4
 8001632:	4619      	mov	r1, r3
 8001634:	480c      	ldr	r0, [pc, #48]	; (8001668 <MX_TIM2_Init+0xfc>)
 8001636:	f001 fe4d 	bl	80032d4 <HAL_TIM_PWM_ConfigChannel>
 800163a:	4603      	mov	r3, r0
 800163c:	2b00      	cmp	r3, #0
 800163e:	d001      	beq.n	8001644 <MX_TIM2_Init+0xd8>
 8001640:	f7ff fb0e 	bl	8000c60 <Error_Handler>
 8001644:	1d3b      	adds	r3, r7, #4
 8001646:	2208      	movs	r2, #8
 8001648:	4619      	mov	r1, r3
 800164a:	4807      	ldr	r0, [pc, #28]	; (8001668 <MX_TIM2_Init+0xfc>)
 800164c:	f001 fe42 	bl	80032d4 <HAL_TIM_PWM_ConfigChannel>
 8001650:	4603      	mov	r3, r0
 8001652:	2b00      	cmp	r3, #0
 8001654:	d001      	beq.n	800165a <MX_TIM2_Init+0xee>
 8001656:	f7ff fb03 	bl	8000c60 <Error_Handler>
 800165a:	4803      	ldr	r0, [pc, #12]	; (8001668 <MX_TIM2_Init+0xfc>)
 800165c:	f000 f822 	bl	80016a4 <HAL_TIM_MspPostInit>
 8001660:	bf00      	nop
 8001662:	3738      	adds	r7, #56	; 0x38
 8001664:	46bd      	mov	sp, r7
 8001666:	bd80      	pop	{r7, pc}
 8001668:	200000b0 	.word	0x200000b0

0800166c <HAL_TIM_Base_MspInit>:
 800166c:	b480      	push	{r7}
 800166e:	b085      	sub	sp, #20
 8001670:	af00      	add	r7, sp, #0
 8001672:	6078      	str	r0, [r7, #4]
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	681b      	ldr	r3, [r3, #0]
 8001678:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800167c:	d10b      	bne.n	8001696 <HAL_TIM_Base_MspInit+0x2a>
 800167e:	4b08      	ldr	r3, [pc, #32]	; (80016a0 <HAL_TIM_Base_MspInit+0x34>)
 8001680:	69db      	ldr	r3, [r3, #28]
 8001682:	4a07      	ldr	r2, [pc, #28]	; (80016a0 <HAL_TIM_Base_MspInit+0x34>)
 8001684:	f043 0301 	orr.w	r3, r3, #1
 8001688:	61d3      	str	r3, [r2, #28]
 800168a:	4b05      	ldr	r3, [pc, #20]	; (80016a0 <HAL_TIM_Base_MspInit+0x34>)
 800168c:	69db      	ldr	r3, [r3, #28]
 800168e:	f003 0301 	and.w	r3, r3, #1
 8001692:	60fb      	str	r3, [r7, #12]
 8001694:	68fb      	ldr	r3, [r7, #12]
 8001696:	bf00      	nop
 8001698:	3714      	adds	r7, #20
 800169a:	46bd      	mov	sp, r7
 800169c:	bc80      	pop	{r7}
 800169e:	4770      	bx	lr
 80016a0:	40021000 	.word	0x40021000

080016a4 <HAL_TIM_MspPostInit>:
 80016a4:	b580      	push	{r7, lr}
 80016a6:	b088      	sub	sp, #32
 80016a8:	af00      	add	r7, sp, #0
 80016aa:	6078      	str	r0, [r7, #4]
 80016ac:	f107 0310 	add.w	r3, r7, #16
 80016b0:	2200      	movs	r2, #0
 80016b2:	601a      	str	r2, [r3, #0]
 80016b4:	605a      	str	r2, [r3, #4]
 80016b6:	609a      	str	r2, [r3, #8]
 80016b8:	60da      	str	r2, [r3, #12]
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80016c2:	d117      	bne.n	80016f4 <HAL_TIM_MspPostInit+0x50>
 80016c4:	4b0d      	ldr	r3, [pc, #52]	; (80016fc <HAL_TIM_MspPostInit+0x58>)
 80016c6:	699b      	ldr	r3, [r3, #24]
 80016c8:	4a0c      	ldr	r2, [pc, #48]	; (80016fc <HAL_TIM_MspPostInit+0x58>)
 80016ca:	f043 0304 	orr.w	r3, r3, #4
 80016ce:	6193      	str	r3, [r2, #24]
 80016d0:	4b0a      	ldr	r3, [pc, #40]	; (80016fc <HAL_TIM_MspPostInit+0x58>)
 80016d2:	699b      	ldr	r3, [r3, #24]
 80016d4:	f003 0304 	and.w	r3, r3, #4
 80016d8:	60fb      	str	r3, [r7, #12]
 80016da:	68fb      	ldr	r3, [r7, #12]
 80016dc:	2306      	movs	r3, #6
 80016de:	613b      	str	r3, [r7, #16]
 80016e0:	2302      	movs	r3, #2
 80016e2:	617b      	str	r3, [r7, #20]
 80016e4:	2302      	movs	r3, #2
 80016e6:	61fb      	str	r3, [r7, #28]
 80016e8:	f107 0310 	add.w	r3, r7, #16
 80016ec:	4619      	mov	r1, r3
 80016ee:	4804      	ldr	r0, [pc, #16]	; (8001700 <HAL_TIM_MspPostInit+0x5c>)
 80016f0:	f000 f998 	bl	8001a24 <HAL_GPIO_Init>
 80016f4:	bf00      	nop
 80016f6:	3720      	adds	r7, #32
 80016f8:	46bd      	mov	sp, r7
 80016fa:	bd80      	pop	{r7, pc}
 80016fc:	40021000 	.word	0x40021000
 8001700:	40010800 	.word	0x40010800

08001704 <Reset_Handler>:
 8001704:	f7ff ff2b 	bl	800155e <SystemInit>
 8001708:	480b      	ldr	r0, [pc, #44]	; (8001738 <LoopFillZerobss+0xe>)
 800170a:	490c      	ldr	r1, [pc, #48]	; (800173c <LoopFillZerobss+0x12>)
 800170c:	4a0c      	ldr	r2, [pc, #48]	; (8001740 <LoopFillZerobss+0x16>)
 800170e:	2300      	movs	r3, #0
 8001710:	e002      	b.n	8001718 <LoopCopyDataInit>

08001712 <CopyDataInit>:
 8001712:	58d4      	ldr	r4, [r2, r3]
 8001714:	50c4      	str	r4, [r0, r3]
 8001716:	3304      	adds	r3, #4

08001718 <LoopCopyDataInit>:
 8001718:	18c4      	adds	r4, r0, r3
 800171a:	428c      	cmp	r4, r1
 800171c:	d3f9      	bcc.n	8001712 <CopyDataInit>
 800171e:	4a09      	ldr	r2, [pc, #36]	; (8001744 <LoopFillZerobss+0x1a>)
 8001720:	4c09      	ldr	r4, [pc, #36]	; (8001748 <LoopFillZerobss+0x1e>)
 8001722:	2300      	movs	r3, #0
 8001724:	e001      	b.n	800172a <LoopFillZerobss>

08001726 <FillZerobss>:
 8001726:	6013      	str	r3, [r2, #0]
 8001728:	3204      	adds	r2, #4

0800172a <LoopFillZerobss>:
 800172a:	42a2      	cmp	r2, r4
 800172c:	d3fb      	bcc.n	8001726 <FillZerobss>
 800172e:	f002 fa4d 	bl	8003bcc <__libc_init_array>
 8001732:	f7fe fd8f 	bl	8000254 <main>
 8001736:	4770      	bx	lr
 8001738:	20000000 	.word	0x20000000
 800173c:	20000010 	.word	0x20000010
 8001740:	08003c70 	.word	0x08003c70
 8001744:	20000010 	.word	0x20000010
 8001748:	200000fc 	.word	0x200000fc

0800174c <ADC1_2_IRQHandler>:
 800174c:	e7fe      	b.n	800174c <ADC1_2_IRQHandler>
	...

08001750 <HAL_Init>:
 8001750:	b580      	push	{r7, lr}
 8001752:	af00      	add	r7, sp, #0
 8001754:	4b08      	ldr	r3, [pc, #32]	; (8001778 <HAL_Init+0x28>)
 8001756:	681b      	ldr	r3, [r3, #0]
 8001758:	4a07      	ldr	r2, [pc, #28]	; (8001778 <HAL_Init+0x28>)
 800175a:	f043 0310 	orr.w	r3, r3, #16
 800175e:	6013      	str	r3, [r2, #0]
 8001760:	2003      	movs	r0, #3
 8001762:	f000 f92b 	bl	80019bc <HAL_NVIC_SetPriorityGrouping>
 8001766:	200f      	movs	r0, #15
 8001768:	f000 f808 	bl	800177c <HAL_InitTick>
 800176c:	f7ff feae 	bl	80014cc <HAL_MspInit>
 8001770:	2300      	movs	r3, #0
 8001772:	4618      	mov	r0, r3
 8001774:	bd80      	pop	{r7, pc}
 8001776:	bf00      	nop
 8001778:	40022000 	.word	0x40022000

0800177c <HAL_InitTick>:
 800177c:	b580      	push	{r7, lr}
 800177e:	b082      	sub	sp, #8
 8001780:	af00      	add	r7, sp, #0
 8001782:	6078      	str	r0, [r7, #4]
 8001784:	4b12      	ldr	r3, [pc, #72]	; (80017d0 <HAL_InitTick+0x54>)
 8001786:	681a      	ldr	r2, [r3, #0]
 8001788:	4b12      	ldr	r3, [pc, #72]	; (80017d4 <HAL_InitTick+0x58>)
 800178a:	781b      	ldrb	r3, [r3, #0]
 800178c:	4619      	mov	r1, r3
 800178e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001792:	fbb3 f3f1 	udiv	r3, r3, r1
 8001796:	fbb2 f3f3 	udiv	r3, r2, r3
 800179a:	4618      	mov	r0, r3
 800179c:	f000 f935 	bl	8001a0a <HAL_SYSTICK_Config>
 80017a0:	4603      	mov	r3, r0
 80017a2:	2b00      	cmp	r3, #0
 80017a4:	d001      	beq.n	80017aa <HAL_InitTick+0x2e>
 80017a6:	2301      	movs	r3, #1
 80017a8:	e00e      	b.n	80017c8 <HAL_InitTick+0x4c>
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	2b0f      	cmp	r3, #15
 80017ae:	d80a      	bhi.n	80017c6 <HAL_InitTick+0x4a>
 80017b0:	2200      	movs	r2, #0
 80017b2:	6879      	ldr	r1, [r7, #4]
 80017b4:	f04f 30ff 	mov.w	r0, #4294967295
 80017b8:	f000 f90b 	bl	80019d2 <HAL_NVIC_SetPriority>
 80017bc:	4a06      	ldr	r2, [pc, #24]	; (80017d8 <HAL_InitTick+0x5c>)
 80017be:	687b      	ldr	r3, [r7, #4]
 80017c0:	6013      	str	r3, [r2, #0]
 80017c2:	2300      	movs	r3, #0
 80017c4:	e000      	b.n	80017c8 <HAL_InitTick+0x4c>
 80017c6:	2301      	movs	r3, #1
 80017c8:	4618      	mov	r0, r3
 80017ca:	3708      	adds	r7, #8
 80017cc:	46bd      	mov	sp, r7
 80017ce:	bd80      	pop	{r7, pc}
 80017d0:	20000004 	.word	0x20000004
 80017d4:	2000000c 	.word	0x2000000c
 80017d8:	20000008 	.word	0x20000008

080017dc <HAL_IncTick>:
 80017dc:	b480      	push	{r7}
 80017de:	af00      	add	r7, sp, #0
 80017e0:	4b05      	ldr	r3, [pc, #20]	; (80017f8 <HAL_IncTick+0x1c>)
 80017e2:	781b      	ldrb	r3, [r3, #0]
 80017e4:	461a      	mov	r2, r3
 80017e6:	4b05      	ldr	r3, [pc, #20]	; (80017fc <HAL_IncTick+0x20>)
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	4413      	add	r3, r2
 80017ec:	4a03      	ldr	r2, [pc, #12]	; (80017fc <HAL_IncTick+0x20>)
 80017ee:	6013      	str	r3, [r2, #0]
 80017f0:	bf00      	nop
 80017f2:	46bd      	mov	sp, r7
 80017f4:	bc80      	pop	{r7}
 80017f6:	4770      	bx	lr
 80017f8:	2000000c 	.word	0x2000000c
 80017fc:	200000f8 	.word	0x200000f8

08001800 <HAL_GetTick>:
 8001800:	b480      	push	{r7}
 8001802:	af00      	add	r7, sp, #0
 8001804:	4b02      	ldr	r3, [pc, #8]	; (8001810 <HAL_GetTick+0x10>)
 8001806:	681b      	ldr	r3, [r3, #0]
 8001808:	4618      	mov	r0, r3
 800180a:	46bd      	mov	sp, r7
 800180c:	bc80      	pop	{r7}
 800180e:	4770      	bx	lr
 8001810:	200000f8 	.word	0x200000f8

08001814 <HAL_Delay>:
 8001814:	b580      	push	{r7, lr}
 8001816:	b084      	sub	sp, #16
 8001818:	af00      	add	r7, sp, #0
 800181a:	6078      	str	r0, [r7, #4]
 800181c:	f7ff fff0 	bl	8001800 <HAL_GetTick>
 8001820:	60b8      	str	r0, [r7, #8]
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	60fb      	str	r3, [r7, #12]
 8001826:	68fb      	ldr	r3, [r7, #12]
 8001828:	f1b3 3fff 	cmp.w	r3, #4294967295
 800182c:	d005      	beq.n	800183a <HAL_Delay+0x26>
 800182e:	4b0a      	ldr	r3, [pc, #40]	; (8001858 <HAL_Delay+0x44>)
 8001830:	781b      	ldrb	r3, [r3, #0]
 8001832:	461a      	mov	r2, r3
 8001834:	68fb      	ldr	r3, [r7, #12]
 8001836:	4413      	add	r3, r2
 8001838:	60fb      	str	r3, [r7, #12]
 800183a:	bf00      	nop
 800183c:	f7ff ffe0 	bl	8001800 <HAL_GetTick>
 8001840:	4602      	mov	r2, r0
 8001842:	68bb      	ldr	r3, [r7, #8]
 8001844:	1ad3      	subs	r3, r2, r3
 8001846:	68fa      	ldr	r2, [r7, #12]
 8001848:	429a      	cmp	r2, r3
 800184a:	d8f7      	bhi.n	800183c <HAL_Delay+0x28>
 800184c:	bf00      	nop
 800184e:	bf00      	nop
 8001850:	3710      	adds	r7, #16
 8001852:	46bd      	mov	sp, r7
 8001854:	bd80      	pop	{r7, pc}
 8001856:	bf00      	nop
 8001858:	2000000c 	.word	0x2000000c

0800185c <__NVIC_SetPriorityGrouping>:
 800185c:	b480      	push	{r7}
 800185e:	b085      	sub	sp, #20
 8001860:	af00      	add	r7, sp, #0
 8001862:	6078      	str	r0, [r7, #4]
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	f003 0307 	and.w	r3, r3, #7
 800186a:	60fb      	str	r3, [r7, #12]
 800186c:	4b0c      	ldr	r3, [pc, #48]	; (80018a0 <__NVIC_SetPriorityGrouping+0x44>)
 800186e:	68db      	ldr	r3, [r3, #12]
 8001870:	60bb      	str	r3, [r7, #8]
 8001872:	68ba      	ldr	r2, [r7, #8]
 8001874:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001878:	4013      	ands	r3, r2
 800187a:	60bb      	str	r3, [r7, #8]
 800187c:	68fb      	ldr	r3, [r7, #12]
 800187e:	021a      	lsls	r2, r3, #8
 8001880:	68bb      	ldr	r3, [r7, #8]
 8001882:	4313      	orrs	r3, r2
 8001884:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001888:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800188c:	60bb      	str	r3, [r7, #8]
 800188e:	4a04      	ldr	r2, [pc, #16]	; (80018a0 <__NVIC_SetPriorityGrouping+0x44>)
 8001890:	68bb      	ldr	r3, [r7, #8]
 8001892:	60d3      	str	r3, [r2, #12]
 8001894:	bf00      	nop
 8001896:	3714      	adds	r7, #20
 8001898:	46bd      	mov	sp, r7
 800189a:	bc80      	pop	{r7}
 800189c:	4770      	bx	lr
 800189e:	bf00      	nop
 80018a0:	e000ed00 	.word	0xe000ed00

080018a4 <__NVIC_GetPriorityGrouping>:
 80018a4:	b480      	push	{r7}
 80018a6:	af00      	add	r7, sp, #0
 80018a8:	4b04      	ldr	r3, [pc, #16]	; (80018bc <__NVIC_GetPriorityGrouping+0x18>)
 80018aa:	68db      	ldr	r3, [r3, #12]
 80018ac:	0a1b      	lsrs	r3, r3, #8
 80018ae:	f003 0307 	and.w	r3, r3, #7
 80018b2:	4618      	mov	r0, r3
 80018b4:	46bd      	mov	sp, r7
 80018b6:	bc80      	pop	{r7}
 80018b8:	4770      	bx	lr
 80018ba:	bf00      	nop
 80018bc:	e000ed00 	.word	0xe000ed00

080018c0 <__NVIC_SetPriority>:
 80018c0:	b480      	push	{r7}
 80018c2:	b083      	sub	sp, #12
 80018c4:	af00      	add	r7, sp, #0
 80018c6:	4603      	mov	r3, r0
 80018c8:	6039      	str	r1, [r7, #0]
 80018ca:	71fb      	strb	r3, [r7, #7]
 80018cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80018d0:	2b00      	cmp	r3, #0
 80018d2:	db0a      	blt.n	80018ea <__NVIC_SetPriority+0x2a>
 80018d4:	683b      	ldr	r3, [r7, #0]
 80018d6:	b2da      	uxtb	r2, r3
 80018d8:	490c      	ldr	r1, [pc, #48]	; (800190c <__NVIC_SetPriority+0x4c>)
 80018da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80018de:	0112      	lsls	r2, r2, #4
 80018e0:	b2d2      	uxtb	r2, r2
 80018e2:	440b      	add	r3, r1
 80018e4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80018e8:	e00a      	b.n	8001900 <__NVIC_SetPriority+0x40>
 80018ea:	683b      	ldr	r3, [r7, #0]
 80018ec:	b2da      	uxtb	r2, r3
 80018ee:	4908      	ldr	r1, [pc, #32]	; (8001910 <__NVIC_SetPriority+0x50>)
 80018f0:	79fb      	ldrb	r3, [r7, #7]
 80018f2:	f003 030f 	and.w	r3, r3, #15
 80018f6:	3b04      	subs	r3, #4
 80018f8:	0112      	lsls	r2, r2, #4
 80018fa:	b2d2      	uxtb	r2, r2
 80018fc:	440b      	add	r3, r1
 80018fe:	761a      	strb	r2, [r3, #24]
 8001900:	bf00      	nop
 8001902:	370c      	adds	r7, #12
 8001904:	46bd      	mov	sp, r7
 8001906:	bc80      	pop	{r7}
 8001908:	4770      	bx	lr
 800190a:	bf00      	nop
 800190c:	e000e100 	.word	0xe000e100
 8001910:	e000ed00 	.word	0xe000ed00

08001914 <NVIC_EncodePriority>:
 8001914:	b480      	push	{r7}
 8001916:	b089      	sub	sp, #36	; 0x24
 8001918:	af00      	add	r7, sp, #0
 800191a:	60f8      	str	r0, [r7, #12]
 800191c:	60b9      	str	r1, [r7, #8]
 800191e:	607a      	str	r2, [r7, #4]
 8001920:	68fb      	ldr	r3, [r7, #12]
 8001922:	f003 0307 	and.w	r3, r3, #7
 8001926:	61fb      	str	r3, [r7, #28]
 8001928:	69fb      	ldr	r3, [r7, #28]
 800192a:	f1c3 0307 	rsb	r3, r3, #7
 800192e:	2b04      	cmp	r3, #4
 8001930:	bf28      	it	cs
 8001932:	2304      	movcs	r3, #4
 8001934:	61bb      	str	r3, [r7, #24]
 8001936:	69fb      	ldr	r3, [r7, #28]
 8001938:	3304      	adds	r3, #4
 800193a:	2b06      	cmp	r3, #6
 800193c:	d902      	bls.n	8001944 <NVIC_EncodePriority+0x30>
 800193e:	69fb      	ldr	r3, [r7, #28]
 8001940:	3b03      	subs	r3, #3
 8001942:	e000      	b.n	8001946 <NVIC_EncodePriority+0x32>
 8001944:	2300      	movs	r3, #0
 8001946:	617b      	str	r3, [r7, #20]
 8001948:	f04f 32ff 	mov.w	r2, #4294967295
 800194c:	69bb      	ldr	r3, [r7, #24]
 800194e:	fa02 f303 	lsl.w	r3, r2, r3
 8001952:	43da      	mvns	r2, r3
 8001954:	68bb      	ldr	r3, [r7, #8]
 8001956:	401a      	ands	r2, r3
 8001958:	697b      	ldr	r3, [r7, #20]
 800195a:	409a      	lsls	r2, r3
 800195c:	f04f 31ff 	mov.w	r1, #4294967295
 8001960:	697b      	ldr	r3, [r7, #20]
 8001962:	fa01 f303 	lsl.w	r3, r1, r3
 8001966:	43d9      	mvns	r1, r3
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	400b      	ands	r3, r1
 800196c:	4313      	orrs	r3, r2
 800196e:	4618      	mov	r0, r3
 8001970:	3724      	adds	r7, #36	; 0x24
 8001972:	46bd      	mov	sp, r7
 8001974:	bc80      	pop	{r7}
 8001976:	4770      	bx	lr

08001978 <SysTick_Config>:
 8001978:	b580      	push	{r7, lr}
 800197a:	b082      	sub	sp, #8
 800197c:	af00      	add	r7, sp, #0
 800197e:	6078      	str	r0, [r7, #4]
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	3b01      	subs	r3, #1
 8001984:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001988:	d301      	bcc.n	800198e <SysTick_Config+0x16>
 800198a:	2301      	movs	r3, #1
 800198c:	e00f      	b.n	80019ae <SysTick_Config+0x36>
 800198e:	4a0a      	ldr	r2, [pc, #40]	; (80019b8 <SysTick_Config+0x40>)
 8001990:	687b      	ldr	r3, [r7, #4]
 8001992:	3b01      	subs	r3, #1
 8001994:	6053      	str	r3, [r2, #4]
 8001996:	210f      	movs	r1, #15
 8001998:	f04f 30ff 	mov.w	r0, #4294967295
 800199c:	f7ff ff90 	bl	80018c0 <__NVIC_SetPriority>
 80019a0:	4b05      	ldr	r3, [pc, #20]	; (80019b8 <SysTick_Config+0x40>)
 80019a2:	2200      	movs	r2, #0
 80019a4:	609a      	str	r2, [r3, #8]
 80019a6:	4b04      	ldr	r3, [pc, #16]	; (80019b8 <SysTick_Config+0x40>)
 80019a8:	2207      	movs	r2, #7
 80019aa:	601a      	str	r2, [r3, #0]
 80019ac:	2300      	movs	r3, #0
 80019ae:	4618      	mov	r0, r3
 80019b0:	3708      	adds	r7, #8
 80019b2:	46bd      	mov	sp, r7
 80019b4:	bd80      	pop	{r7, pc}
 80019b6:	bf00      	nop
 80019b8:	e000e010 	.word	0xe000e010

080019bc <HAL_NVIC_SetPriorityGrouping>:
 80019bc:	b580      	push	{r7, lr}
 80019be:	b082      	sub	sp, #8
 80019c0:	af00      	add	r7, sp, #0
 80019c2:	6078      	str	r0, [r7, #4]
 80019c4:	6878      	ldr	r0, [r7, #4]
 80019c6:	f7ff ff49 	bl	800185c <__NVIC_SetPriorityGrouping>
 80019ca:	bf00      	nop
 80019cc:	3708      	adds	r7, #8
 80019ce:	46bd      	mov	sp, r7
 80019d0:	bd80      	pop	{r7, pc}

080019d2 <HAL_NVIC_SetPriority>:
 80019d2:	b580      	push	{r7, lr}
 80019d4:	b086      	sub	sp, #24
 80019d6:	af00      	add	r7, sp, #0
 80019d8:	4603      	mov	r3, r0
 80019da:	60b9      	str	r1, [r7, #8]
 80019dc:	607a      	str	r2, [r7, #4]
 80019de:	73fb      	strb	r3, [r7, #15]
 80019e0:	2300      	movs	r3, #0
 80019e2:	617b      	str	r3, [r7, #20]
 80019e4:	f7ff ff5e 	bl	80018a4 <__NVIC_GetPriorityGrouping>
 80019e8:	6178      	str	r0, [r7, #20]
 80019ea:	687a      	ldr	r2, [r7, #4]
 80019ec:	68b9      	ldr	r1, [r7, #8]
 80019ee:	6978      	ldr	r0, [r7, #20]
 80019f0:	f7ff ff90 	bl	8001914 <NVIC_EncodePriority>
 80019f4:	4602      	mov	r2, r0
 80019f6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80019fa:	4611      	mov	r1, r2
 80019fc:	4618      	mov	r0, r3
 80019fe:	f7ff ff5f 	bl	80018c0 <__NVIC_SetPriority>
 8001a02:	bf00      	nop
 8001a04:	3718      	adds	r7, #24
 8001a06:	46bd      	mov	sp, r7
 8001a08:	bd80      	pop	{r7, pc}

08001a0a <HAL_SYSTICK_Config>:
 8001a0a:	b580      	push	{r7, lr}
 8001a0c:	b082      	sub	sp, #8
 8001a0e:	af00      	add	r7, sp, #0
 8001a10:	6078      	str	r0, [r7, #4]
 8001a12:	6878      	ldr	r0, [r7, #4]
 8001a14:	f7ff ffb0 	bl	8001978 <SysTick_Config>
 8001a18:	4603      	mov	r3, r0
 8001a1a:	4618      	mov	r0, r3
 8001a1c:	3708      	adds	r7, #8
 8001a1e:	46bd      	mov	sp, r7
 8001a20:	bd80      	pop	{r7, pc}
	...

08001a24 <HAL_GPIO_Init>:
 8001a24:	b480      	push	{r7}
 8001a26:	b08b      	sub	sp, #44	; 0x2c
 8001a28:	af00      	add	r7, sp, #0
 8001a2a:	6078      	str	r0, [r7, #4]
 8001a2c:	6039      	str	r1, [r7, #0]
 8001a2e:	2300      	movs	r3, #0
 8001a30:	627b      	str	r3, [r7, #36]	; 0x24
 8001a32:	2300      	movs	r3, #0
 8001a34:	623b      	str	r3, [r7, #32]
 8001a36:	e161      	b.n	8001cfc <HAL_GPIO_Init+0x2d8>
 8001a38:	2201      	movs	r2, #1
 8001a3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a3c:	fa02 f303 	lsl.w	r3, r2, r3
 8001a40:	61fb      	str	r3, [r7, #28]
 8001a42:	683b      	ldr	r3, [r7, #0]
 8001a44:	681b      	ldr	r3, [r3, #0]
 8001a46:	69fa      	ldr	r2, [r7, #28]
 8001a48:	4013      	ands	r3, r2
 8001a4a:	61bb      	str	r3, [r7, #24]
 8001a4c:	69ba      	ldr	r2, [r7, #24]
 8001a4e:	69fb      	ldr	r3, [r7, #28]
 8001a50:	429a      	cmp	r2, r3
 8001a52:	f040 8150 	bne.w	8001cf6 <HAL_GPIO_Init+0x2d2>
 8001a56:	683b      	ldr	r3, [r7, #0]
 8001a58:	685b      	ldr	r3, [r3, #4]
 8001a5a:	4a97      	ldr	r2, [pc, #604]	; (8001cb8 <HAL_GPIO_Init+0x294>)
 8001a5c:	4293      	cmp	r3, r2
 8001a5e:	d05e      	beq.n	8001b1e <HAL_GPIO_Init+0xfa>
 8001a60:	4a95      	ldr	r2, [pc, #596]	; (8001cb8 <HAL_GPIO_Init+0x294>)
 8001a62:	4293      	cmp	r3, r2
 8001a64:	d875      	bhi.n	8001b52 <HAL_GPIO_Init+0x12e>
 8001a66:	4a95      	ldr	r2, [pc, #596]	; (8001cbc <HAL_GPIO_Init+0x298>)
 8001a68:	4293      	cmp	r3, r2
 8001a6a:	d058      	beq.n	8001b1e <HAL_GPIO_Init+0xfa>
 8001a6c:	4a93      	ldr	r2, [pc, #588]	; (8001cbc <HAL_GPIO_Init+0x298>)
 8001a6e:	4293      	cmp	r3, r2
 8001a70:	d86f      	bhi.n	8001b52 <HAL_GPIO_Init+0x12e>
 8001a72:	4a93      	ldr	r2, [pc, #588]	; (8001cc0 <HAL_GPIO_Init+0x29c>)
 8001a74:	4293      	cmp	r3, r2
 8001a76:	d052      	beq.n	8001b1e <HAL_GPIO_Init+0xfa>
 8001a78:	4a91      	ldr	r2, [pc, #580]	; (8001cc0 <HAL_GPIO_Init+0x29c>)
 8001a7a:	4293      	cmp	r3, r2
 8001a7c:	d869      	bhi.n	8001b52 <HAL_GPIO_Init+0x12e>
 8001a7e:	4a91      	ldr	r2, [pc, #580]	; (8001cc4 <HAL_GPIO_Init+0x2a0>)
 8001a80:	4293      	cmp	r3, r2
 8001a82:	d04c      	beq.n	8001b1e <HAL_GPIO_Init+0xfa>
 8001a84:	4a8f      	ldr	r2, [pc, #572]	; (8001cc4 <HAL_GPIO_Init+0x2a0>)
 8001a86:	4293      	cmp	r3, r2
 8001a88:	d863      	bhi.n	8001b52 <HAL_GPIO_Init+0x12e>
 8001a8a:	4a8f      	ldr	r2, [pc, #572]	; (8001cc8 <HAL_GPIO_Init+0x2a4>)
 8001a8c:	4293      	cmp	r3, r2
 8001a8e:	d046      	beq.n	8001b1e <HAL_GPIO_Init+0xfa>
 8001a90:	4a8d      	ldr	r2, [pc, #564]	; (8001cc8 <HAL_GPIO_Init+0x2a4>)
 8001a92:	4293      	cmp	r3, r2
 8001a94:	d85d      	bhi.n	8001b52 <HAL_GPIO_Init+0x12e>
 8001a96:	2b12      	cmp	r3, #18
 8001a98:	d82a      	bhi.n	8001af0 <HAL_GPIO_Init+0xcc>
 8001a9a:	2b12      	cmp	r3, #18
 8001a9c:	d859      	bhi.n	8001b52 <HAL_GPIO_Init+0x12e>
 8001a9e:	a201      	add	r2, pc, #4	; (adr r2, 8001aa4 <HAL_GPIO_Init+0x80>)
 8001aa0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001aa4:	08001b1f 	.word	0x08001b1f
 8001aa8:	08001af9 	.word	0x08001af9
 8001aac:	08001b0b 	.word	0x08001b0b
 8001ab0:	08001b4d 	.word	0x08001b4d
 8001ab4:	08001b53 	.word	0x08001b53
 8001ab8:	08001b53 	.word	0x08001b53
 8001abc:	08001b53 	.word	0x08001b53
 8001ac0:	08001b53 	.word	0x08001b53
 8001ac4:	08001b53 	.word	0x08001b53
 8001ac8:	08001b53 	.word	0x08001b53
 8001acc:	08001b53 	.word	0x08001b53
 8001ad0:	08001b53 	.word	0x08001b53
 8001ad4:	08001b53 	.word	0x08001b53
 8001ad8:	08001b53 	.word	0x08001b53
 8001adc:	08001b53 	.word	0x08001b53
 8001ae0:	08001b53 	.word	0x08001b53
 8001ae4:	08001b53 	.word	0x08001b53
 8001ae8:	08001b01 	.word	0x08001b01
 8001aec:	08001b15 	.word	0x08001b15
 8001af0:	4a76      	ldr	r2, [pc, #472]	; (8001ccc <HAL_GPIO_Init+0x2a8>)
 8001af2:	4293      	cmp	r3, r2
 8001af4:	d013      	beq.n	8001b1e <HAL_GPIO_Init+0xfa>
 8001af6:	e02c      	b.n	8001b52 <HAL_GPIO_Init+0x12e>
 8001af8:	683b      	ldr	r3, [r7, #0]
 8001afa:	68db      	ldr	r3, [r3, #12]
 8001afc:	623b      	str	r3, [r7, #32]
 8001afe:	e029      	b.n	8001b54 <HAL_GPIO_Init+0x130>
 8001b00:	683b      	ldr	r3, [r7, #0]
 8001b02:	68db      	ldr	r3, [r3, #12]
 8001b04:	3304      	adds	r3, #4
 8001b06:	623b      	str	r3, [r7, #32]
 8001b08:	e024      	b.n	8001b54 <HAL_GPIO_Init+0x130>
 8001b0a:	683b      	ldr	r3, [r7, #0]
 8001b0c:	68db      	ldr	r3, [r3, #12]
 8001b0e:	3308      	adds	r3, #8
 8001b10:	623b      	str	r3, [r7, #32]
 8001b12:	e01f      	b.n	8001b54 <HAL_GPIO_Init+0x130>
 8001b14:	683b      	ldr	r3, [r7, #0]
 8001b16:	68db      	ldr	r3, [r3, #12]
 8001b18:	330c      	adds	r3, #12
 8001b1a:	623b      	str	r3, [r7, #32]
 8001b1c:	e01a      	b.n	8001b54 <HAL_GPIO_Init+0x130>
 8001b1e:	683b      	ldr	r3, [r7, #0]
 8001b20:	689b      	ldr	r3, [r3, #8]
 8001b22:	2b00      	cmp	r3, #0
 8001b24:	d102      	bne.n	8001b2c <HAL_GPIO_Init+0x108>
 8001b26:	2304      	movs	r3, #4
 8001b28:	623b      	str	r3, [r7, #32]
 8001b2a:	e013      	b.n	8001b54 <HAL_GPIO_Init+0x130>
 8001b2c:	683b      	ldr	r3, [r7, #0]
 8001b2e:	689b      	ldr	r3, [r3, #8]
 8001b30:	2b01      	cmp	r3, #1
 8001b32:	d105      	bne.n	8001b40 <HAL_GPIO_Init+0x11c>
 8001b34:	2308      	movs	r3, #8
 8001b36:	623b      	str	r3, [r7, #32]
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	69fa      	ldr	r2, [r7, #28]
 8001b3c:	611a      	str	r2, [r3, #16]
 8001b3e:	e009      	b.n	8001b54 <HAL_GPIO_Init+0x130>
 8001b40:	2308      	movs	r3, #8
 8001b42:	623b      	str	r3, [r7, #32]
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	69fa      	ldr	r2, [r7, #28]
 8001b48:	615a      	str	r2, [r3, #20]
 8001b4a:	e003      	b.n	8001b54 <HAL_GPIO_Init+0x130>
 8001b4c:	2300      	movs	r3, #0
 8001b4e:	623b      	str	r3, [r7, #32]
 8001b50:	e000      	b.n	8001b54 <HAL_GPIO_Init+0x130>
 8001b52:	bf00      	nop
 8001b54:	69bb      	ldr	r3, [r7, #24]
 8001b56:	2bff      	cmp	r3, #255	; 0xff
 8001b58:	d801      	bhi.n	8001b5e <HAL_GPIO_Init+0x13a>
 8001b5a:	687b      	ldr	r3, [r7, #4]
 8001b5c:	e001      	b.n	8001b62 <HAL_GPIO_Init+0x13e>
 8001b5e:	687b      	ldr	r3, [r7, #4]
 8001b60:	3304      	adds	r3, #4
 8001b62:	617b      	str	r3, [r7, #20]
 8001b64:	69bb      	ldr	r3, [r7, #24]
 8001b66:	2bff      	cmp	r3, #255	; 0xff
 8001b68:	d802      	bhi.n	8001b70 <HAL_GPIO_Init+0x14c>
 8001b6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b6c:	009b      	lsls	r3, r3, #2
 8001b6e:	e002      	b.n	8001b76 <HAL_GPIO_Init+0x152>
 8001b70:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b72:	3b08      	subs	r3, #8
 8001b74:	009b      	lsls	r3, r3, #2
 8001b76:	613b      	str	r3, [r7, #16]
 8001b78:	697b      	ldr	r3, [r7, #20]
 8001b7a:	681a      	ldr	r2, [r3, #0]
 8001b7c:	210f      	movs	r1, #15
 8001b7e:	693b      	ldr	r3, [r7, #16]
 8001b80:	fa01 f303 	lsl.w	r3, r1, r3
 8001b84:	43db      	mvns	r3, r3
 8001b86:	401a      	ands	r2, r3
 8001b88:	6a39      	ldr	r1, [r7, #32]
 8001b8a:	693b      	ldr	r3, [r7, #16]
 8001b8c:	fa01 f303 	lsl.w	r3, r1, r3
 8001b90:	431a      	orrs	r2, r3
 8001b92:	697b      	ldr	r3, [r7, #20]
 8001b94:	601a      	str	r2, [r3, #0]
 8001b96:	683b      	ldr	r3, [r7, #0]
 8001b98:	685b      	ldr	r3, [r3, #4]
 8001b9a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	f000 80a9 	beq.w	8001cf6 <HAL_GPIO_Init+0x2d2>
 8001ba4:	4b4a      	ldr	r3, [pc, #296]	; (8001cd0 <HAL_GPIO_Init+0x2ac>)
 8001ba6:	699b      	ldr	r3, [r3, #24]
 8001ba8:	4a49      	ldr	r2, [pc, #292]	; (8001cd0 <HAL_GPIO_Init+0x2ac>)
 8001baa:	f043 0301 	orr.w	r3, r3, #1
 8001bae:	6193      	str	r3, [r2, #24]
 8001bb0:	4b47      	ldr	r3, [pc, #284]	; (8001cd0 <HAL_GPIO_Init+0x2ac>)
 8001bb2:	699b      	ldr	r3, [r3, #24]
 8001bb4:	f003 0301 	and.w	r3, r3, #1
 8001bb8:	60bb      	str	r3, [r7, #8]
 8001bba:	68bb      	ldr	r3, [r7, #8]
 8001bbc:	4a45      	ldr	r2, [pc, #276]	; (8001cd4 <HAL_GPIO_Init+0x2b0>)
 8001bbe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001bc0:	089b      	lsrs	r3, r3, #2
 8001bc2:	3302      	adds	r3, #2
 8001bc4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001bc8:	60fb      	str	r3, [r7, #12]
 8001bca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001bcc:	f003 0303 	and.w	r3, r3, #3
 8001bd0:	009b      	lsls	r3, r3, #2
 8001bd2:	220f      	movs	r2, #15
 8001bd4:	fa02 f303 	lsl.w	r3, r2, r3
 8001bd8:	43db      	mvns	r3, r3
 8001bda:	68fa      	ldr	r2, [r7, #12]
 8001bdc:	4013      	ands	r3, r2
 8001bde:	60fb      	str	r3, [r7, #12]
 8001be0:	687b      	ldr	r3, [r7, #4]
 8001be2:	4a3d      	ldr	r2, [pc, #244]	; (8001cd8 <HAL_GPIO_Init+0x2b4>)
 8001be4:	4293      	cmp	r3, r2
 8001be6:	d00d      	beq.n	8001c04 <HAL_GPIO_Init+0x1e0>
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	4a3c      	ldr	r2, [pc, #240]	; (8001cdc <HAL_GPIO_Init+0x2b8>)
 8001bec:	4293      	cmp	r3, r2
 8001bee:	d007      	beq.n	8001c00 <HAL_GPIO_Init+0x1dc>
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	4a3b      	ldr	r2, [pc, #236]	; (8001ce0 <HAL_GPIO_Init+0x2bc>)
 8001bf4:	4293      	cmp	r3, r2
 8001bf6:	d101      	bne.n	8001bfc <HAL_GPIO_Init+0x1d8>
 8001bf8:	2302      	movs	r3, #2
 8001bfa:	e004      	b.n	8001c06 <HAL_GPIO_Init+0x1e2>
 8001bfc:	2303      	movs	r3, #3
 8001bfe:	e002      	b.n	8001c06 <HAL_GPIO_Init+0x1e2>
 8001c00:	2301      	movs	r3, #1
 8001c02:	e000      	b.n	8001c06 <HAL_GPIO_Init+0x1e2>
 8001c04:	2300      	movs	r3, #0
 8001c06:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001c08:	f002 0203 	and.w	r2, r2, #3
 8001c0c:	0092      	lsls	r2, r2, #2
 8001c0e:	4093      	lsls	r3, r2
 8001c10:	68fa      	ldr	r2, [r7, #12]
 8001c12:	4313      	orrs	r3, r2
 8001c14:	60fb      	str	r3, [r7, #12]
 8001c16:	492f      	ldr	r1, [pc, #188]	; (8001cd4 <HAL_GPIO_Init+0x2b0>)
 8001c18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001c1a:	089b      	lsrs	r3, r3, #2
 8001c1c:	3302      	adds	r3, #2
 8001c1e:	68fa      	ldr	r2, [r7, #12]
 8001c20:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001c24:	683b      	ldr	r3, [r7, #0]
 8001c26:	685b      	ldr	r3, [r3, #4]
 8001c28:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001c2c:	2b00      	cmp	r3, #0
 8001c2e:	d006      	beq.n	8001c3e <HAL_GPIO_Init+0x21a>
 8001c30:	4b2c      	ldr	r3, [pc, #176]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c32:	689a      	ldr	r2, [r3, #8]
 8001c34:	492b      	ldr	r1, [pc, #172]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c36:	69bb      	ldr	r3, [r7, #24]
 8001c38:	4313      	orrs	r3, r2
 8001c3a:	608b      	str	r3, [r1, #8]
 8001c3c:	e006      	b.n	8001c4c <HAL_GPIO_Init+0x228>
 8001c3e:	4b29      	ldr	r3, [pc, #164]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c40:	689a      	ldr	r2, [r3, #8]
 8001c42:	69bb      	ldr	r3, [r7, #24]
 8001c44:	43db      	mvns	r3, r3
 8001c46:	4927      	ldr	r1, [pc, #156]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c48:	4013      	ands	r3, r2
 8001c4a:	608b      	str	r3, [r1, #8]
 8001c4c:	683b      	ldr	r3, [r7, #0]
 8001c4e:	685b      	ldr	r3, [r3, #4]
 8001c50:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001c54:	2b00      	cmp	r3, #0
 8001c56:	d006      	beq.n	8001c66 <HAL_GPIO_Init+0x242>
 8001c58:	4b22      	ldr	r3, [pc, #136]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c5a:	68da      	ldr	r2, [r3, #12]
 8001c5c:	4921      	ldr	r1, [pc, #132]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c5e:	69bb      	ldr	r3, [r7, #24]
 8001c60:	4313      	orrs	r3, r2
 8001c62:	60cb      	str	r3, [r1, #12]
 8001c64:	e006      	b.n	8001c74 <HAL_GPIO_Init+0x250>
 8001c66:	4b1f      	ldr	r3, [pc, #124]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c68:	68da      	ldr	r2, [r3, #12]
 8001c6a:	69bb      	ldr	r3, [r7, #24]
 8001c6c:	43db      	mvns	r3, r3
 8001c6e:	491d      	ldr	r1, [pc, #116]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c70:	4013      	ands	r3, r2
 8001c72:	60cb      	str	r3, [r1, #12]
 8001c74:	683b      	ldr	r3, [r7, #0]
 8001c76:	685b      	ldr	r3, [r3, #4]
 8001c78:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001c7c:	2b00      	cmp	r3, #0
 8001c7e:	d006      	beq.n	8001c8e <HAL_GPIO_Init+0x26a>
 8001c80:	4b18      	ldr	r3, [pc, #96]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c82:	685a      	ldr	r2, [r3, #4]
 8001c84:	4917      	ldr	r1, [pc, #92]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c86:	69bb      	ldr	r3, [r7, #24]
 8001c88:	4313      	orrs	r3, r2
 8001c8a:	604b      	str	r3, [r1, #4]
 8001c8c:	e006      	b.n	8001c9c <HAL_GPIO_Init+0x278>
 8001c8e:	4b15      	ldr	r3, [pc, #84]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c90:	685a      	ldr	r2, [r3, #4]
 8001c92:	69bb      	ldr	r3, [r7, #24]
 8001c94:	43db      	mvns	r3, r3
 8001c96:	4913      	ldr	r1, [pc, #76]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001c98:	4013      	ands	r3, r2
 8001c9a:	604b      	str	r3, [r1, #4]
 8001c9c:	683b      	ldr	r3, [r7, #0]
 8001c9e:	685b      	ldr	r3, [r3, #4]
 8001ca0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001ca4:	2b00      	cmp	r3, #0
 8001ca6:	d01f      	beq.n	8001ce8 <HAL_GPIO_Init+0x2c4>
 8001ca8:	4b0e      	ldr	r3, [pc, #56]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001caa:	681a      	ldr	r2, [r3, #0]
 8001cac:	490d      	ldr	r1, [pc, #52]	; (8001ce4 <HAL_GPIO_Init+0x2c0>)
 8001cae:	69bb      	ldr	r3, [r7, #24]
 8001cb0:	4313      	orrs	r3, r2
 8001cb2:	600b      	str	r3, [r1, #0]
 8001cb4:	e01f      	b.n	8001cf6 <HAL_GPIO_Init+0x2d2>
 8001cb6:	bf00      	nop
 8001cb8:	10320000 	.word	0x10320000
 8001cbc:	10310000 	.word	0x10310000
 8001cc0:	10220000 	.word	0x10220000
 8001cc4:	10210000 	.word	0x10210000
 8001cc8:	10120000 	.word	0x10120000
 8001ccc:	10110000 	.word	0x10110000
 8001cd0:	40021000 	.word	0x40021000
 8001cd4:	40010000 	.word	0x40010000
 8001cd8:	40010800 	.word	0x40010800
 8001cdc:	40010c00 	.word	0x40010c00
 8001ce0:	40011000 	.word	0x40011000
 8001ce4:	40010400 	.word	0x40010400
 8001ce8:	4b0b      	ldr	r3, [pc, #44]	; (8001d18 <HAL_GPIO_Init+0x2f4>)
 8001cea:	681a      	ldr	r2, [r3, #0]
 8001cec:	69bb      	ldr	r3, [r7, #24]
 8001cee:	43db      	mvns	r3, r3
 8001cf0:	4909      	ldr	r1, [pc, #36]	; (8001d18 <HAL_GPIO_Init+0x2f4>)
 8001cf2:	4013      	ands	r3, r2
 8001cf4:	600b      	str	r3, [r1, #0]
 8001cf6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001cf8:	3301      	adds	r3, #1
 8001cfa:	627b      	str	r3, [r7, #36]	; 0x24
 8001cfc:	683b      	ldr	r3, [r7, #0]
 8001cfe:	681a      	ldr	r2, [r3, #0]
 8001d00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d02:	fa22 f303 	lsr.w	r3, r2, r3
 8001d06:	2b00      	cmp	r3, #0
 8001d08:	f47f ae96 	bne.w	8001a38 <HAL_GPIO_Init+0x14>
 8001d0c:	bf00      	nop
 8001d0e:	bf00      	nop
 8001d10:	372c      	adds	r7, #44	; 0x2c
 8001d12:	46bd      	mov	sp, r7
 8001d14:	bc80      	pop	{r7}
 8001d16:	4770      	bx	lr
 8001d18:	40010400 	.word	0x40010400

08001d1c <HAL_GPIO_WritePin>:
 8001d1c:	b480      	push	{r7}
 8001d1e:	b083      	sub	sp, #12
 8001d20:	af00      	add	r7, sp, #0
 8001d22:	6078      	str	r0, [r7, #4]
 8001d24:	460b      	mov	r3, r1
 8001d26:	807b      	strh	r3, [r7, #2]
 8001d28:	4613      	mov	r3, r2
 8001d2a:	707b      	strb	r3, [r7, #1]
 8001d2c:	787b      	ldrb	r3, [r7, #1]
 8001d2e:	2b00      	cmp	r3, #0
 8001d30:	d003      	beq.n	8001d3a <HAL_GPIO_WritePin+0x1e>
 8001d32:	887a      	ldrh	r2, [r7, #2]
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	611a      	str	r2, [r3, #16]
 8001d38:	e003      	b.n	8001d42 <HAL_GPIO_WritePin+0x26>
 8001d3a:	887b      	ldrh	r3, [r7, #2]
 8001d3c:	041a      	lsls	r2, r3, #16
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	611a      	str	r2, [r3, #16]
 8001d42:	bf00      	nop
 8001d44:	370c      	adds	r7, #12
 8001d46:	46bd      	mov	sp, r7
 8001d48:	bc80      	pop	{r7}
 8001d4a:	4770      	bx	lr

08001d4c <HAL_GPIO_TogglePin>:
 8001d4c:	b480      	push	{r7}
 8001d4e:	b085      	sub	sp, #20
 8001d50:	af00      	add	r7, sp, #0
 8001d52:	6078      	str	r0, [r7, #4]
 8001d54:	460b      	mov	r3, r1
 8001d56:	807b      	strh	r3, [r7, #2]
 8001d58:	687b      	ldr	r3, [r7, #4]
 8001d5a:	68db      	ldr	r3, [r3, #12]
 8001d5c:	60fb      	str	r3, [r7, #12]
 8001d5e:	887a      	ldrh	r2, [r7, #2]
 8001d60:	68fb      	ldr	r3, [r7, #12]
 8001d62:	4013      	ands	r3, r2
 8001d64:	041a      	lsls	r2, r3, #16
 8001d66:	68fb      	ldr	r3, [r7, #12]
 8001d68:	43d9      	mvns	r1, r3
 8001d6a:	887b      	ldrh	r3, [r7, #2]
 8001d6c:	400b      	ands	r3, r1
 8001d6e:	431a      	orrs	r2, r3
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	611a      	str	r2, [r3, #16]
 8001d74:	bf00      	nop
 8001d76:	3714      	adds	r7, #20
 8001d78:	46bd      	mov	sp, r7
 8001d7a:	bc80      	pop	{r7}
 8001d7c:	4770      	bx	lr
	...

08001d80 <HAL_RCC_OscConfig>:
 8001d80:	b580      	push	{r7, lr}
 8001d82:	b086      	sub	sp, #24
 8001d84:	af00      	add	r7, sp, #0
 8001d86:	6078      	str	r0, [r7, #4]
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	2b00      	cmp	r3, #0
 8001d8c:	d101      	bne.n	8001d92 <HAL_RCC_OscConfig+0x12>
 8001d8e:	2301      	movs	r3, #1
 8001d90:	e272      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	681b      	ldr	r3, [r3, #0]
 8001d96:	f003 0301 	and.w	r3, r3, #1
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	f000 8087 	beq.w	8001eae <HAL_RCC_OscConfig+0x12e>
 8001da0:	4b92      	ldr	r3, [pc, #584]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001da2:	685b      	ldr	r3, [r3, #4]
 8001da4:	f003 030c 	and.w	r3, r3, #12
 8001da8:	2b04      	cmp	r3, #4
 8001daa:	d00c      	beq.n	8001dc6 <HAL_RCC_OscConfig+0x46>
 8001dac:	4b8f      	ldr	r3, [pc, #572]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001dae:	685b      	ldr	r3, [r3, #4]
 8001db0:	f003 030c 	and.w	r3, r3, #12
 8001db4:	2b08      	cmp	r3, #8
 8001db6:	d112      	bne.n	8001dde <HAL_RCC_OscConfig+0x5e>
 8001db8:	4b8c      	ldr	r3, [pc, #560]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001dba:	685b      	ldr	r3, [r3, #4]
 8001dbc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001dc0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001dc4:	d10b      	bne.n	8001dde <HAL_RCC_OscConfig+0x5e>
 8001dc6:	4b89      	ldr	r3, [pc, #548]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001dce:	2b00      	cmp	r3, #0
 8001dd0:	d06c      	beq.n	8001eac <HAL_RCC_OscConfig+0x12c>
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	685b      	ldr	r3, [r3, #4]
 8001dd6:	2b00      	cmp	r3, #0
 8001dd8:	d168      	bne.n	8001eac <HAL_RCC_OscConfig+0x12c>
 8001dda:	2301      	movs	r3, #1
 8001ddc:	e24c      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	685b      	ldr	r3, [r3, #4]
 8001de2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001de6:	d106      	bne.n	8001df6 <HAL_RCC_OscConfig+0x76>
 8001de8:	4b80      	ldr	r3, [pc, #512]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	4a7f      	ldr	r2, [pc, #508]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001dee:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001df2:	6013      	str	r3, [r2, #0]
 8001df4:	e02e      	b.n	8001e54 <HAL_RCC_OscConfig+0xd4>
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	685b      	ldr	r3, [r3, #4]
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	d10c      	bne.n	8001e18 <HAL_RCC_OscConfig+0x98>
 8001dfe:	4b7b      	ldr	r3, [pc, #492]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	4a7a      	ldr	r2, [pc, #488]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e04:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001e08:	6013      	str	r3, [r2, #0]
 8001e0a:	4b78      	ldr	r3, [pc, #480]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e0c:	681b      	ldr	r3, [r3, #0]
 8001e0e:	4a77      	ldr	r2, [pc, #476]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e10:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001e14:	6013      	str	r3, [r2, #0]
 8001e16:	e01d      	b.n	8001e54 <HAL_RCC_OscConfig+0xd4>
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	685b      	ldr	r3, [r3, #4]
 8001e1c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001e20:	d10c      	bne.n	8001e3c <HAL_RCC_OscConfig+0xbc>
 8001e22:	4b72      	ldr	r3, [pc, #456]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e24:	681b      	ldr	r3, [r3, #0]
 8001e26:	4a71      	ldr	r2, [pc, #452]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e28:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001e2c:	6013      	str	r3, [r2, #0]
 8001e2e:	4b6f      	ldr	r3, [pc, #444]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	4a6e      	ldr	r2, [pc, #440]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e34:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001e38:	6013      	str	r3, [r2, #0]
 8001e3a:	e00b      	b.n	8001e54 <HAL_RCC_OscConfig+0xd4>
 8001e3c:	4b6b      	ldr	r3, [pc, #428]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e3e:	681b      	ldr	r3, [r3, #0]
 8001e40:	4a6a      	ldr	r2, [pc, #424]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e42:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001e46:	6013      	str	r3, [r2, #0]
 8001e48:	4b68      	ldr	r3, [pc, #416]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e4a:	681b      	ldr	r3, [r3, #0]
 8001e4c:	4a67      	ldr	r2, [pc, #412]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e4e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001e52:	6013      	str	r3, [r2, #0]
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	685b      	ldr	r3, [r3, #4]
 8001e58:	2b00      	cmp	r3, #0
 8001e5a:	d013      	beq.n	8001e84 <HAL_RCC_OscConfig+0x104>
 8001e5c:	f7ff fcd0 	bl	8001800 <HAL_GetTick>
 8001e60:	6138      	str	r0, [r7, #16]
 8001e62:	e008      	b.n	8001e76 <HAL_RCC_OscConfig+0xf6>
 8001e64:	f7ff fccc 	bl	8001800 <HAL_GetTick>
 8001e68:	4602      	mov	r2, r0
 8001e6a:	693b      	ldr	r3, [r7, #16]
 8001e6c:	1ad3      	subs	r3, r2, r3
 8001e6e:	2b64      	cmp	r3, #100	; 0x64
 8001e70:	d901      	bls.n	8001e76 <HAL_RCC_OscConfig+0xf6>
 8001e72:	2303      	movs	r3, #3
 8001e74:	e200      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8001e76:	4b5d      	ldr	r3, [pc, #372]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001e78:	681b      	ldr	r3, [r3, #0]
 8001e7a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e7e:	2b00      	cmp	r3, #0
 8001e80:	d0f0      	beq.n	8001e64 <HAL_RCC_OscConfig+0xe4>
 8001e82:	e014      	b.n	8001eae <HAL_RCC_OscConfig+0x12e>
 8001e84:	f7ff fcbc 	bl	8001800 <HAL_GetTick>
 8001e88:	6138      	str	r0, [r7, #16]
 8001e8a:	e008      	b.n	8001e9e <HAL_RCC_OscConfig+0x11e>
 8001e8c:	f7ff fcb8 	bl	8001800 <HAL_GetTick>
 8001e90:	4602      	mov	r2, r0
 8001e92:	693b      	ldr	r3, [r7, #16]
 8001e94:	1ad3      	subs	r3, r2, r3
 8001e96:	2b64      	cmp	r3, #100	; 0x64
 8001e98:	d901      	bls.n	8001e9e <HAL_RCC_OscConfig+0x11e>
 8001e9a:	2303      	movs	r3, #3
 8001e9c:	e1ec      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8001e9e:	4b53      	ldr	r3, [pc, #332]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ea6:	2b00      	cmp	r3, #0
 8001ea8:	d1f0      	bne.n	8001e8c <HAL_RCC_OscConfig+0x10c>
 8001eaa:	e000      	b.n	8001eae <HAL_RCC_OscConfig+0x12e>
 8001eac:	bf00      	nop
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	f003 0302 	and.w	r3, r3, #2
 8001eb6:	2b00      	cmp	r3, #0
 8001eb8:	d063      	beq.n	8001f82 <HAL_RCC_OscConfig+0x202>
 8001eba:	4b4c      	ldr	r3, [pc, #304]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001ebc:	685b      	ldr	r3, [r3, #4]
 8001ebe:	f003 030c 	and.w	r3, r3, #12
 8001ec2:	2b00      	cmp	r3, #0
 8001ec4:	d00b      	beq.n	8001ede <HAL_RCC_OscConfig+0x15e>
 8001ec6:	4b49      	ldr	r3, [pc, #292]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001ec8:	685b      	ldr	r3, [r3, #4]
 8001eca:	f003 030c 	and.w	r3, r3, #12
 8001ece:	2b08      	cmp	r3, #8
 8001ed0:	d11c      	bne.n	8001f0c <HAL_RCC_OscConfig+0x18c>
 8001ed2:	4b46      	ldr	r3, [pc, #280]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001ed4:	685b      	ldr	r3, [r3, #4]
 8001ed6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001eda:	2b00      	cmp	r3, #0
 8001edc:	d116      	bne.n	8001f0c <HAL_RCC_OscConfig+0x18c>
 8001ede:	4b43      	ldr	r3, [pc, #268]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	f003 0302 	and.w	r3, r3, #2
 8001ee6:	2b00      	cmp	r3, #0
 8001ee8:	d005      	beq.n	8001ef6 <HAL_RCC_OscConfig+0x176>
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	691b      	ldr	r3, [r3, #16]
 8001eee:	2b01      	cmp	r3, #1
 8001ef0:	d001      	beq.n	8001ef6 <HAL_RCC_OscConfig+0x176>
 8001ef2:	2301      	movs	r3, #1
 8001ef4:	e1c0      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8001ef6:	4b3d      	ldr	r3, [pc, #244]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	695b      	ldr	r3, [r3, #20]
 8001f02:	00db      	lsls	r3, r3, #3
 8001f04:	4939      	ldr	r1, [pc, #228]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001f06:	4313      	orrs	r3, r2
 8001f08:	600b      	str	r3, [r1, #0]
 8001f0a:	e03a      	b.n	8001f82 <HAL_RCC_OscConfig+0x202>
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	691b      	ldr	r3, [r3, #16]
 8001f10:	2b00      	cmp	r3, #0
 8001f12:	d020      	beq.n	8001f56 <HAL_RCC_OscConfig+0x1d6>
 8001f14:	4b36      	ldr	r3, [pc, #216]	; (8001ff0 <HAL_RCC_OscConfig+0x270>)
 8001f16:	2201      	movs	r2, #1
 8001f18:	601a      	str	r2, [r3, #0]
 8001f1a:	f7ff fc71 	bl	8001800 <HAL_GetTick>
 8001f1e:	6138      	str	r0, [r7, #16]
 8001f20:	e008      	b.n	8001f34 <HAL_RCC_OscConfig+0x1b4>
 8001f22:	f7ff fc6d 	bl	8001800 <HAL_GetTick>
 8001f26:	4602      	mov	r2, r0
 8001f28:	693b      	ldr	r3, [r7, #16]
 8001f2a:	1ad3      	subs	r3, r2, r3
 8001f2c:	2b02      	cmp	r3, #2
 8001f2e:	d901      	bls.n	8001f34 <HAL_RCC_OscConfig+0x1b4>
 8001f30:	2303      	movs	r3, #3
 8001f32:	e1a1      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8001f34:	4b2d      	ldr	r3, [pc, #180]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001f36:	681b      	ldr	r3, [r3, #0]
 8001f38:	f003 0302 	and.w	r3, r3, #2
 8001f3c:	2b00      	cmp	r3, #0
 8001f3e:	d0f0      	beq.n	8001f22 <HAL_RCC_OscConfig+0x1a2>
 8001f40:	4b2a      	ldr	r3, [pc, #168]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	695b      	ldr	r3, [r3, #20]
 8001f4c:	00db      	lsls	r3, r3, #3
 8001f4e:	4927      	ldr	r1, [pc, #156]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001f50:	4313      	orrs	r3, r2
 8001f52:	600b      	str	r3, [r1, #0]
 8001f54:	e015      	b.n	8001f82 <HAL_RCC_OscConfig+0x202>
 8001f56:	4b26      	ldr	r3, [pc, #152]	; (8001ff0 <HAL_RCC_OscConfig+0x270>)
 8001f58:	2200      	movs	r2, #0
 8001f5a:	601a      	str	r2, [r3, #0]
 8001f5c:	f7ff fc50 	bl	8001800 <HAL_GetTick>
 8001f60:	6138      	str	r0, [r7, #16]
 8001f62:	e008      	b.n	8001f76 <HAL_RCC_OscConfig+0x1f6>
 8001f64:	f7ff fc4c 	bl	8001800 <HAL_GetTick>
 8001f68:	4602      	mov	r2, r0
 8001f6a:	693b      	ldr	r3, [r7, #16]
 8001f6c:	1ad3      	subs	r3, r2, r3
 8001f6e:	2b02      	cmp	r3, #2
 8001f70:	d901      	bls.n	8001f76 <HAL_RCC_OscConfig+0x1f6>
 8001f72:	2303      	movs	r3, #3
 8001f74:	e180      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8001f76:	4b1d      	ldr	r3, [pc, #116]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	f003 0302 	and.w	r3, r3, #2
 8001f7e:	2b00      	cmp	r3, #0
 8001f80:	d1f0      	bne.n	8001f64 <HAL_RCC_OscConfig+0x1e4>
 8001f82:	687b      	ldr	r3, [r7, #4]
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	f003 0308 	and.w	r3, r3, #8
 8001f8a:	2b00      	cmp	r3, #0
 8001f8c:	d03a      	beq.n	8002004 <HAL_RCC_OscConfig+0x284>
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	699b      	ldr	r3, [r3, #24]
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d019      	beq.n	8001fca <HAL_RCC_OscConfig+0x24a>
 8001f96:	4b17      	ldr	r3, [pc, #92]	; (8001ff4 <HAL_RCC_OscConfig+0x274>)
 8001f98:	2201      	movs	r2, #1
 8001f9a:	601a      	str	r2, [r3, #0]
 8001f9c:	f7ff fc30 	bl	8001800 <HAL_GetTick>
 8001fa0:	6138      	str	r0, [r7, #16]
 8001fa2:	e008      	b.n	8001fb6 <HAL_RCC_OscConfig+0x236>
 8001fa4:	f7ff fc2c 	bl	8001800 <HAL_GetTick>
 8001fa8:	4602      	mov	r2, r0
 8001faa:	693b      	ldr	r3, [r7, #16]
 8001fac:	1ad3      	subs	r3, r2, r3
 8001fae:	2b02      	cmp	r3, #2
 8001fb0:	d901      	bls.n	8001fb6 <HAL_RCC_OscConfig+0x236>
 8001fb2:	2303      	movs	r3, #3
 8001fb4:	e160      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8001fb6:	4b0d      	ldr	r3, [pc, #52]	; (8001fec <HAL_RCC_OscConfig+0x26c>)
 8001fb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001fba:	f003 0302 	and.w	r3, r3, #2
 8001fbe:	2b00      	cmp	r3, #0
 8001fc0:	d0f0      	beq.n	8001fa4 <HAL_RCC_OscConfig+0x224>
 8001fc2:	2001      	movs	r0, #1
 8001fc4:	f000 fa9c 	bl	8002500 <RCC_Delay>
 8001fc8:	e01c      	b.n	8002004 <HAL_RCC_OscConfig+0x284>
 8001fca:	4b0a      	ldr	r3, [pc, #40]	; (8001ff4 <HAL_RCC_OscConfig+0x274>)
 8001fcc:	2200      	movs	r2, #0
 8001fce:	601a      	str	r2, [r3, #0]
 8001fd0:	f7ff fc16 	bl	8001800 <HAL_GetTick>
 8001fd4:	6138      	str	r0, [r7, #16]
 8001fd6:	e00f      	b.n	8001ff8 <HAL_RCC_OscConfig+0x278>
 8001fd8:	f7ff fc12 	bl	8001800 <HAL_GetTick>
 8001fdc:	4602      	mov	r2, r0
 8001fde:	693b      	ldr	r3, [r7, #16]
 8001fe0:	1ad3      	subs	r3, r2, r3
 8001fe2:	2b02      	cmp	r3, #2
 8001fe4:	d908      	bls.n	8001ff8 <HAL_RCC_OscConfig+0x278>
 8001fe6:	2303      	movs	r3, #3
 8001fe8:	e146      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8001fea:	bf00      	nop
 8001fec:	40021000 	.word	0x40021000
 8001ff0:	42420000 	.word	0x42420000
 8001ff4:	42420480 	.word	0x42420480
 8001ff8:	4b92      	ldr	r3, [pc, #584]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 8001ffa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ffc:	f003 0302 	and.w	r3, r3, #2
 8002000:	2b00      	cmp	r3, #0
 8002002:	d1e9      	bne.n	8001fd8 <HAL_RCC_OscConfig+0x258>
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	f003 0304 	and.w	r3, r3, #4
 800200c:	2b00      	cmp	r3, #0
 800200e:	f000 80a6 	beq.w	800215e <HAL_RCC_OscConfig+0x3de>
 8002012:	2300      	movs	r3, #0
 8002014:	75fb      	strb	r3, [r7, #23]
 8002016:	4b8b      	ldr	r3, [pc, #556]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 8002018:	69db      	ldr	r3, [r3, #28]
 800201a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800201e:	2b00      	cmp	r3, #0
 8002020:	d10d      	bne.n	800203e <HAL_RCC_OscConfig+0x2be>
 8002022:	4b88      	ldr	r3, [pc, #544]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 8002024:	69db      	ldr	r3, [r3, #28]
 8002026:	4a87      	ldr	r2, [pc, #540]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 8002028:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800202c:	61d3      	str	r3, [r2, #28]
 800202e:	4b85      	ldr	r3, [pc, #532]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 8002030:	69db      	ldr	r3, [r3, #28]
 8002032:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002036:	60bb      	str	r3, [r7, #8]
 8002038:	68bb      	ldr	r3, [r7, #8]
 800203a:	2301      	movs	r3, #1
 800203c:	75fb      	strb	r3, [r7, #23]
 800203e:	4b82      	ldr	r3, [pc, #520]	; (8002248 <HAL_RCC_OscConfig+0x4c8>)
 8002040:	681b      	ldr	r3, [r3, #0]
 8002042:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002046:	2b00      	cmp	r3, #0
 8002048:	d118      	bne.n	800207c <HAL_RCC_OscConfig+0x2fc>
 800204a:	4b7f      	ldr	r3, [pc, #508]	; (8002248 <HAL_RCC_OscConfig+0x4c8>)
 800204c:	681b      	ldr	r3, [r3, #0]
 800204e:	4a7e      	ldr	r2, [pc, #504]	; (8002248 <HAL_RCC_OscConfig+0x4c8>)
 8002050:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002054:	6013      	str	r3, [r2, #0]
 8002056:	f7ff fbd3 	bl	8001800 <HAL_GetTick>
 800205a:	6138      	str	r0, [r7, #16]
 800205c:	e008      	b.n	8002070 <HAL_RCC_OscConfig+0x2f0>
 800205e:	f7ff fbcf 	bl	8001800 <HAL_GetTick>
 8002062:	4602      	mov	r2, r0
 8002064:	693b      	ldr	r3, [r7, #16]
 8002066:	1ad3      	subs	r3, r2, r3
 8002068:	2b64      	cmp	r3, #100	; 0x64
 800206a:	d901      	bls.n	8002070 <HAL_RCC_OscConfig+0x2f0>
 800206c:	2303      	movs	r3, #3
 800206e:	e103      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8002070:	4b75      	ldr	r3, [pc, #468]	; (8002248 <HAL_RCC_OscConfig+0x4c8>)
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002078:	2b00      	cmp	r3, #0
 800207a:	d0f0      	beq.n	800205e <HAL_RCC_OscConfig+0x2de>
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	68db      	ldr	r3, [r3, #12]
 8002080:	2b01      	cmp	r3, #1
 8002082:	d106      	bne.n	8002092 <HAL_RCC_OscConfig+0x312>
 8002084:	4b6f      	ldr	r3, [pc, #444]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 8002086:	6a1b      	ldr	r3, [r3, #32]
 8002088:	4a6e      	ldr	r2, [pc, #440]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 800208a:	f043 0301 	orr.w	r3, r3, #1
 800208e:	6213      	str	r3, [r2, #32]
 8002090:	e02d      	b.n	80020ee <HAL_RCC_OscConfig+0x36e>
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	68db      	ldr	r3, [r3, #12]
 8002096:	2b00      	cmp	r3, #0
 8002098:	d10c      	bne.n	80020b4 <HAL_RCC_OscConfig+0x334>
 800209a:	4b6a      	ldr	r3, [pc, #424]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 800209c:	6a1b      	ldr	r3, [r3, #32]
 800209e:	4a69      	ldr	r2, [pc, #420]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020a0:	f023 0301 	bic.w	r3, r3, #1
 80020a4:	6213      	str	r3, [r2, #32]
 80020a6:	4b67      	ldr	r3, [pc, #412]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020a8:	6a1b      	ldr	r3, [r3, #32]
 80020aa:	4a66      	ldr	r2, [pc, #408]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020ac:	f023 0304 	bic.w	r3, r3, #4
 80020b0:	6213      	str	r3, [r2, #32]
 80020b2:	e01c      	b.n	80020ee <HAL_RCC_OscConfig+0x36e>
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	68db      	ldr	r3, [r3, #12]
 80020b8:	2b05      	cmp	r3, #5
 80020ba:	d10c      	bne.n	80020d6 <HAL_RCC_OscConfig+0x356>
 80020bc:	4b61      	ldr	r3, [pc, #388]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020be:	6a1b      	ldr	r3, [r3, #32]
 80020c0:	4a60      	ldr	r2, [pc, #384]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020c2:	f043 0304 	orr.w	r3, r3, #4
 80020c6:	6213      	str	r3, [r2, #32]
 80020c8:	4b5e      	ldr	r3, [pc, #376]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020ca:	6a1b      	ldr	r3, [r3, #32]
 80020cc:	4a5d      	ldr	r2, [pc, #372]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020ce:	f043 0301 	orr.w	r3, r3, #1
 80020d2:	6213      	str	r3, [r2, #32]
 80020d4:	e00b      	b.n	80020ee <HAL_RCC_OscConfig+0x36e>
 80020d6:	4b5b      	ldr	r3, [pc, #364]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020d8:	6a1b      	ldr	r3, [r3, #32]
 80020da:	4a5a      	ldr	r2, [pc, #360]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020dc:	f023 0301 	bic.w	r3, r3, #1
 80020e0:	6213      	str	r3, [r2, #32]
 80020e2:	4b58      	ldr	r3, [pc, #352]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020e4:	6a1b      	ldr	r3, [r3, #32]
 80020e6:	4a57      	ldr	r2, [pc, #348]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80020e8:	f023 0304 	bic.w	r3, r3, #4
 80020ec:	6213      	str	r3, [r2, #32]
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	68db      	ldr	r3, [r3, #12]
 80020f2:	2b00      	cmp	r3, #0
 80020f4:	d015      	beq.n	8002122 <HAL_RCC_OscConfig+0x3a2>
 80020f6:	f7ff fb83 	bl	8001800 <HAL_GetTick>
 80020fa:	6138      	str	r0, [r7, #16]
 80020fc:	e00a      	b.n	8002114 <HAL_RCC_OscConfig+0x394>
 80020fe:	f7ff fb7f 	bl	8001800 <HAL_GetTick>
 8002102:	4602      	mov	r2, r0
 8002104:	693b      	ldr	r3, [r7, #16]
 8002106:	1ad3      	subs	r3, r2, r3
 8002108:	f241 3288 	movw	r2, #5000	; 0x1388
 800210c:	4293      	cmp	r3, r2
 800210e:	d901      	bls.n	8002114 <HAL_RCC_OscConfig+0x394>
 8002110:	2303      	movs	r3, #3
 8002112:	e0b1      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8002114:	4b4b      	ldr	r3, [pc, #300]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 8002116:	6a1b      	ldr	r3, [r3, #32]
 8002118:	f003 0302 	and.w	r3, r3, #2
 800211c:	2b00      	cmp	r3, #0
 800211e:	d0ee      	beq.n	80020fe <HAL_RCC_OscConfig+0x37e>
 8002120:	e014      	b.n	800214c <HAL_RCC_OscConfig+0x3cc>
 8002122:	f7ff fb6d 	bl	8001800 <HAL_GetTick>
 8002126:	6138      	str	r0, [r7, #16]
 8002128:	e00a      	b.n	8002140 <HAL_RCC_OscConfig+0x3c0>
 800212a:	f7ff fb69 	bl	8001800 <HAL_GetTick>
 800212e:	4602      	mov	r2, r0
 8002130:	693b      	ldr	r3, [r7, #16]
 8002132:	1ad3      	subs	r3, r2, r3
 8002134:	f241 3288 	movw	r2, #5000	; 0x1388
 8002138:	4293      	cmp	r3, r2
 800213a:	d901      	bls.n	8002140 <HAL_RCC_OscConfig+0x3c0>
 800213c:	2303      	movs	r3, #3
 800213e:	e09b      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8002140:	4b40      	ldr	r3, [pc, #256]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 8002142:	6a1b      	ldr	r3, [r3, #32]
 8002144:	f003 0302 	and.w	r3, r3, #2
 8002148:	2b00      	cmp	r3, #0
 800214a:	d1ee      	bne.n	800212a <HAL_RCC_OscConfig+0x3aa>
 800214c:	7dfb      	ldrb	r3, [r7, #23]
 800214e:	2b01      	cmp	r3, #1
 8002150:	d105      	bne.n	800215e <HAL_RCC_OscConfig+0x3de>
 8002152:	4b3c      	ldr	r3, [pc, #240]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 8002154:	69db      	ldr	r3, [r3, #28]
 8002156:	4a3b      	ldr	r2, [pc, #236]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 8002158:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800215c:	61d3      	str	r3, [r2, #28]
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	69db      	ldr	r3, [r3, #28]
 8002162:	2b00      	cmp	r3, #0
 8002164:	f000 8087 	beq.w	8002276 <HAL_RCC_OscConfig+0x4f6>
 8002168:	4b36      	ldr	r3, [pc, #216]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 800216a:	685b      	ldr	r3, [r3, #4]
 800216c:	f003 030c 	and.w	r3, r3, #12
 8002170:	2b08      	cmp	r3, #8
 8002172:	d061      	beq.n	8002238 <HAL_RCC_OscConfig+0x4b8>
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	69db      	ldr	r3, [r3, #28]
 8002178:	2b02      	cmp	r3, #2
 800217a:	d146      	bne.n	800220a <HAL_RCC_OscConfig+0x48a>
 800217c:	4b33      	ldr	r3, [pc, #204]	; (800224c <HAL_RCC_OscConfig+0x4cc>)
 800217e:	2200      	movs	r2, #0
 8002180:	601a      	str	r2, [r3, #0]
 8002182:	f7ff fb3d 	bl	8001800 <HAL_GetTick>
 8002186:	6138      	str	r0, [r7, #16]
 8002188:	e008      	b.n	800219c <HAL_RCC_OscConfig+0x41c>
 800218a:	f7ff fb39 	bl	8001800 <HAL_GetTick>
 800218e:	4602      	mov	r2, r0
 8002190:	693b      	ldr	r3, [r7, #16]
 8002192:	1ad3      	subs	r3, r2, r3
 8002194:	2b02      	cmp	r3, #2
 8002196:	d901      	bls.n	800219c <HAL_RCC_OscConfig+0x41c>
 8002198:	2303      	movs	r3, #3
 800219a:	e06d      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 800219c:	4b29      	ldr	r3, [pc, #164]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 800219e:	681b      	ldr	r3, [r3, #0]
 80021a0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80021a4:	2b00      	cmp	r3, #0
 80021a6:	d1f0      	bne.n	800218a <HAL_RCC_OscConfig+0x40a>
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	6a1b      	ldr	r3, [r3, #32]
 80021ac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80021b0:	d108      	bne.n	80021c4 <HAL_RCC_OscConfig+0x444>
 80021b2:	4b24      	ldr	r3, [pc, #144]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80021b4:	685b      	ldr	r3, [r3, #4]
 80021b6:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	689b      	ldr	r3, [r3, #8]
 80021be:	4921      	ldr	r1, [pc, #132]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80021c0:	4313      	orrs	r3, r2
 80021c2:	604b      	str	r3, [r1, #4]
 80021c4:	4b1f      	ldr	r3, [pc, #124]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80021c6:	685b      	ldr	r3, [r3, #4]
 80021c8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	6a19      	ldr	r1, [r3, #32]
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021d4:	430b      	orrs	r3, r1
 80021d6:	491b      	ldr	r1, [pc, #108]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80021d8:	4313      	orrs	r3, r2
 80021da:	604b      	str	r3, [r1, #4]
 80021dc:	4b1b      	ldr	r3, [pc, #108]	; (800224c <HAL_RCC_OscConfig+0x4cc>)
 80021de:	2201      	movs	r2, #1
 80021e0:	601a      	str	r2, [r3, #0]
 80021e2:	f7ff fb0d 	bl	8001800 <HAL_GetTick>
 80021e6:	6138      	str	r0, [r7, #16]
 80021e8:	e008      	b.n	80021fc <HAL_RCC_OscConfig+0x47c>
 80021ea:	f7ff fb09 	bl	8001800 <HAL_GetTick>
 80021ee:	4602      	mov	r2, r0
 80021f0:	693b      	ldr	r3, [r7, #16]
 80021f2:	1ad3      	subs	r3, r2, r3
 80021f4:	2b02      	cmp	r3, #2
 80021f6:	d901      	bls.n	80021fc <HAL_RCC_OscConfig+0x47c>
 80021f8:	2303      	movs	r3, #3
 80021fa:	e03d      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 80021fc:	4b11      	ldr	r3, [pc, #68]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002204:	2b00      	cmp	r3, #0
 8002206:	d0f0      	beq.n	80021ea <HAL_RCC_OscConfig+0x46a>
 8002208:	e035      	b.n	8002276 <HAL_RCC_OscConfig+0x4f6>
 800220a:	4b10      	ldr	r3, [pc, #64]	; (800224c <HAL_RCC_OscConfig+0x4cc>)
 800220c:	2200      	movs	r2, #0
 800220e:	601a      	str	r2, [r3, #0]
 8002210:	f7ff faf6 	bl	8001800 <HAL_GetTick>
 8002214:	6138      	str	r0, [r7, #16]
 8002216:	e008      	b.n	800222a <HAL_RCC_OscConfig+0x4aa>
 8002218:	f7ff faf2 	bl	8001800 <HAL_GetTick>
 800221c:	4602      	mov	r2, r0
 800221e:	693b      	ldr	r3, [r7, #16]
 8002220:	1ad3      	subs	r3, r2, r3
 8002222:	2b02      	cmp	r3, #2
 8002224:	d901      	bls.n	800222a <HAL_RCC_OscConfig+0x4aa>
 8002226:	2303      	movs	r3, #3
 8002228:	e026      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 800222a:	4b06      	ldr	r3, [pc, #24]	; (8002244 <HAL_RCC_OscConfig+0x4c4>)
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002232:	2b00      	cmp	r3, #0
 8002234:	d1f0      	bne.n	8002218 <HAL_RCC_OscConfig+0x498>
 8002236:	e01e      	b.n	8002276 <HAL_RCC_OscConfig+0x4f6>
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	69db      	ldr	r3, [r3, #28]
 800223c:	2b01      	cmp	r3, #1
 800223e:	d107      	bne.n	8002250 <HAL_RCC_OscConfig+0x4d0>
 8002240:	2301      	movs	r3, #1
 8002242:	e019      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8002244:	40021000 	.word	0x40021000
 8002248:	40007000 	.word	0x40007000
 800224c:	42420060 	.word	0x42420060
 8002250:	4b0b      	ldr	r3, [pc, #44]	; (8002280 <HAL_RCC_OscConfig+0x500>)
 8002252:	685b      	ldr	r3, [r3, #4]
 8002254:	60fb      	str	r3, [r7, #12]
 8002256:	68fb      	ldr	r3, [r7, #12]
 8002258:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	6a1b      	ldr	r3, [r3, #32]
 8002260:	429a      	cmp	r2, r3
 8002262:	d106      	bne.n	8002272 <HAL_RCC_OscConfig+0x4f2>
 8002264:	68fb      	ldr	r3, [r7, #12]
 8002266:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800226a:	687b      	ldr	r3, [r7, #4]
 800226c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800226e:	429a      	cmp	r2, r3
 8002270:	d001      	beq.n	8002276 <HAL_RCC_OscConfig+0x4f6>
 8002272:	2301      	movs	r3, #1
 8002274:	e000      	b.n	8002278 <HAL_RCC_OscConfig+0x4f8>
 8002276:	2300      	movs	r3, #0
 8002278:	4618      	mov	r0, r3
 800227a:	3718      	adds	r7, #24
 800227c:	46bd      	mov	sp, r7
 800227e:	bd80      	pop	{r7, pc}
 8002280:	40021000 	.word	0x40021000

08002284 <HAL_RCC_ClockConfig>:
 8002284:	b580      	push	{r7, lr}
 8002286:	b084      	sub	sp, #16
 8002288:	af00      	add	r7, sp, #0
 800228a:	6078      	str	r0, [r7, #4]
 800228c:	6039      	str	r1, [r7, #0]
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	2b00      	cmp	r3, #0
 8002292:	d101      	bne.n	8002298 <HAL_RCC_ClockConfig+0x14>
 8002294:	2301      	movs	r3, #1
 8002296:	e0d0      	b.n	800243a <HAL_RCC_ClockConfig+0x1b6>
 8002298:	4b6a      	ldr	r3, [pc, #424]	; (8002444 <HAL_RCC_ClockConfig+0x1c0>)
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	f003 0307 	and.w	r3, r3, #7
 80022a0:	683a      	ldr	r2, [r7, #0]
 80022a2:	429a      	cmp	r2, r3
 80022a4:	d910      	bls.n	80022c8 <HAL_RCC_ClockConfig+0x44>
 80022a6:	4b67      	ldr	r3, [pc, #412]	; (8002444 <HAL_RCC_ClockConfig+0x1c0>)
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	f023 0207 	bic.w	r2, r3, #7
 80022ae:	4965      	ldr	r1, [pc, #404]	; (8002444 <HAL_RCC_ClockConfig+0x1c0>)
 80022b0:	683b      	ldr	r3, [r7, #0]
 80022b2:	4313      	orrs	r3, r2
 80022b4:	600b      	str	r3, [r1, #0]
 80022b6:	4b63      	ldr	r3, [pc, #396]	; (8002444 <HAL_RCC_ClockConfig+0x1c0>)
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	f003 0307 	and.w	r3, r3, #7
 80022be:	683a      	ldr	r2, [r7, #0]
 80022c0:	429a      	cmp	r2, r3
 80022c2:	d001      	beq.n	80022c8 <HAL_RCC_ClockConfig+0x44>
 80022c4:	2301      	movs	r3, #1
 80022c6:	e0b8      	b.n	800243a <HAL_RCC_ClockConfig+0x1b6>
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	f003 0302 	and.w	r3, r3, #2
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	d020      	beq.n	8002316 <HAL_RCC_ClockConfig+0x92>
 80022d4:	687b      	ldr	r3, [r7, #4]
 80022d6:	681b      	ldr	r3, [r3, #0]
 80022d8:	f003 0304 	and.w	r3, r3, #4
 80022dc:	2b00      	cmp	r3, #0
 80022de:	d005      	beq.n	80022ec <HAL_RCC_ClockConfig+0x68>
 80022e0:	4b59      	ldr	r3, [pc, #356]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 80022e2:	685b      	ldr	r3, [r3, #4]
 80022e4:	4a58      	ldr	r2, [pc, #352]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 80022e6:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80022ea:	6053      	str	r3, [r2, #4]
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	f003 0308 	and.w	r3, r3, #8
 80022f4:	2b00      	cmp	r3, #0
 80022f6:	d005      	beq.n	8002304 <HAL_RCC_ClockConfig+0x80>
 80022f8:	4b53      	ldr	r3, [pc, #332]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 80022fa:	685b      	ldr	r3, [r3, #4]
 80022fc:	4a52      	ldr	r2, [pc, #328]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 80022fe:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002302:	6053      	str	r3, [r2, #4]
 8002304:	4b50      	ldr	r3, [pc, #320]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 8002306:	685b      	ldr	r3, [r3, #4]
 8002308:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	689b      	ldr	r3, [r3, #8]
 8002310:	494d      	ldr	r1, [pc, #308]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 8002312:	4313      	orrs	r3, r2
 8002314:	604b      	str	r3, [r1, #4]
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	f003 0301 	and.w	r3, r3, #1
 800231e:	2b00      	cmp	r3, #0
 8002320:	d040      	beq.n	80023a4 <HAL_RCC_ClockConfig+0x120>
 8002322:	687b      	ldr	r3, [r7, #4]
 8002324:	685b      	ldr	r3, [r3, #4]
 8002326:	2b01      	cmp	r3, #1
 8002328:	d107      	bne.n	800233a <HAL_RCC_ClockConfig+0xb6>
 800232a:	4b47      	ldr	r3, [pc, #284]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002332:	2b00      	cmp	r3, #0
 8002334:	d115      	bne.n	8002362 <HAL_RCC_ClockConfig+0xde>
 8002336:	2301      	movs	r3, #1
 8002338:	e07f      	b.n	800243a <HAL_RCC_ClockConfig+0x1b6>
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	685b      	ldr	r3, [r3, #4]
 800233e:	2b02      	cmp	r3, #2
 8002340:	d107      	bne.n	8002352 <HAL_RCC_ClockConfig+0xce>
 8002342:	4b41      	ldr	r3, [pc, #260]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800234a:	2b00      	cmp	r3, #0
 800234c:	d109      	bne.n	8002362 <HAL_RCC_ClockConfig+0xde>
 800234e:	2301      	movs	r3, #1
 8002350:	e073      	b.n	800243a <HAL_RCC_ClockConfig+0x1b6>
 8002352:	4b3d      	ldr	r3, [pc, #244]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	f003 0302 	and.w	r3, r3, #2
 800235a:	2b00      	cmp	r3, #0
 800235c:	d101      	bne.n	8002362 <HAL_RCC_ClockConfig+0xde>
 800235e:	2301      	movs	r3, #1
 8002360:	e06b      	b.n	800243a <HAL_RCC_ClockConfig+0x1b6>
 8002362:	4b39      	ldr	r3, [pc, #228]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 8002364:	685b      	ldr	r3, [r3, #4]
 8002366:	f023 0203 	bic.w	r2, r3, #3
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	685b      	ldr	r3, [r3, #4]
 800236e:	4936      	ldr	r1, [pc, #216]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 8002370:	4313      	orrs	r3, r2
 8002372:	604b      	str	r3, [r1, #4]
 8002374:	f7ff fa44 	bl	8001800 <HAL_GetTick>
 8002378:	60f8      	str	r0, [r7, #12]
 800237a:	e00a      	b.n	8002392 <HAL_RCC_ClockConfig+0x10e>
 800237c:	f7ff fa40 	bl	8001800 <HAL_GetTick>
 8002380:	4602      	mov	r2, r0
 8002382:	68fb      	ldr	r3, [r7, #12]
 8002384:	1ad3      	subs	r3, r2, r3
 8002386:	f241 3288 	movw	r2, #5000	; 0x1388
 800238a:	4293      	cmp	r3, r2
 800238c:	d901      	bls.n	8002392 <HAL_RCC_ClockConfig+0x10e>
 800238e:	2303      	movs	r3, #3
 8002390:	e053      	b.n	800243a <HAL_RCC_ClockConfig+0x1b6>
 8002392:	4b2d      	ldr	r3, [pc, #180]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 8002394:	685b      	ldr	r3, [r3, #4]
 8002396:	f003 020c 	and.w	r2, r3, #12
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	685b      	ldr	r3, [r3, #4]
 800239e:	009b      	lsls	r3, r3, #2
 80023a0:	429a      	cmp	r2, r3
 80023a2:	d1eb      	bne.n	800237c <HAL_RCC_ClockConfig+0xf8>
 80023a4:	4b27      	ldr	r3, [pc, #156]	; (8002444 <HAL_RCC_ClockConfig+0x1c0>)
 80023a6:	681b      	ldr	r3, [r3, #0]
 80023a8:	f003 0307 	and.w	r3, r3, #7
 80023ac:	683a      	ldr	r2, [r7, #0]
 80023ae:	429a      	cmp	r2, r3
 80023b0:	d210      	bcs.n	80023d4 <HAL_RCC_ClockConfig+0x150>
 80023b2:	4b24      	ldr	r3, [pc, #144]	; (8002444 <HAL_RCC_ClockConfig+0x1c0>)
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	f023 0207 	bic.w	r2, r3, #7
 80023ba:	4922      	ldr	r1, [pc, #136]	; (8002444 <HAL_RCC_ClockConfig+0x1c0>)
 80023bc:	683b      	ldr	r3, [r7, #0]
 80023be:	4313      	orrs	r3, r2
 80023c0:	600b      	str	r3, [r1, #0]
 80023c2:	4b20      	ldr	r3, [pc, #128]	; (8002444 <HAL_RCC_ClockConfig+0x1c0>)
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	f003 0307 	and.w	r3, r3, #7
 80023ca:	683a      	ldr	r2, [r7, #0]
 80023cc:	429a      	cmp	r2, r3
 80023ce:	d001      	beq.n	80023d4 <HAL_RCC_ClockConfig+0x150>
 80023d0:	2301      	movs	r3, #1
 80023d2:	e032      	b.n	800243a <HAL_RCC_ClockConfig+0x1b6>
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	f003 0304 	and.w	r3, r3, #4
 80023dc:	2b00      	cmp	r3, #0
 80023de:	d008      	beq.n	80023f2 <HAL_RCC_ClockConfig+0x16e>
 80023e0:	4b19      	ldr	r3, [pc, #100]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 80023e2:	685b      	ldr	r3, [r3, #4]
 80023e4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	68db      	ldr	r3, [r3, #12]
 80023ec:	4916      	ldr	r1, [pc, #88]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 80023ee:	4313      	orrs	r3, r2
 80023f0:	604b      	str	r3, [r1, #4]
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	f003 0308 	and.w	r3, r3, #8
 80023fa:	2b00      	cmp	r3, #0
 80023fc:	d009      	beq.n	8002412 <HAL_RCC_ClockConfig+0x18e>
 80023fe:	4b12      	ldr	r3, [pc, #72]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 8002400:	685b      	ldr	r3, [r3, #4]
 8002402:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	691b      	ldr	r3, [r3, #16]
 800240a:	00db      	lsls	r3, r3, #3
 800240c:	490e      	ldr	r1, [pc, #56]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 800240e:	4313      	orrs	r3, r2
 8002410:	604b      	str	r3, [r1, #4]
 8002412:	f000 f821 	bl	8002458 <HAL_RCC_GetSysClockFreq>
 8002416:	4602      	mov	r2, r0
 8002418:	4b0b      	ldr	r3, [pc, #44]	; (8002448 <HAL_RCC_ClockConfig+0x1c4>)
 800241a:	685b      	ldr	r3, [r3, #4]
 800241c:	091b      	lsrs	r3, r3, #4
 800241e:	f003 030f 	and.w	r3, r3, #15
 8002422:	490a      	ldr	r1, [pc, #40]	; (800244c <HAL_RCC_ClockConfig+0x1c8>)
 8002424:	5ccb      	ldrb	r3, [r1, r3]
 8002426:	fa22 f303 	lsr.w	r3, r2, r3
 800242a:	4a09      	ldr	r2, [pc, #36]	; (8002450 <HAL_RCC_ClockConfig+0x1cc>)
 800242c:	6013      	str	r3, [r2, #0]
 800242e:	4b09      	ldr	r3, [pc, #36]	; (8002454 <HAL_RCC_ClockConfig+0x1d0>)
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	4618      	mov	r0, r3
 8002434:	f7ff f9a2 	bl	800177c <HAL_InitTick>
 8002438:	2300      	movs	r3, #0
 800243a:	4618      	mov	r0, r3
 800243c:	3710      	adds	r7, #16
 800243e:	46bd      	mov	sp, r7
 8002440:	bd80      	pop	{r7, pc}
 8002442:	bf00      	nop
 8002444:	40022000 	.word	0x40022000
 8002448:	40021000 	.word	0x40021000
 800244c:	08003c44 	.word	0x08003c44
 8002450:	20000004 	.word	0x20000004
 8002454:	20000008 	.word	0x20000008

08002458 <HAL_RCC_GetSysClockFreq>:
 8002458:	b480      	push	{r7}
 800245a:	b087      	sub	sp, #28
 800245c:	af00      	add	r7, sp, #0
 800245e:	2300      	movs	r3, #0
 8002460:	60fb      	str	r3, [r7, #12]
 8002462:	2300      	movs	r3, #0
 8002464:	60bb      	str	r3, [r7, #8]
 8002466:	2300      	movs	r3, #0
 8002468:	617b      	str	r3, [r7, #20]
 800246a:	2300      	movs	r3, #0
 800246c:	607b      	str	r3, [r7, #4]
 800246e:	2300      	movs	r3, #0
 8002470:	613b      	str	r3, [r7, #16]
 8002472:	4b1e      	ldr	r3, [pc, #120]	; (80024ec <HAL_RCC_GetSysClockFreq+0x94>)
 8002474:	685b      	ldr	r3, [r3, #4]
 8002476:	60fb      	str	r3, [r7, #12]
 8002478:	68fb      	ldr	r3, [r7, #12]
 800247a:	f003 030c 	and.w	r3, r3, #12
 800247e:	2b04      	cmp	r3, #4
 8002480:	d002      	beq.n	8002488 <HAL_RCC_GetSysClockFreq+0x30>
 8002482:	2b08      	cmp	r3, #8
 8002484:	d003      	beq.n	800248e <HAL_RCC_GetSysClockFreq+0x36>
 8002486:	e027      	b.n	80024d8 <HAL_RCC_GetSysClockFreq+0x80>
 8002488:	4b19      	ldr	r3, [pc, #100]	; (80024f0 <HAL_RCC_GetSysClockFreq+0x98>)
 800248a:	613b      	str	r3, [r7, #16]
 800248c:	e027      	b.n	80024de <HAL_RCC_GetSysClockFreq+0x86>
 800248e:	68fb      	ldr	r3, [r7, #12]
 8002490:	0c9b      	lsrs	r3, r3, #18
 8002492:	f003 030f 	and.w	r3, r3, #15
 8002496:	4a17      	ldr	r2, [pc, #92]	; (80024f4 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002498:	5cd3      	ldrb	r3, [r2, r3]
 800249a:	607b      	str	r3, [r7, #4]
 800249c:	68fb      	ldr	r3, [r7, #12]
 800249e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	d010      	beq.n	80024c8 <HAL_RCC_GetSysClockFreq+0x70>
 80024a6:	4b11      	ldr	r3, [pc, #68]	; (80024ec <HAL_RCC_GetSysClockFreq+0x94>)
 80024a8:	685b      	ldr	r3, [r3, #4]
 80024aa:	0c5b      	lsrs	r3, r3, #17
 80024ac:	f003 0301 	and.w	r3, r3, #1
 80024b0:	4a11      	ldr	r2, [pc, #68]	; (80024f8 <HAL_RCC_GetSysClockFreq+0xa0>)
 80024b2:	5cd3      	ldrb	r3, [r2, r3]
 80024b4:	60bb      	str	r3, [r7, #8]
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	4a0d      	ldr	r2, [pc, #52]	; (80024f0 <HAL_RCC_GetSysClockFreq+0x98>)
 80024ba:	fb03 f202 	mul.w	r2, r3, r2
 80024be:	68bb      	ldr	r3, [r7, #8]
 80024c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80024c4:	617b      	str	r3, [r7, #20]
 80024c6:	e004      	b.n	80024d2 <HAL_RCC_GetSysClockFreq+0x7a>
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	4a0c      	ldr	r2, [pc, #48]	; (80024fc <HAL_RCC_GetSysClockFreq+0xa4>)
 80024cc:	fb02 f303 	mul.w	r3, r2, r3
 80024d0:	617b      	str	r3, [r7, #20]
 80024d2:	697b      	ldr	r3, [r7, #20]
 80024d4:	613b      	str	r3, [r7, #16]
 80024d6:	e002      	b.n	80024de <HAL_RCC_GetSysClockFreq+0x86>
 80024d8:	4b05      	ldr	r3, [pc, #20]	; (80024f0 <HAL_RCC_GetSysClockFreq+0x98>)
 80024da:	613b      	str	r3, [r7, #16]
 80024dc:	bf00      	nop
 80024de:	693b      	ldr	r3, [r7, #16]
 80024e0:	4618      	mov	r0, r3
 80024e2:	371c      	adds	r7, #28
 80024e4:	46bd      	mov	sp, r7
 80024e6:	bc80      	pop	{r7}
 80024e8:	4770      	bx	lr
 80024ea:	bf00      	nop
 80024ec:	40021000 	.word	0x40021000
 80024f0:	007a1200 	.word	0x007a1200
 80024f4:	08003c54 	.word	0x08003c54
 80024f8:	08003c64 	.word	0x08003c64
 80024fc:	003d0900 	.word	0x003d0900

08002500 <RCC_Delay>:
 8002500:	b480      	push	{r7}
 8002502:	b085      	sub	sp, #20
 8002504:	af00      	add	r7, sp, #0
 8002506:	6078      	str	r0, [r7, #4]
 8002508:	4b0a      	ldr	r3, [pc, #40]	; (8002534 <RCC_Delay+0x34>)
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	4a0a      	ldr	r2, [pc, #40]	; (8002538 <RCC_Delay+0x38>)
 800250e:	fba2 2303 	umull	r2, r3, r2, r3
 8002512:	0a5b      	lsrs	r3, r3, #9
 8002514:	687a      	ldr	r2, [r7, #4]
 8002516:	fb02 f303 	mul.w	r3, r2, r3
 800251a:	60fb      	str	r3, [r7, #12]
 800251c:	bf00      	nop
 800251e:	68fb      	ldr	r3, [r7, #12]
 8002520:	1e5a      	subs	r2, r3, #1
 8002522:	60fa      	str	r2, [r7, #12]
 8002524:	2b00      	cmp	r3, #0
 8002526:	d1f9      	bne.n	800251c <RCC_Delay+0x1c>
 8002528:	bf00      	nop
 800252a:	bf00      	nop
 800252c:	3714      	adds	r7, #20
 800252e:	46bd      	mov	sp, r7
 8002530:	bc80      	pop	{r7}
 8002532:	4770      	bx	lr
 8002534:	20000004 	.word	0x20000004
 8002538:	10624dd3 	.word	0x10624dd3

0800253c <HAL_SPI_Init>:
 800253c:	b580      	push	{r7, lr}
 800253e:	b082      	sub	sp, #8
 8002540:	af00      	add	r7, sp, #0
 8002542:	6078      	str	r0, [r7, #4]
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	2b00      	cmp	r3, #0
 8002548:	d101      	bne.n	800254e <HAL_SPI_Init+0x12>
 800254a:	2301      	movs	r3, #1
 800254c:	e076      	b.n	800263c <HAL_SPI_Init+0x100>
 800254e:	687b      	ldr	r3, [r7, #4]
 8002550:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002552:	2b00      	cmp	r3, #0
 8002554:	d108      	bne.n	8002568 <HAL_SPI_Init+0x2c>
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	685b      	ldr	r3, [r3, #4]
 800255a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800255e:	d009      	beq.n	8002574 <HAL_SPI_Init+0x38>
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	2200      	movs	r2, #0
 8002564:	61da      	str	r2, [r3, #28]
 8002566:	e005      	b.n	8002574 <HAL_SPI_Init+0x38>
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	2200      	movs	r2, #0
 800256c:	611a      	str	r2, [r3, #16]
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	2200      	movs	r2, #0
 8002572:	615a      	str	r2, [r3, #20]
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	2200      	movs	r2, #0
 8002578:	629a      	str	r2, [r3, #40]	; 0x28
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002580:	b2db      	uxtb	r3, r3
 8002582:	2b00      	cmp	r3, #0
 8002584:	d106      	bne.n	8002594 <HAL_SPI_Init+0x58>
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	2200      	movs	r2, #0
 800258a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800258e:	6878      	ldr	r0, [r7, #4]
 8002590:	f7fe ff52 	bl	8001438 <HAL_SPI_MspInit>
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	2202      	movs	r2, #2
 8002598:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	681b      	ldr	r3, [r3, #0]
 80025a0:	681a      	ldr	r2, [r3, #0]
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80025aa:	601a      	str	r2, [r3, #0]
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	685b      	ldr	r3, [r3, #4]
 80025b0:	f403 7282 	and.w	r2, r3, #260	; 0x104
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	689b      	ldr	r3, [r3, #8]
 80025b8:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80025bc:	431a      	orrs	r2, r3
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	68db      	ldr	r3, [r3, #12]
 80025c2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80025c6:	431a      	orrs	r2, r3
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	691b      	ldr	r3, [r3, #16]
 80025cc:	f003 0302 	and.w	r3, r3, #2
 80025d0:	431a      	orrs	r2, r3
 80025d2:	687b      	ldr	r3, [r7, #4]
 80025d4:	695b      	ldr	r3, [r3, #20]
 80025d6:	f003 0301 	and.w	r3, r3, #1
 80025da:	431a      	orrs	r2, r3
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	699b      	ldr	r3, [r3, #24]
 80025e0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80025e4:	431a      	orrs	r2, r3
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	69db      	ldr	r3, [r3, #28]
 80025ea:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80025ee:	431a      	orrs	r2, r3
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	6a1b      	ldr	r3, [r3, #32]
 80025f4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80025f8:	ea42 0103 	orr.w	r1, r2, r3
 80025fc:	687b      	ldr	r3, [r7, #4]
 80025fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002600:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	430a      	orrs	r2, r1
 800260a:	601a      	str	r2, [r3, #0]
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	699b      	ldr	r3, [r3, #24]
 8002610:	0c1a      	lsrs	r2, r3, #16
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	681b      	ldr	r3, [r3, #0]
 8002616:	f002 0204 	and.w	r2, r2, #4
 800261a:	605a      	str	r2, [r3, #4]
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	681b      	ldr	r3, [r3, #0]
 8002620:	69da      	ldr	r2, [r3, #28]
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800262a:	61da      	str	r2, [r3, #28]
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	2200      	movs	r2, #0
 8002630:	655a      	str	r2, [r3, #84]	; 0x54
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	2201      	movs	r2, #1
 8002636:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800263a:	2300      	movs	r3, #0
 800263c:	4618      	mov	r0, r3
 800263e:	3708      	adds	r7, #8
 8002640:	46bd      	mov	sp, r7
 8002642:	bd80      	pop	{r7, pc}

08002644 <HAL_SPI_Transmit>:
 8002644:	b580      	push	{r7, lr}
 8002646:	b088      	sub	sp, #32
 8002648:	af00      	add	r7, sp, #0
 800264a:	60f8      	str	r0, [r7, #12]
 800264c:	60b9      	str	r1, [r7, #8]
 800264e:	603b      	str	r3, [r7, #0]
 8002650:	4613      	mov	r3, r2
 8002652:	80fb      	strh	r3, [r7, #6]
 8002654:	2300      	movs	r3, #0
 8002656:	77fb      	strb	r3, [r7, #31]
 8002658:	68fb      	ldr	r3, [r7, #12]
 800265a:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800265e:	2b01      	cmp	r3, #1
 8002660:	d101      	bne.n	8002666 <HAL_SPI_Transmit+0x22>
 8002662:	2302      	movs	r3, #2
 8002664:	e12d      	b.n	80028c2 <HAL_SPI_Transmit+0x27e>
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	2201      	movs	r2, #1
 800266a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800266e:	f7ff f8c7 	bl	8001800 <HAL_GetTick>
 8002672:	61b8      	str	r0, [r7, #24]
 8002674:	88fb      	ldrh	r3, [r7, #6]
 8002676:	82fb      	strh	r3, [r7, #22]
 8002678:	68fb      	ldr	r3, [r7, #12]
 800267a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800267e:	b2db      	uxtb	r3, r3
 8002680:	2b01      	cmp	r3, #1
 8002682:	d002      	beq.n	800268a <HAL_SPI_Transmit+0x46>
 8002684:	2302      	movs	r3, #2
 8002686:	77fb      	strb	r3, [r7, #31]
 8002688:	e116      	b.n	80028b8 <HAL_SPI_Transmit+0x274>
 800268a:	68bb      	ldr	r3, [r7, #8]
 800268c:	2b00      	cmp	r3, #0
 800268e:	d002      	beq.n	8002696 <HAL_SPI_Transmit+0x52>
 8002690:	88fb      	ldrh	r3, [r7, #6]
 8002692:	2b00      	cmp	r3, #0
 8002694:	d102      	bne.n	800269c <HAL_SPI_Transmit+0x58>
 8002696:	2301      	movs	r3, #1
 8002698:	77fb      	strb	r3, [r7, #31]
 800269a:	e10d      	b.n	80028b8 <HAL_SPI_Transmit+0x274>
 800269c:	68fb      	ldr	r3, [r7, #12]
 800269e:	2203      	movs	r2, #3
 80026a0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80026a4:	68fb      	ldr	r3, [r7, #12]
 80026a6:	2200      	movs	r2, #0
 80026a8:	655a      	str	r2, [r3, #84]	; 0x54
 80026aa:	68fb      	ldr	r3, [r7, #12]
 80026ac:	68ba      	ldr	r2, [r7, #8]
 80026ae:	631a      	str	r2, [r3, #48]	; 0x30
 80026b0:	68fb      	ldr	r3, [r7, #12]
 80026b2:	88fa      	ldrh	r2, [r7, #6]
 80026b4:	869a      	strh	r2, [r3, #52]	; 0x34
 80026b6:	68fb      	ldr	r3, [r7, #12]
 80026b8:	88fa      	ldrh	r2, [r7, #6]
 80026ba:	86da      	strh	r2, [r3, #54]	; 0x36
 80026bc:	68fb      	ldr	r3, [r7, #12]
 80026be:	2200      	movs	r2, #0
 80026c0:	639a      	str	r2, [r3, #56]	; 0x38
 80026c2:	68fb      	ldr	r3, [r7, #12]
 80026c4:	2200      	movs	r2, #0
 80026c6:	879a      	strh	r2, [r3, #60]	; 0x3c
 80026c8:	68fb      	ldr	r3, [r7, #12]
 80026ca:	2200      	movs	r2, #0
 80026cc:	87da      	strh	r2, [r3, #62]	; 0x3e
 80026ce:	68fb      	ldr	r3, [r7, #12]
 80026d0:	2200      	movs	r2, #0
 80026d2:	645a      	str	r2, [r3, #68]	; 0x44
 80026d4:	68fb      	ldr	r3, [r7, #12]
 80026d6:	2200      	movs	r2, #0
 80026d8:	641a      	str	r2, [r3, #64]	; 0x40
 80026da:	68fb      	ldr	r3, [r7, #12]
 80026dc:	689b      	ldr	r3, [r3, #8]
 80026de:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80026e2:	d10f      	bne.n	8002704 <HAL_SPI_Transmit+0xc0>
 80026e4:	68fb      	ldr	r3, [r7, #12]
 80026e6:	681b      	ldr	r3, [r3, #0]
 80026e8:	681a      	ldr	r2, [r3, #0]
 80026ea:	68fb      	ldr	r3, [r7, #12]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80026f2:	601a      	str	r2, [r3, #0]
 80026f4:	68fb      	ldr	r3, [r7, #12]
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	681a      	ldr	r2, [r3, #0]
 80026fa:	68fb      	ldr	r3, [r7, #12]
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002702:	601a      	str	r2, [r3, #0]
 8002704:	68fb      	ldr	r3, [r7, #12]
 8002706:	681b      	ldr	r3, [r3, #0]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800270e:	2b40      	cmp	r3, #64	; 0x40
 8002710:	d007      	beq.n	8002722 <HAL_SPI_Transmit+0xde>
 8002712:	68fb      	ldr	r3, [r7, #12]
 8002714:	681b      	ldr	r3, [r3, #0]
 8002716:	681a      	ldr	r2, [r3, #0]
 8002718:	68fb      	ldr	r3, [r7, #12]
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002720:	601a      	str	r2, [r3, #0]
 8002722:	68fb      	ldr	r3, [r7, #12]
 8002724:	68db      	ldr	r3, [r3, #12]
 8002726:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800272a:	d14f      	bne.n	80027cc <HAL_SPI_Transmit+0x188>
 800272c:	68fb      	ldr	r3, [r7, #12]
 800272e:	685b      	ldr	r3, [r3, #4]
 8002730:	2b00      	cmp	r3, #0
 8002732:	d002      	beq.n	800273a <HAL_SPI_Transmit+0xf6>
 8002734:	8afb      	ldrh	r3, [r7, #22]
 8002736:	2b01      	cmp	r3, #1
 8002738:	d142      	bne.n	80027c0 <HAL_SPI_Transmit+0x17c>
 800273a:	68fb      	ldr	r3, [r7, #12]
 800273c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800273e:	881a      	ldrh	r2, [r3, #0]
 8002740:	68fb      	ldr	r3, [r7, #12]
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	60da      	str	r2, [r3, #12]
 8002746:	68fb      	ldr	r3, [r7, #12]
 8002748:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800274a:	1c9a      	adds	r2, r3, #2
 800274c:	68fb      	ldr	r3, [r7, #12]
 800274e:	631a      	str	r2, [r3, #48]	; 0x30
 8002750:	68fb      	ldr	r3, [r7, #12]
 8002752:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002754:	b29b      	uxth	r3, r3
 8002756:	3b01      	subs	r3, #1
 8002758:	b29a      	uxth	r2, r3
 800275a:	68fb      	ldr	r3, [r7, #12]
 800275c:	86da      	strh	r2, [r3, #54]	; 0x36
 800275e:	e02f      	b.n	80027c0 <HAL_SPI_Transmit+0x17c>
 8002760:	68fb      	ldr	r3, [r7, #12]
 8002762:	681b      	ldr	r3, [r3, #0]
 8002764:	689b      	ldr	r3, [r3, #8]
 8002766:	f003 0302 	and.w	r3, r3, #2
 800276a:	2b02      	cmp	r3, #2
 800276c:	d112      	bne.n	8002794 <HAL_SPI_Transmit+0x150>
 800276e:	68fb      	ldr	r3, [r7, #12]
 8002770:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002772:	881a      	ldrh	r2, [r3, #0]
 8002774:	68fb      	ldr	r3, [r7, #12]
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	60da      	str	r2, [r3, #12]
 800277a:	68fb      	ldr	r3, [r7, #12]
 800277c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800277e:	1c9a      	adds	r2, r3, #2
 8002780:	68fb      	ldr	r3, [r7, #12]
 8002782:	631a      	str	r2, [r3, #48]	; 0x30
 8002784:	68fb      	ldr	r3, [r7, #12]
 8002786:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002788:	b29b      	uxth	r3, r3
 800278a:	3b01      	subs	r3, #1
 800278c:	b29a      	uxth	r2, r3
 800278e:	68fb      	ldr	r3, [r7, #12]
 8002790:	86da      	strh	r2, [r3, #54]	; 0x36
 8002792:	e015      	b.n	80027c0 <HAL_SPI_Transmit+0x17c>
 8002794:	f7ff f834 	bl	8001800 <HAL_GetTick>
 8002798:	4602      	mov	r2, r0
 800279a:	69bb      	ldr	r3, [r7, #24]
 800279c:	1ad3      	subs	r3, r2, r3
 800279e:	683a      	ldr	r2, [r7, #0]
 80027a0:	429a      	cmp	r2, r3
 80027a2:	d803      	bhi.n	80027ac <HAL_SPI_Transmit+0x168>
 80027a4:	683b      	ldr	r3, [r7, #0]
 80027a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80027aa:	d102      	bne.n	80027b2 <HAL_SPI_Transmit+0x16e>
 80027ac:	683b      	ldr	r3, [r7, #0]
 80027ae:	2b00      	cmp	r3, #0
 80027b0:	d106      	bne.n	80027c0 <HAL_SPI_Transmit+0x17c>
 80027b2:	2303      	movs	r3, #3
 80027b4:	77fb      	strb	r3, [r7, #31]
 80027b6:	68fb      	ldr	r3, [r7, #12]
 80027b8:	2201      	movs	r2, #1
 80027ba:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80027be:	e07b      	b.n	80028b8 <HAL_SPI_Transmit+0x274>
 80027c0:	68fb      	ldr	r3, [r7, #12]
 80027c2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80027c4:	b29b      	uxth	r3, r3
 80027c6:	2b00      	cmp	r3, #0
 80027c8:	d1ca      	bne.n	8002760 <HAL_SPI_Transmit+0x11c>
 80027ca:	e050      	b.n	800286e <HAL_SPI_Transmit+0x22a>
 80027cc:	68fb      	ldr	r3, [r7, #12]
 80027ce:	685b      	ldr	r3, [r3, #4]
 80027d0:	2b00      	cmp	r3, #0
 80027d2:	d002      	beq.n	80027da <HAL_SPI_Transmit+0x196>
 80027d4:	8afb      	ldrh	r3, [r7, #22]
 80027d6:	2b01      	cmp	r3, #1
 80027d8:	d144      	bne.n	8002864 <HAL_SPI_Transmit+0x220>
 80027da:	68fb      	ldr	r3, [r7, #12]
 80027dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027de:	68fb      	ldr	r3, [r7, #12]
 80027e0:	681b      	ldr	r3, [r3, #0]
 80027e2:	330c      	adds	r3, #12
 80027e4:	7812      	ldrb	r2, [r2, #0]
 80027e6:	701a      	strb	r2, [r3, #0]
 80027e8:	68fb      	ldr	r3, [r7, #12]
 80027ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027ec:	1c5a      	adds	r2, r3, #1
 80027ee:	68fb      	ldr	r3, [r7, #12]
 80027f0:	631a      	str	r2, [r3, #48]	; 0x30
 80027f2:	68fb      	ldr	r3, [r7, #12]
 80027f4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80027f6:	b29b      	uxth	r3, r3
 80027f8:	3b01      	subs	r3, #1
 80027fa:	b29a      	uxth	r2, r3
 80027fc:	68fb      	ldr	r3, [r7, #12]
 80027fe:	86da      	strh	r2, [r3, #54]	; 0x36
 8002800:	e030      	b.n	8002864 <HAL_SPI_Transmit+0x220>
 8002802:	68fb      	ldr	r3, [r7, #12]
 8002804:	681b      	ldr	r3, [r3, #0]
 8002806:	689b      	ldr	r3, [r3, #8]
 8002808:	f003 0302 	and.w	r3, r3, #2
 800280c:	2b02      	cmp	r3, #2
 800280e:	d113      	bne.n	8002838 <HAL_SPI_Transmit+0x1f4>
 8002810:	68fb      	ldr	r3, [r7, #12]
 8002812:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002814:	68fb      	ldr	r3, [r7, #12]
 8002816:	681b      	ldr	r3, [r3, #0]
 8002818:	330c      	adds	r3, #12
 800281a:	7812      	ldrb	r2, [r2, #0]
 800281c:	701a      	strb	r2, [r3, #0]
 800281e:	68fb      	ldr	r3, [r7, #12]
 8002820:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002822:	1c5a      	adds	r2, r3, #1
 8002824:	68fb      	ldr	r3, [r7, #12]
 8002826:	631a      	str	r2, [r3, #48]	; 0x30
 8002828:	68fb      	ldr	r3, [r7, #12]
 800282a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800282c:	b29b      	uxth	r3, r3
 800282e:	3b01      	subs	r3, #1
 8002830:	b29a      	uxth	r2, r3
 8002832:	68fb      	ldr	r3, [r7, #12]
 8002834:	86da      	strh	r2, [r3, #54]	; 0x36
 8002836:	e015      	b.n	8002864 <HAL_SPI_Transmit+0x220>
 8002838:	f7fe ffe2 	bl	8001800 <HAL_GetTick>
 800283c:	4602      	mov	r2, r0
 800283e:	69bb      	ldr	r3, [r7, #24]
 8002840:	1ad3      	subs	r3, r2, r3
 8002842:	683a      	ldr	r2, [r7, #0]
 8002844:	429a      	cmp	r2, r3
 8002846:	d803      	bhi.n	8002850 <HAL_SPI_Transmit+0x20c>
 8002848:	683b      	ldr	r3, [r7, #0]
 800284a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800284e:	d102      	bne.n	8002856 <HAL_SPI_Transmit+0x212>
 8002850:	683b      	ldr	r3, [r7, #0]
 8002852:	2b00      	cmp	r3, #0
 8002854:	d106      	bne.n	8002864 <HAL_SPI_Transmit+0x220>
 8002856:	2303      	movs	r3, #3
 8002858:	77fb      	strb	r3, [r7, #31]
 800285a:	68fb      	ldr	r3, [r7, #12]
 800285c:	2201      	movs	r2, #1
 800285e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002862:	e029      	b.n	80028b8 <HAL_SPI_Transmit+0x274>
 8002864:	68fb      	ldr	r3, [r7, #12]
 8002866:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002868:	b29b      	uxth	r3, r3
 800286a:	2b00      	cmp	r3, #0
 800286c:	d1c9      	bne.n	8002802 <HAL_SPI_Transmit+0x1be>
 800286e:	69ba      	ldr	r2, [r7, #24]
 8002870:	6839      	ldr	r1, [r7, #0]
 8002872:	68f8      	ldr	r0, [r7, #12]
 8002874:	f000 fbcc 	bl	8003010 <SPI_EndRxTxTransaction>
 8002878:	4603      	mov	r3, r0
 800287a:	2b00      	cmp	r3, #0
 800287c:	d002      	beq.n	8002884 <HAL_SPI_Transmit+0x240>
 800287e:	68fb      	ldr	r3, [r7, #12]
 8002880:	2220      	movs	r2, #32
 8002882:	655a      	str	r2, [r3, #84]	; 0x54
 8002884:	68fb      	ldr	r3, [r7, #12]
 8002886:	689b      	ldr	r3, [r3, #8]
 8002888:	2b00      	cmp	r3, #0
 800288a:	d10a      	bne.n	80028a2 <HAL_SPI_Transmit+0x25e>
 800288c:	2300      	movs	r3, #0
 800288e:	613b      	str	r3, [r7, #16]
 8002890:	68fb      	ldr	r3, [r7, #12]
 8002892:	681b      	ldr	r3, [r3, #0]
 8002894:	68db      	ldr	r3, [r3, #12]
 8002896:	613b      	str	r3, [r7, #16]
 8002898:	68fb      	ldr	r3, [r7, #12]
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	689b      	ldr	r3, [r3, #8]
 800289e:	613b      	str	r3, [r7, #16]
 80028a0:	693b      	ldr	r3, [r7, #16]
 80028a2:	68fb      	ldr	r3, [r7, #12]
 80028a4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80028a6:	2b00      	cmp	r3, #0
 80028a8:	d002      	beq.n	80028b0 <HAL_SPI_Transmit+0x26c>
 80028aa:	2301      	movs	r3, #1
 80028ac:	77fb      	strb	r3, [r7, #31]
 80028ae:	e003      	b.n	80028b8 <HAL_SPI_Transmit+0x274>
 80028b0:	68fb      	ldr	r3, [r7, #12]
 80028b2:	2201      	movs	r2, #1
 80028b4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80028b8:	68fb      	ldr	r3, [r7, #12]
 80028ba:	2200      	movs	r2, #0
 80028bc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80028c0:	7ffb      	ldrb	r3, [r7, #31]
 80028c2:	4618      	mov	r0, r3
 80028c4:	3720      	adds	r7, #32
 80028c6:	46bd      	mov	sp, r7
 80028c8:	bd80      	pop	{r7, pc}

080028ca <HAL_SPI_Receive>:
 80028ca:	b580      	push	{r7, lr}
 80028cc:	b088      	sub	sp, #32
 80028ce:	af02      	add	r7, sp, #8
 80028d0:	60f8      	str	r0, [r7, #12]
 80028d2:	60b9      	str	r1, [r7, #8]
 80028d4:	603b      	str	r3, [r7, #0]
 80028d6:	4613      	mov	r3, r2
 80028d8:	80fb      	strh	r3, [r7, #6]
 80028da:	2300      	movs	r3, #0
 80028dc:	75fb      	strb	r3, [r7, #23]
 80028de:	68fb      	ldr	r3, [r7, #12]
 80028e0:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80028e4:	b2db      	uxtb	r3, r3
 80028e6:	2b01      	cmp	r3, #1
 80028e8:	d002      	beq.n	80028f0 <HAL_SPI_Receive+0x26>
 80028ea:	2302      	movs	r3, #2
 80028ec:	75fb      	strb	r3, [r7, #23]
 80028ee:	e0fb      	b.n	8002ae8 <HAL_SPI_Receive+0x21e>
 80028f0:	68fb      	ldr	r3, [r7, #12]
 80028f2:	685b      	ldr	r3, [r3, #4]
 80028f4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80028f8:	d112      	bne.n	8002920 <HAL_SPI_Receive+0x56>
 80028fa:	68fb      	ldr	r3, [r7, #12]
 80028fc:	689b      	ldr	r3, [r3, #8]
 80028fe:	2b00      	cmp	r3, #0
 8002900:	d10e      	bne.n	8002920 <HAL_SPI_Receive+0x56>
 8002902:	68fb      	ldr	r3, [r7, #12]
 8002904:	2204      	movs	r2, #4
 8002906:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800290a:	88fa      	ldrh	r2, [r7, #6]
 800290c:	683b      	ldr	r3, [r7, #0]
 800290e:	9300      	str	r3, [sp, #0]
 8002910:	4613      	mov	r3, r2
 8002912:	68ba      	ldr	r2, [r7, #8]
 8002914:	68b9      	ldr	r1, [r7, #8]
 8002916:	68f8      	ldr	r0, [r7, #12]
 8002918:	f000 f8ef 	bl	8002afa <HAL_SPI_TransmitReceive>
 800291c:	4603      	mov	r3, r0
 800291e:	e0e8      	b.n	8002af2 <HAL_SPI_Receive+0x228>
 8002920:	68fb      	ldr	r3, [r7, #12]
 8002922:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8002926:	2b01      	cmp	r3, #1
 8002928:	d101      	bne.n	800292e <HAL_SPI_Receive+0x64>
 800292a:	2302      	movs	r3, #2
 800292c:	e0e1      	b.n	8002af2 <HAL_SPI_Receive+0x228>
 800292e:	68fb      	ldr	r3, [r7, #12]
 8002930:	2201      	movs	r2, #1
 8002932:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002936:	f7fe ff63 	bl	8001800 <HAL_GetTick>
 800293a:	6138      	str	r0, [r7, #16]
 800293c:	68bb      	ldr	r3, [r7, #8]
 800293e:	2b00      	cmp	r3, #0
 8002940:	d002      	beq.n	8002948 <HAL_SPI_Receive+0x7e>
 8002942:	88fb      	ldrh	r3, [r7, #6]
 8002944:	2b00      	cmp	r3, #0
 8002946:	d102      	bne.n	800294e <HAL_SPI_Receive+0x84>
 8002948:	2301      	movs	r3, #1
 800294a:	75fb      	strb	r3, [r7, #23]
 800294c:	e0cc      	b.n	8002ae8 <HAL_SPI_Receive+0x21e>
 800294e:	68fb      	ldr	r3, [r7, #12]
 8002950:	2204      	movs	r2, #4
 8002952:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002956:	68fb      	ldr	r3, [r7, #12]
 8002958:	2200      	movs	r2, #0
 800295a:	655a      	str	r2, [r3, #84]	; 0x54
 800295c:	68fb      	ldr	r3, [r7, #12]
 800295e:	68ba      	ldr	r2, [r7, #8]
 8002960:	639a      	str	r2, [r3, #56]	; 0x38
 8002962:	68fb      	ldr	r3, [r7, #12]
 8002964:	88fa      	ldrh	r2, [r7, #6]
 8002966:	879a      	strh	r2, [r3, #60]	; 0x3c
 8002968:	68fb      	ldr	r3, [r7, #12]
 800296a:	88fa      	ldrh	r2, [r7, #6]
 800296c:	87da      	strh	r2, [r3, #62]	; 0x3e
 800296e:	68fb      	ldr	r3, [r7, #12]
 8002970:	2200      	movs	r2, #0
 8002972:	631a      	str	r2, [r3, #48]	; 0x30
 8002974:	68fb      	ldr	r3, [r7, #12]
 8002976:	2200      	movs	r2, #0
 8002978:	869a      	strh	r2, [r3, #52]	; 0x34
 800297a:	68fb      	ldr	r3, [r7, #12]
 800297c:	2200      	movs	r2, #0
 800297e:	86da      	strh	r2, [r3, #54]	; 0x36
 8002980:	68fb      	ldr	r3, [r7, #12]
 8002982:	2200      	movs	r2, #0
 8002984:	641a      	str	r2, [r3, #64]	; 0x40
 8002986:	68fb      	ldr	r3, [r7, #12]
 8002988:	2200      	movs	r2, #0
 800298a:	645a      	str	r2, [r3, #68]	; 0x44
 800298c:	68fb      	ldr	r3, [r7, #12]
 800298e:	689b      	ldr	r3, [r3, #8]
 8002990:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002994:	d10f      	bne.n	80029b6 <HAL_SPI_Receive+0xec>
 8002996:	68fb      	ldr	r3, [r7, #12]
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	681a      	ldr	r2, [r3, #0]
 800299c:	68fb      	ldr	r3, [r7, #12]
 800299e:	681b      	ldr	r3, [r3, #0]
 80029a0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80029a4:	601a      	str	r2, [r3, #0]
 80029a6:	68fb      	ldr	r3, [r7, #12]
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	681a      	ldr	r2, [r3, #0]
 80029ac:	68fb      	ldr	r3, [r7, #12]
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80029b4:	601a      	str	r2, [r3, #0]
 80029b6:	68fb      	ldr	r3, [r7, #12]
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80029c0:	2b40      	cmp	r3, #64	; 0x40
 80029c2:	d007      	beq.n	80029d4 <HAL_SPI_Receive+0x10a>
 80029c4:	68fb      	ldr	r3, [r7, #12]
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	681a      	ldr	r2, [r3, #0]
 80029ca:	68fb      	ldr	r3, [r7, #12]
 80029cc:	681b      	ldr	r3, [r3, #0]
 80029ce:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80029d2:	601a      	str	r2, [r3, #0]
 80029d4:	68fb      	ldr	r3, [r7, #12]
 80029d6:	68db      	ldr	r3, [r3, #12]
 80029d8:	2b00      	cmp	r3, #0
 80029da:	d16a      	bne.n	8002ab2 <HAL_SPI_Receive+0x1e8>
 80029dc:	e032      	b.n	8002a44 <HAL_SPI_Receive+0x17a>
 80029de:	68fb      	ldr	r3, [r7, #12]
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	689b      	ldr	r3, [r3, #8]
 80029e4:	f003 0301 	and.w	r3, r3, #1
 80029e8:	2b01      	cmp	r3, #1
 80029ea:	d115      	bne.n	8002a18 <HAL_SPI_Receive+0x14e>
 80029ec:	68fb      	ldr	r3, [r7, #12]
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	f103 020c 	add.w	r2, r3, #12
 80029f4:	68fb      	ldr	r3, [r7, #12]
 80029f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80029f8:	7812      	ldrb	r2, [r2, #0]
 80029fa:	b2d2      	uxtb	r2, r2
 80029fc:	701a      	strb	r2, [r3, #0]
 80029fe:	68fb      	ldr	r3, [r7, #12]
 8002a00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a02:	1c5a      	adds	r2, r3, #1
 8002a04:	68fb      	ldr	r3, [r7, #12]
 8002a06:	639a      	str	r2, [r3, #56]	; 0x38
 8002a08:	68fb      	ldr	r3, [r7, #12]
 8002a0a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002a0c:	b29b      	uxth	r3, r3
 8002a0e:	3b01      	subs	r3, #1
 8002a10:	b29a      	uxth	r2, r3
 8002a12:	68fb      	ldr	r3, [r7, #12]
 8002a14:	87da      	strh	r2, [r3, #62]	; 0x3e
 8002a16:	e015      	b.n	8002a44 <HAL_SPI_Receive+0x17a>
 8002a18:	f7fe fef2 	bl	8001800 <HAL_GetTick>
 8002a1c:	4602      	mov	r2, r0
 8002a1e:	693b      	ldr	r3, [r7, #16]
 8002a20:	1ad3      	subs	r3, r2, r3
 8002a22:	683a      	ldr	r2, [r7, #0]
 8002a24:	429a      	cmp	r2, r3
 8002a26:	d803      	bhi.n	8002a30 <HAL_SPI_Receive+0x166>
 8002a28:	683b      	ldr	r3, [r7, #0]
 8002a2a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a2e:	d102      	bne.n	8002a36 <HAL_SPI_Receive+0x16c>
 8002a30:	683b      	ldr	r3, [r7, #0]
 8002a32:	2b00      	cmp	r3, #0
 8002a34:	d106      	bne.n	8002a44 <HAL_SPI_Receive+0x17a>
 8002a36:	2303      	movs	r3, #3
 8002a38:	75fb      	strb	r3, [r7, #23]
 8002a3a:	68fb      	ldr	r3, [r7, #12]
 8002a3c:	2201      	movs	r2, #1
 8002a3e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002a42:	e051      	b.n	8002ae8 <HAL_SPI_Receive+0x21e>
 8002a44:	68fb      	ldr	r3, [r7, #12]
 8002a46:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002a48:	b29b      	uxth	r3, r3
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	d1c7      	bne.n	80029de <HAL_SPI_Receive+0x114>
 8002a4e:	e035      	b.n	8002abc <HAL_SPI_Receive+0x1f2>
 8002a50:	68fb      	ldr	r3, [r7, #12]
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	689b      	ldr	r3, [r3, #8]
 8002a56:	f003 0301 	and.w	r3, r3, #1
 8002a5a:	2b01      	cmp	r3, #1
 8002a5c:	d113      	bne.n	8002a86 <HAL_SPI_Receive+0x1bc>
 8002a5e:	68fb      	ldr	r3, [r7, #12]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	68da      	ldr	r2, [r3, #12]
 8002a64:	68fb      	ldr	r3, [r7, #12]
 8002a66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a68:	b292      	uxth	r2, r2
 8002a6a:	801a      	strh	r2, [r3, #0]
 8002a6c:	68fb      	ldr	r3, [r7, #12]
 8002a6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a70:	1c9a      	adds	r2, r3, #2
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	639a      	str	r2, [r3, #56]	; 0x38
 8002a76:	68fb      	ldr	r3, [r7, #12]
 8002a78:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002a7a:	b29b      	uxth	r3, r3
 8002a7c:	3b01      	subs	r3, #1
 8002a7e:	b29a      	uxth	r2, r3
 8002a80:	68fb      	ldr	r3, [r7, #12]
 8002a82:	87da      	strh	r2, [r3, #62]	; 0x3e
 8002a84:	e015      	b.n	8002ab2 <HAL_SPI_Receive+0x1e8>
 8002a86:	f7fe febb 	bl	8001800 <HAL_GetTick>
 8002a8a:	4602      	mov	r2, r0
 8002a8c:	693b      	ldr	r3, [r7, #16]
 8002a8e:	1ad3      	subs	r3, r2, r3
 8002a90:	683a      	ldr	r2, [r7, #0]
 8002a92:	429a      	cmp	r2, r3
 8002a94:	d803      	bhi.n	8002a9e <HAL_SPI_Receive+0x1d4>
 8002a96:	683b      	ldr	r3, [r7, #0]
 8002a98:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a9c:	d102      	bne.n	8002aa4 <HAL_SPI_Receive+0x1da>
 8002a9e:	683b      	ldr	r3, [r7, #0]
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d106      	bne.n	8002ab2 <HAL_SPI_Receive+0x1e8>
 8002aa4:	2303      	movs	r3, #3
 8002aa6:	75fb      	strb	r3, [r7, #23]
 8002aa8:	68fb      	ldr	r3, [r7, #12]
 8002aaa:	2201      	movs	r2, #1
 8002aac:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002ab0:	e01a      	b.n	8002ae8 <HAL_SPI_Receive+0x21e>
 8002ab2:	68fb      	ldr	r3, [r7, #12]
 8002ab4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002ab6:	b29b      	uxth	r3, r3
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d1c9      	bne.n	8002a50 <HAL_SPI_Receive+0x186>
 8002abc:	693a      	ldr	r2, [r7, #16]
 8002abe:	6839      	ldr	r1, [r7, #0]
 8002ac0:	68f8      	ldr	r0, [r7, #12]
 8002ac2:	f000 fa53 	bl	8002f6c <SPI_EndRxTransaction>
 8002ac6:	4603      	mov	r3, r0
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	d002      	beq.n	8002ad2 <HAL_SPI_Receive+0x208>
 8002acc:	68fb      	ldr	r3, [r7, #12]
 8002ace:	2220      	movs	r2, #32
 8002ad0:	655a      	str	r2, [r3, #84]	; 0x54
 8002ad2:	68fb      	ldr	r3, [r7, #12]
 8002ad4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d002      	beq.n	8002ae0 <HAL_SPI_Receive+0x216>
 8002ada:	2301      	movs	r3, #1
 8002adc:	75fb      	strb	r3, [r7, #23]
 8002ade:	e003      	b.n	8002ae8 <HAL_SPI_Receive+0x21e>
 8002ae0:	68fb      	ldr	r3, [r7, #12]
 8002ae2:	2201      	movs	r2, #1
 8002ae4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002ae8:	68fb      	ldr	r3, [r7, #12]
 8002aea:	2200      	movs	r2, #0
 8002aec:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002af0:	7dfb      	ldrb	r3, [r7, #23]
 8002af2:	4618      	mov	r0, r3
 8002af4:	3718      	adds	r7, #24
 8002af6:	46bd      	mov	sp, r7
 8002af8:	bd80      	pop	{r7, pc}

08002afa <HAL_SPI_TransmitReceive>:
 8002afa:	b580      	push	{r7, lr}
 8002afc:	b08c      	sub	sp, #48	; 0x30
 8002afe:	af00      	add	r7, sp, #0
 8002b00:	60f8      	str	r0, [r7, #12]
 8002b02:	60b9      	str	r1, [r7, #8]
 8002b04:	607a      	str	r2, [r7, #4]
 8002b06:	807b      	strh	r3, [r7, #2]
 8002b08:	2301      	movs	r3, #1
 8002b0a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002b0c:	2300      	movs	r3, #0
 8002b0e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002b12:	68fb      	ldr	r3, [r7, #12]
 8002b14:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8002b18:	2b01      	cmp	r3, #1
 8002b1a:	d101      	bne.n	8002b20 <HAL_SPI_TransmitReceive+0x26>
 8002b1c:	2302      	movs	r3, #2
 8002b1e:	e198      	b.n	8002e52 <HAL_SPI_TransmitReceive+0x358>
 8002b20:	68fb      	ldr	r3, [r7, #12]
 8002b22:	2201      	movs	r2, #1
 8002b24:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002b28:	f7fe fe6a 	bl	8001800 <HAL_GetTick>
 8002b2c:	6278      	str	r0, [r7, #36]	; 0x24
 8002b2e:	68fb      	ldr	r3, [r7, #12]
 8002b30:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002b34:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8002b38:	68fb      	ldr	r3, [r7, #12]
 8002b3a:	685b      	ldr	r3, [r3, #4]
 8002b3c:	61fb      	str	r3, [r7, #28]
 8002b3e:	887b      	ldrh	r3, [r7, #2]
 8002b40:	837b      	strh	r3, [r7, #26]
 8002b42:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8002b46:	2b01      	cmp	r3, #1
 8002b48:	d00f      	beq.n	8002b6a <HAL_SPI_TransmitReceive+0x70>
 8002b4a:	69fb      	ldr	r3, [r7, #28]
 8002b4c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002b50:	d107      	bne.n	8002b62 <HAL_SPI_TransmitReceive+0x68>
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	689b      	ldr	r3, [r3, #8]
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	d103      	bne.n	8002b62 <HAL_SPI_TransmitReceive+0x68>
 8002b5a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8002b5e:	2b04      	cmp	r3, #4
 8002b60:	d003      	beq.n	8002b6a <HAL_SPI_TransmitReceive+0x70>
 8002b62:	2302      	movs	r3, #2
 8002b64:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002b68:	e16d      	b.n	8002e46 <HAL_SPI_TransmitReceive+0x34c>
 8002b6a:	68bb      	ldr	r3, [r7, #8]
 8002b6c:	2b00      	cmp	r3, #0
 8002b6e:	d005      	beq.n	8002b7c <HAL_SPI_TransmitReceive+0x82>
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	d002      	beq.n	8002b7c <HAL_SPI_TransmitReceive+0x82>
 8002b76:	887b      	ldrh	r3, [r7, #2]
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d103      	bne.n	8002b84 <HAL_SPI_TransmitReceive+0x8a>
 8002b7c:	2301      	movs	r3, #1
 8002b7e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002b82:	e160      	b.n	8002e46 <HAL_SPI_TransmitReceive+0x34c>
 8002b84:	68fb      	ldr	r3, [r7, #12]
 8002b86:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002b8a:	b2db      	uxtb	r3, r3
 8002b8c:	2b04      	cmp	r3, #4
 8002b8e:	d003      	beq.n	8002b98 <HAL_SPI_TransmitReceive+0x9e>
 8002b90:	68fb      	ldr	r3, [r7, #12]
 8002b92:	2205      	movs	r2, #5
 8002b94:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002b98:	68fb      	ldr	r3, [r7, #12]
 8002b9a:	2200      	movs	r2, #0
 8002b9c:	655a      	str	r2, [r3, #84]	; 0x54
 8002b9e:	68fb      	ldr	r3, [r7, #12]
 8002ba0:	687a      	ldr	r2, [r7, #4]
 8002ba2:	639a      	str	r2, [r3, #56]	; 0x38
 8002ba4:	68fb      	ldr	r3, [r7, #12]
 8002ba6:	887a      	ldrh	r2, [r7, #2]
 8002ba8:	87da      	strh	r2, [r3, #62]	; 0x3e
 8002baa:	68fb      	ldr	r3, [r7, #12]
 8002bac:	887a      	ldrh	r2, [r7, #2]
 8002bae:	879a      	strh	r2, [r3, #60]	; 0x3c
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	68ba      	ldr	r2, [r7, #8]
 8002bb4:	631a      	str	r2, [r3, #48]	; 0x30
 8002bb6:	68fb      	ldr	r3, [r7, #12]
 8002bb8:	887a      	ldrh	r2, [r7, #2]
 8002bba:	86da      	strh	r2, [r3, #54]	; 0x36
 8002bbc:	68fb      	ldr	r3, [r7, #12]
 8002bbe:	887a      	ldrh	r2, [r7, #2]
 8002bc0:	869a      	strh	r2, [r3, #52]	; 0x34
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	2200      	movs	r2, #0
 8002bc6:	641a      	str	r2, [r3, #64]	; 0x40
 8002bc8:	68fb      	ldr	r3, [r7, #12]
 8002bca:	2200      	movs	r2, #0
 8002bcc:	645a      	str	r2, [r3, #68]	; 0x44
 8002bce:	68fb      	ldr	r3, [r7, #12]
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002bd8:	2b40      	cmp	r3, #64	; 0x40
 8002bda:	d007      	beq.n	8002bec <HAL_SPI_TransmitReceive+0xf2>
 8002bdc:	68fb      	ldr	r3, [r7, #12]
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	681a      	ldr	r2, [r3, #0]
 8002be2:	68fb      	ldr	r3, [r7, #12]
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002bea:	601a      	str	r2, [r3, #0]
 8002bec:	68fb      	ldr	r3, [r7, #12]
 8002bee:	68db      	ldr	r3, [r3, #12]
 8002bf0:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002bf4:	d17c      	bne.n	8002cf0 <HAL_SPI_TransmitReceive+0x1f6>
 8002bf6:	68fb      	ldr	r3, [r7, #12]
 8002bf8:	685b      	ldr	r3, [r3, #4]
 8002bfa:	2b00      	cmp	r3, #0
 8002bfc:	d002      	beq.n	8002c04 <HAL_SPI_TransmitReceive+0x10a>
 8002bfe:	8b7b      	ldrh	r3, [r7, #26]
 8002c00:	2b01      	cmp	r3, #1
 8002c02:	d16a      	bne.n	8002cda <HAL_SPI_TransmitReceive+0x1e0>
 8002c04:	68fb      	ldr	r3, [r7, #12]
 8002c06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c08:	881a      	ldrh	r2, [r3, #0]
 8002c0a:	68fb      	ldr	r3, [r7, #12]
 8002c0c:	681b      	ldr	r3, [r3, #0]
 8002c0e:	60da      	str	r2, [r3, #12]
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c14:	1c9a      	adds	r2, r3, #2
 8002c16:	68fb      	ldr	r3, [r7, #12]
 8002c18:	631a      	str	r2, [r3, #48]	; 0x30
 8002c1a:	68fb      	ldr	r3, [r7, #12]
 8002c1c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002c1e:	b29b      	uxth	r3, r3
 8002c20:	3b01      	subs	r3, #1
 8002c22:	b29a      	uxth	r2, r3
 8002c24:	68fb      	ldr	r3, [r7, #12]
 8002c26:	86da      	strh	r2, [r3, #54]	; 0x36
 8002c28:	e057      	b.n	8002cda <HAL_SPI_TransmitReceive+0x1e0>
 8002c2a:	68fb      	ldr	r3, [r7, #12]
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	689b      	ldr	r3, [r3, #8]
 8002c30:	f003 0302 	and.w	r3, r3, #2
 8002c34:	2b02      	cmp	r3, #2
 8002c36:	d11b      	bne.n	8002c70 <HAL_SPI_TransmitReceive+0x176>
 8002c38:	68fb      	ldr	r3, [r7, #12]
 8002c3a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002c3c:	b29b      	uxth	r3, r3
 8002c3e:	2b00      	cmp	r3, #0
 8002c40:	d016      	beq.n	8002c70 <HAL_SPI_TransmitReceive+0x176>
 8002c42:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c44:	2b01      	cmp	r3, #1
 8002c46:	d113      	bne.n	8002c70 <HAL_SPI_TransmitReceive+0x176>
 8002c48:	68fb      	ldr	r3, [r7, #12]
 8002c4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c4c:	881a      	ldrh	r2, [r3, #0]
 8002c4e:	68fb      	ldr	r3, [r7, #12]
 8002c50:	681b      	ldr	r3, [r3, #0]
 8002c52:	60da      	str	r2, [r3, #12]
 8002c54:	68fb      	ldr	r3, [r7, #12]
 8002c56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c58:	1c9a      	adds	r2, r3, #2
 8002c5a:	68fb      	ldr	r3, [r7, #12]
 8002c5c:	631a      	str	r2, [r3, #48]	; 0x30
 8002c5e:	68fb      	ldr	r3, [r7, #12]
 8002c60:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002c62:	b29b      	uxth	r3, r3
 8002c64:	3b01      	subs	r3, #1
 8002c66:	b29a      	uxth	r2, r3
 8002c68:	68fb      	ldr	r3, [r7, #12]
 8002c6a:	86da      	strh	r2, [r3, #54]	; 0x36
 8002c6c:	2300      	movs	r3, #0
 8002c6e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002c70:	68fb      	ldr	r3, [r7, #12]
 8002c72:	681b      	ldr	r3, [r3, #0]
 8002c74:	689b      	ldr	r3, [r3, #8]
 8002c76:	f003 0301 	and.w	r3, r3, #1
 8002c7a:	2b01      	cmp	r3, #1
 8002c7c:	d119      	bne.n	8002cb2 <HAL_SPI_TransmitReceive+0x1b8>
 8002c7e:	68fb      	ldr	r3, [r7, #12]
 8002c80:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002c82:	b29b      	uxth	r3, r3
 8002c84:	2b00      	cmp	r3, #0
 8002c86:	d014      	beq.n	8002cb2 <HAL_SPI_TransmitReceive+0x1b8>
 8002c88:	68fb      	ldr	r3, [r7, #12]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	68da      	ldr	r2, [r3, #12]
 8002c8e:	68fb      	ldr	r3, [r7, #12]
 8002c90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c92:	b292      	uxth	r2, r2
 8002c94:	801a      	strh	r2, [r3, #0]
 8002c96:	68fb      	ldr	r3, [r7, #12]
 8002c98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c9a:	1c9a      	adds	r2, r3, #2
 8002c9c:	68fb      	ldr	r3, [r7, #12]
 8002c9e:	639a      	str	r2, [r3, #56]	; 0x38
 8002ca0:	68fb      	ldr	r3, [r7, #12]
 8002ca2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002ca4:	b29b      	uxth	r3, r3
 8002ca6:	3b01      	subs	r3, #1
 8002ca8:	b29a      	uxth	r2, r3
 8002caa:	68fb      	ldr	r3, [r7, #12]
 8002cac:	87da      	strh	r2, [r3, #62]	; 0x3e
 8002cae:	2301      	movs	r3, #1
 8002cb0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002cb2:	f7fe fda5 	bl	8001800 <HAL_GetTick>
 8002cb6:	4602      	mov	r2, r0
 8002cb8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002cba:	1ad3      	subs	r3, r2, r3
 8002cbc:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8002cbe:	429a      	cmp	r2, r3
 8002cc0:	d80b      	bhi.n	8002cda <HAL_SPI_TransmitReceive+0x1e0>
 8002cc2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002cc4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002cc8:	d007      	beq.n	8002cda <HAL_SPI_TransmitReceive+0x1e0>
 8002cca:	2303      	movs	r3, #3
 8002ccc:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002cd0:	68fb      	ldr	r3, [r7, #12]
 8002cd2:	2201      	movs	r2, #1
 8002cd4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002cd8:	e0b5      	b.n	8002e46 <HAL_SPI_TransmitReceive+0x34c>
 8002cda:	68fb      	ldr	r3, [r7, #12]
 8002cdc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002cde:	b29b      	uxth	r3, r3
 8002ce0:	2b00      	cmp	r3, #0
 8002ce2:	d1a2      	bne.n	8002c2a <HAL_SPI_TransmitReceive+0x130>
 8002ce4:	68fb      	ldr	r3, [r7, #12]
 8002ce6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002ce8:	b29b      	uxth	r3, r3
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d19d      	bne.n	8002c2a <HAL_SPI_TransmitReceive+0x130>
 8002cee:	e080      	b.n	8002df2 <HAL_SPI_TransmitReceive+0x2f8>
 8002cf0:	68fb      	ldr	r3, [r7, #12]
 8002cf2:	685b      	ldr	r3, [r3, #4]
 8002cf4:	2b00      	cmp	r3, #0
 8002cf6:	d002      	beq.n	8002cfe <HAL_SPI_TransmitReceive+0x204>
 8002cf8:	8b7b      	ldrh	r3, [r7, #26]
 8002cfa:	2b01      	cmp	r3, #1
 8002cfc:	d16f      	bne.n	8002dde <HAL_SPI_TransmitReceive+0x2e4>
 8002cfe:	68fb      	ldr	r3, [r7, #12]
 8002d00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d02:	68fb      	ldr	r3, [r7, #12]
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	330c      	adds	r3, #12
 8002d08:	7812      	ldrb	r2, [r2, #0]
 8002d0a:	701a      	strb	r2, [r3, #0]
 8002d0c:	68fb      	ldr	r3, [r7, #12]
 8002d0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d10:	1c5a      	adds	r2, r3, #1
 8002d12:	68fb      	ldr	r3, [r7, #12]
 8002d14:	631a      	str	r2, [r3, #48]	; 0x30
 8002d16:	68fb      	ldr	r3, [r7, #12]
 8002d18:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002d1a:	b29b      	uxth	r3, r3
 8002d1c:	3b01      	subs	r3, #1
 8002d1e:	b29a      	uxth	r2, r3
 8002d20:	68fb      	ldr	r3, [r7, #12]
 8002d22:	86da      	strh	r2, [r3, #54]	; 0x36
 8002d24:	e05b      	b.n	8002dde <HAL_SPI_TransmitReceive+0x2e4>
 8002d26:	68fb      	ldr	r3, [r7, #12]
 8002d28:	681b      	ldr	r3, [r3, #0]
 8002d2a:	689b      	ldr	r3, [r3, #8]
 8002d2c:	f003 0302 	and.w	r3, r3, #2
 8002d30:	2b02      	cmp	r3, #2
 8002d32:	d11c      	bne.n	8002d6e <HAL_SPI_TransmitReceive+0x274>
 8002d34:	68fb      	ldr	r3, [r7, #12]
 8002d36:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002d38:	b29b      	uxth	r3, r3
 8002d3a:	2b00      	cmp	r3, #0
 8002d3c:	d017      	beq.n	8002d6e <HAL_SPI_TransmitReceive+0x274>
 8002d3e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002d40:	2b01      	cmp	r3, #1
 8002d42:	d114      	bne.n	8002d6e <HAL_SPI_TransmitReceive+0x274>
 8002d44:	68fb      	ldr	r3, [r7, #12]
 8002d46:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d48:	68fb      	ldr	r3, [r7, #12]
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	330c      	adds	r3, #12
 8002d4e:	7812      	ldrb	r2, [r2, #0]
 8002d50:	701a      	strb	r2, [r3, #0]
 8002d52:	68fb      	ldr	r3, [r7, #12]
 8002d54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d56:	1c5a      	adds	r2, r3, #1
 8002d58:	68fb      	ldr	r3, [r7, #12]
 8002d5a:	631a      	str	r2, [r3, #48]	; 0x30
 8002d5c:	68fb      	ldr	r3, [r7, #12]
 8002d5e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002d60:	b29b      	uxth	r3, r3
 8002d62:	3b01      	subs	r3, #1
 8002d64:	b29a      	uxth	r2, r3
 8002d66:	68fb      	ldr	r3, [r7, #12]
 8002d68:	86da      	strh	r2, [r3, #54]	; 0x36
 8002d6a:	2300      	movs	r3, #0
 8002d6c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002d6e:	68fb      	ldr	r3, [r7, #12]
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	689b      	ldr	r3, [r3, #8]
 8002d74:	f003 0301 	and.w	r3, r3, #1
 8002d78:	2b01      	cmp	r3, #1
 8002d7a:	d119      	bne.n	8002db0 <HAL_SPI_TransmitReceive+0x2b6>
 8002d7c:	68fb      	ldr	r3, [r7, #12]
 8002d7e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002d80:	b29b      	uxth	r3, r3
 8002d82:	2b00      	cmp	r3, #0
 8002d84:	d014      	beq.n	8002db0 <HAL_SPI_TransmitReceive+0x2b6>
 8002d86:	68fb      	ldr	r3, [r7, #12]
 8002d88:	681b      	ldr	r3, [r3, #0]
 8002d8a:	68da      	ldr	r2, [r3, #12]
 8002d8c:	68fb      	ldr	r3, [r7, #12]
 8002d8e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d90:	b2d2      	uxtb	r2, r2
 8002d92:	701a      	strb	r2, [r3, #0]
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d98:	1c5a      	adds	r2, r3, #1
 8002d9a:	68fb      	ldr	r3, [r7, #12]
 8002d9c:	639a      	str	r2, [r3, #56]	; 0x38
 8002d9e:	68fb      	ldr	r3, [r7, #12]
 8002da0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002da2:	b29b      	uxth	r3, r3
 8002da4:	3b01      	subs	r3, #1
 8002da6:	b29a      	uxth	r2, r3
 8002da8:	68fb      	ldr	r3, [r7, #12]
 8002daa:	87da      	strh	r2, [r3, #62]	; 0x3e
 8002dac:	2301      	movs	r3, #1
 8002dae:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002db0:	f7fe fd26 	bl	8001800 <HAL_GetTick>
 8002db4:	4602      	mov	r2, r0
 8002db6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002db8:	1ad3      	subs	r3, r2, r3
 8002dba:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8002dbc:	429a      	cmp	r2, r3
 8002dbe:	d803      	bhi.n	8002dc8 <HAL_SPI_TransmitReceive+0x2ce>
 8002dc0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002dc2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002dc6:	d102      	bne.n	8002dce <HAL_SPI_TransmitReceive+0x2d4>
 8002dc8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d107      	bne.n	8002dde <HAL_SPI_TransmitReceive+0x2e4>
 8002dce:	2303      	movs	r3, #3
 8002dd0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002dd4:	68fb      	ldr	r3, [r7, #12]
 8002dd6:	2201      	movs	r2, #1
 8002dd8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002ddc:	e033      	b.n	8002e46 <HAL_SPI_TransmitReceive+0x34c>
 8002dde:	68fb      	ldr	r3, [r7, #12]
 8002de0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002de2:	b29b      	uxth	r3, r3
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	d19e      	bne.n	8002d26 <HAL_SPI_TransmitReceive+0x22c>
 8002de8:	68fb      	ldr	r3, [r7, #12]
 8002dea:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002dec:	b29b      	uxth	r3, r3
 8002dee:	2b00      	cmp	r3, #0
 8002df0:	d199      	bne.n	8002d26 <HAL_SPI_TransmitReceive+0x22c>
 8002df2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002df4:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8002df6:	68f8      	ldr	r0, [r7, #12]
 8002df8:	f000 f90a 	bl	8003010 <SPI_EndRxTxTransaction>
 8002dfc:	4603      	mov	r3, r0
 8002dfe:	2b00      	cmp	r3, #0
 8002e00:	d006      	beq.n	8002e10 <HAL_SPI_TransmitReceive+0x316>
 8002e02:	2301      	movs	r3, #1
 8002e04:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002e08:	68fb      	ldr	r3, [r7, #12]
 8002e0a:	2220      	movs	r2, #32
 8002e0c:	655a      	str	r2, [r3, #84]	; 0x54
 8002e0e:	e01a      	b.n	8002e46 <HAL_SPI_TransmitReceive+0x34c>
 8002e10:	68fb      	ldr	r3, [r7, #12]
 8002e12:	689b      	ldr	r3, [r3, #8]
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	d10a      	bne.n	8002e2e <HAL_SPI_TransmitReceive+0x334>
 8002e18:	2300      	movs	r3, #0
 8002e1a:	617b      	str	r3, [r7, #20]
 8002e1c:	68fb      	ldr	r3, [r7, #12]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	68db      	ldr	r3, [r3, #12]
 8002e22:	617b      	str	r3, [r7, #20]
 8002e24:	68fb      	ldr	r3, [r7, #12]
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	689b      	ldr	r3, [r3, #8]
 8002e2a:	617b      	str	r3, [r7, #20]
 8002e2c:	697b      	ldr	r3, [r7, #20]
 8002e2e:	68fb      	ldr	r3, [r7, #12]
 8002e30:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	d003      	beq.n	8002e3e <HAL_SPI_TransmitReceive+0x344>
 8002e36:	2301      	movs	r3, #1
 8002e38:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002e3c:	e003      	b.n	8002e46 <HAL_SPI_TransmitReceive+0x34c>
 8002e3e:	68fb      	ldr	r3, [r7, #12]
 8002e40:	2201      	movs	r2, #1
 8002e42:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002e46:	68fb      	ldr	r3, [r7, #12]
 8002e48:	2200      	movs	r2, #0
 8002e4a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002e4e:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8002e52:	4618      	mov	r0, r3
 8002e54:	3730      	adds	r7, #48	; 0x30
 8002e56:	46bd      	mov	sp, r7
 8002e58:	bd80      	pop	{r7, pc}
	...

08002e5c <SPI_WaitFlagStateUntilTimeout>:
 8002e5c:	b580      	push	{r7, lr}
 8002e5e:	b088      	sub	sp, #32
 8002e60:	af00      	add	r7, sp, #0
 8002e62:	60f8      	str	r0, [r7, #12]
 8002e64:	60b9      	str	r1, [r7, #8]
 8002e66:	603b      	str	r3, [r7, #0]
 8002e68:	4613      	mov	r3, r2
 8002e6a:	71fb      	strb	r3, [r7, #7]
 8002e6c:	f7fe fcc8 	bl	8001800 <HAL_GetTick>
 8002e70:	4602      	mov	r2, r0
 8002e72:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002e74:	1a9b      	subs	r3, r3, r2
 8002e76:	683a      	ldr	r2, [r7, #0]
 8002e78:	4413      	add	r3, r2
 8002e7a:	61fb      	str	r3, [r7, #28]
 8002e7c:	f7fe fcc0 	bl	8001800 <HAL_GetTick>
 8002e80:	61b8      	str	r0, [r7, #24]
 8002e82:	4b39      	ldr	r3, [pc, #228]	; (8002f68 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	015b      	lsls	r3, r3, #5
 8002e88:	0d1b      	lsrs	r3, r3, #20
 8002e8a:	69fa      	ldr	r2, [r7, #28]
 8002e8c:	fb02 f303 	mul.w	r3, r2, r3
 8002e90:	617b      	str	r3, [r7, #20]
 8002e92:	e054      	b.n	8002f3e <SPI_WaitFlagStateUntilTimeout+0xe2>
 8002e94:	683b      	ldr	r3, [r7, #0]
 8002e96:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002e9a:	d050      	beq.n	8002f3e <SPI_WaitFlagStateUntilTimeout+0xe2>
 8002e9c:	f7fe fcb0 	bl	8001800 <HAL_GetTick>
 8002ea0:	4602      	mov	r2, r0
 8002ea2:	69bb      	ldr	r3, [r7, #24]
 8002ea4:	1ad3      	subs	r3, r2, r3
 8002ea6:	69fa      	ldr	r2, [r7, #28]
 8002ea8:	429a      	cmp	r2, r3
 8002eaa:	d902      	bls.n	8002eb2 <SPI_WaitFlagStateUntilTimeout+0x56>
 8002eac:	69fb      	ldr	r3, [r7, #28]
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	d13d      	bne.n	8002f2e <SPI_WaitFlagStateUntilTimeout+0xd2>
 8002eb2:	68fb      	ldr	r3, [r7, #12]
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	685a      	ldr	r2, [r3, #4]
 8002eb8:	68fb      	ldr	r3, [r7, #12]
 8002eba:	681b      	ldr	r3, [r3, #0]
 8002ebc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8002ec0:	605a      	str	r2, [r3, #4]
 8002ec2:	68fb      	ldr	r3, [r7, #12]
 8002ec4:	685b      	ldr	r3, [r3, #4]
 8002ec6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002eca:	d111      	bne.n	8002ef0 <SPI_WaitFlagStateUntilTimeout+0x94>
 8002ecc:	68fb      	ldr	r3, [r7, #12]
 8002ece:	689b      	ldr	r3, [r3, #8]
 8002ed0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002ed4:	d004      	beq.n	8002ee0 <SPI_WaitFlagStateUntilTimeout+0x84>
 8002ed6:	68fb      	ldr	r3, [r7, #12]
 8002ed8:	689b      	ldr	r3, [r3, #8]
 8002eda:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002ede:	d107      	bne.n	8002ef0 <SPI_WaitFlagStateUntilTimeout+0x94>
 8002ee0:	68fb      	ldr	r3, [r7, #12]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	681a      	ldr	r2, [r3, #0]
 8002ee6:	68fb      	ldr	r3, [r7, #12]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002eee:	601a      	str	r2, [r3, #0]
 8002ef0:	68fb      	ldr	r3, [r7, #12]
 8002ef2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002ef4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002ef8:	d10f      	bne.n	8002f1a <SPI_WaitFlagStateUntilTimeout+0xbe>
 8002efa:	68fb      	ldr	r3, [r7, #12]
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	681a      	ldr	r2, [r3, #0]
 8002f00:	68fb      	ldr	r3, [r7, #12]
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002f08:	601a      	str	r2, [r3, #0]
 8002f0a:	68fb      	ldr	r3, [r7, #12]
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	681a      	ldr	r2, [r3, #0]
 8002f10:	68fb      	ldr	r3, [r7, #12]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002f18:	601a      	str	r2, [r3, #0]
 8002f1a:	68fb      	ldr	r3, [r7, #12]
 8002f1c:	2201      	movs	r2, #1
 8002f1e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002f22:	68fb      	ldr	r3, [r7, #12]
 8002f24:	2200      	movs	r2, #0
 8002f26:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002f2a:	2303      	movs	r3, #3
 8002f2c:	e017      	b.n	8002f5e <SPI_WaitFlagStateUntilTimeout+0x102>
 8002f2e:	697b      	ldr	r3, [r7, #20]
 8002f30:	2b00      	cmp	r3, #0
 8002f32:	d101      	bne.n	8002f38 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8002f34:	2300      	movs	r3, #0
 8002f36:	61fb      	str	r3, [r7, #28]
 8002f38:	697b      	ldr	r3, [r7, #20]
 8002f3a:	3b01      	subs	r3, #1
 8002f3c:	617b      	str	r3, [r7, #20]
 8002f3e:	68fb      	ldr	r3, [r7, #12]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	689a      	ldr	r2, [r3, #8]
 8002f44:	68bb      	ldr	r3, [r7, #8]
 8002f46:	4013      	ands	r3, r2
 8002f48:	68ba      	ldr	r2, [r7, #8]
 8002f4a:	429a      	cmp	r2, r3
 8002f4c:	bf0c      	ite	eq
 8002f4e:	2301      	moveq	r3, #1
 8002f50:	2300      	movne	r3, #0
 8002f52:	b2db      	uxtb	r3, r3
 8002f54:	461a      	mov	r2, r3
 8002f56:	79fb      	ldrb	r3, [r7, #7]
 8002f58:	429a      	cmp	r2, r3
 8002f5a:	d19b      	bne.n	8002e94 <SPI_WaitFlagStateUntilTimeout+0x38>
 8002f5c:	2300      	movs	r3, #0
 8002f5e:	4618      	mov	r0, r3
 8002f60:	3720      	adds	r7, #32
 8002f62:	46bd      	mov	sp, r7
 8002f64:	bd80      	pop	{r7, pc}
 8002f66:	bf00      	nop
 8002f68:	20000004 	.word	0x20000004

08002f6c <SPI_EndRxTransaction>:
 8002f6c:	b580      	push	{r7, lr}
 8002f6e:	b086      	sub	sp, #24
 8002f70:	af02      	add	r7, sp, #8
 8002f72:	60f8      	str	r0, [r7, #12]
 8002f74:	60b9      	str	r1, [r7, #8]
 8002f76:	607a      	str	r2, [r7, #4]
 8002f78:	68fb      	ldr	r3, [r7, #12]
 8002f7a:	685b      	ldr	r3, [r3, #4]
 8002f7c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002f80:	d111      	bne.n	8002fa6 <SPI_EndRxTransaction+0x3a>
 8002f82:	68fb      	ldr	r3, [r7, #12]
 8002f84:	689b      	ldr	r3, [r3, #8]
 8002f86:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002f8a:	d004      	beq.n	8002f96 <SPI_EndRxTransaction+0x2a>
 8002f8c:	68fb      	ldr	r3, [r7, #12]
 8002f8e:	689b      	ldr	r3, [r3, #8]
 8002f90:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002f94:	d107      	bne.n	8002fa6 <SPI_EndRxTransaction+0x3a>
 8002f96:	68fb      	ldr	r3, [r7, #12]
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	681a      	ldr	r2, [r3, #0]
 8002f9c:	68fb      	ldr	r3, [r7, #12]
 8002f9e:	681b      	ldr	r3, [r3, #0]
 8002fa0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002fa4:	601a      	str	r2, [r3, #0]
 8002fa6:	68fb      	ldr	r3, [r7, #12]
 8002fa8:	685b      	ldr	r3, [r3, #4]
 8002faa:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002fae:	d117      	bne.n	8002fe0 <SPI_EndRxTransaction+0x74>
 8002fb0:	68fb      	ldr	r3, [r7, #12]
 8002fb2:	689b      	ldr	r3, [r3, #8]
 8002fb4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002fb8:	d112      	bne.n	8002fe0 <SPI_EndRxTransaction+0x74>
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	9300      	str	r3, [sp, #0]
 8002fbe:	68bb      	ldr	r3, [r7, #8]
 8002fc0:	2200      	movs	r2, #0
 8002fc2:	2101      	movs	r1, #1
 8002fc4:	68f8      	ldr	r0, [r7, #12]
 8002fc6:	f7ff ff49 	bl	8002e5c <SPI_WaitFlagStateUntilTimeout>
 8002fca:	4603      	mov	r3, r0
 8002fcc:	2b00      	cmp	r3, #0
 8002fce:	d01a      	beq.n	8003006 <SPI_EndRxTransaction+0x9a>
 8002fd0:	68fb      	ldr	r3, [r7, #12]
 8002fd2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002fd4:	f043 0220 	orr.w	r2, r3, #32
 8002fd8:	68fb      	ldr	r3, [r7, #12]
 8002fda:	655a      	str	r2, [r3, #84]	; 0x54
 8002fdc:	2303      	movs	r3, #3
 8002fde:	e013      	b.n	8003008 <SPI_EndRxTransaction+0x9c>
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	9300      	str	r3, [sp, #0]
 8002fe4:	68bb      	ldr	r3, [r7, #8]
 8002fe6:	2200      	movs	r2, #0
 8002fe8:	2180      	movs	r1, #128	; 0x80
 8002fea:	68f8      	ldr	r0, [r7, #12]
 8002fec:	f7ff ff36 	bl	8002e5c <SPI_WaitFlagStateUntilTimeout>
 8002ff0:	4603      	mov	r3, r0
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d007      	beq.n	8003006 <SPI_EndRxTransaction+0x9a>
 8002ff6:	68fb      	ldr	r3, [r7, #12]
 8002ff8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002ffa:	f043 0220 	orr.w	r2, r3, #32
 8002ffe:	68fb      	ldr	r3, [r7, #12]
 8003000:	655a      	str	r2, [r3, #84]	; 0x54
 8003002:	2303      	movs	r3, #3
 8003004:	e000      	b.n	8003008 <SPI_EndRxTransaction+0x9c>
 8003006:	2300      	movs	r3, #0
 8003008:	4618      	mov	r0, r3
 800300a:	3710      	adds	r7, #16
 800300c:	46bd      	mov	sp, r7
 800300e:	bd80      	pop	{r7, pc}

08003010 <SPI_EndRxTxTransaction>:
 8003010:	b580      	push	{r7, lr}
 8003012:	b086      	sub	sp, #24
 8003014:	af02      	add	r7, sp, #8
 8003016:	60f8      	str	r0, [r7, #12]
 8003018:	60b9      	str	r1, [r7, #8]
 800301a:	607a      	str	r2, [r7, #4]
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	9300      	str	r3, [sp, #0]
 8003020:	68bb      	ldr	r3, [r7, #8]
 8003022:	2200      	movs	r2, #0
 8003024:	2180      	movs	r1, #128	; 0x80
 8003026:	68f8      	ldr	r0, [r7, #12]
 8003028:	f7ff ff18 	bl	8002e5c <SPI_WaitFlagStateUntilTimeout>
 800302c:	4603      	mov	r3, r0
 800302e:	2b00      	cmp	r3, #0
 8003030:	d007      	beq.n	8003042 <SPI_EndRxTxTransaction+0x32>
 8003032:	68fb      	ldr	r3, [r7, #12]
 8003034:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003036:	f043 0220 	orr.w	r2, r3, #32
 800303a:	68fb      	ldr	r3, [r7, #12]
 800303c:	655a      	str	r2, [r3, #84]	; 0x54
 800303e:	2303      	movs	r3, #3
 8003040:	e000      	b.n	8003044 <SPI_EndRxTxTransaction+0x34>
 8003042:	2300      	movs	r3, #0
 8003044:	4618      	mov	r0, r3
 8003046:	3710      	adds	r7, #16
 8003048:	46bd      	mov	sp, r7
 800304a:	bd80      	pop	{r7, pc}

0800304c <HAL_TIM_Base_Init>:
 800304c:	b580      	push	{r7, lr}
 800304e:	b082      	sub	sp, #8
 8003050:	af00      	add	r7, sp, #0
 8003052:	6078      	str	r0, [r7, #4]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	2b00      	cmp	r3, #0
 8003058:	d101      	bne.n	800305e <HAL_TIM_Base_Init+0x12>
 800305a:	2301      	movs	r3, #1
 800305c:	e041      	b.n	80030e2 <HAL_TIM_Base_Init+0x96>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003064:	b2db      	uxtb	r3, r3
 8003066:	2b00      	cmp	r3, #0
 8003068:	d106      	bne.n	8003078 <HAL_TIM_Base_Init+0x2c>
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	2200      	movs	r2, #0
 800306e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003072:	6878      	ldr	r0, [r7, #4]
 8003074:	f7fe fafa 	bl	800166c <HAL_TIM_Base_MspInit>
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	2202      	movs	r2, #2
 800307c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	681a      	ldr	r2, [r3, #0]
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	3304      	adds	r3, #4
 8003088:	4619      	mov	r1, r3
 800308a:	4610      	mov	r0, r2
 800308c:	f000 faac 	bl	80035e8 <TIM_Base_SetConfig>
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	2201      	movs	r2, #1
 8003094:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	2201      	movs	r2, #1
 800309c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	2201      	movs	r2, #1
 80030a4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	2201      	movs	r2, #1
 80030ac:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80030b0:	687b      	ldr	r3, [r7, #4]
 80030b2:	2201      	movs	r2, #1
 80030b4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	2201      	movs	r2, #1
 80030bc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	2201      	movs	r2, #1
 80030c4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	2201      	movs	r2, #1
 80030cc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	2201      	movs	r2, #1
 80030d4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	2201      	movs	r2, #1
 80030dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80030e0:	2300      	movs	r3, #0
 80030e2:	4618      	mov	r0, r3
 80030e4:	3708      	adds	r7, #8
 80030e6:	46bd      	mov	sp, r7
 80030e8:	bd80      	pop	{r7, pc}

080030ea <HAL_TIM_PWM_Init>:
 80030ea:	b580      	push	{r7, lr}
 80030ec:	b082      	sub	sp, #8
 80030ee:	af00      	add	r7, sp, #0
 80030f0:	6078      	str	r0, [r7, #4]
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	d101      	bne.n	80030fc <HAL_TIM_PWM_Init+0x12>
 80030f8:	2301      	movs	r3, #1
 80030fa:	e041      	b.n	8003180 <HAL_TIM_PWM_Init+0x96>
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003102:	b2db      	uxtb	r3, r3
 8003104:	2b00      	cmp	r3, #0
 8003106:	d106      	bne.n	8003116 <HAL_TIM_PWM_Init+0x2c>
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	2200      	movs	r2, #0
 800310c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003110:	6878      	ldr	r0, [r7, #4]
 8003112:	f000 f839 	bl	8003188 <HAL_TIM_PWM_MspInit>
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	2202      	movs	r2, #2
 800311a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	681a      	ldr	r2, [r3, #0]
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	3304      	adds	r3, #4
 8003126:	4619      	mov	r1, r3
 8003128:	4610      	mov	r0, r2
 800312a:	f000 fa5d 	bl	80035e8 <TIM_Base_SetConfig>
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	2201      	movs	r2, #1
 8003132:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	2201      	movs	r2, #1
 800313a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	2201      	movs	r2, #1
 8003142:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003146:	687b      	ldr	r3, [r7, #4]
 8003148:	2201      	movs	r2, #1
 800314a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	2201      	movs	r2, #1
 8003152:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	2201      	movs	r2, #1
 800315a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	2201      	movs	r2, #1
 8003162:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	2201      	movs	r2, #1
 800316a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	2201      	movs	r2, #1
 8003172:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	2201      	movs	r2, #1
 800317a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800317e:	2300      	movs	r3, #0
 8003180:	4618      	mov	r0, r3
 8003182:	3708      	adds	r7, #8
 8003184:	46bd      	mov	sp, r7
 8003186:	bd80      	pop	{r7, pc}

08003188 <HAL_TIM_PWM_MspInit>:
 8003188:	b480      	push	{r7}
 800318a:	b083      	sub	sp, #12
 800318c:	af00      	add	r7, sp, #0
 800318e:	6078      	str	r0, [r7, #4]
 8003190:	bf00      	nop
 8003192:	370c      	adds	r7, #12
 8003194:	46bd      	mov	sp, r7
 8003196:	bc80      	pop	{r7}
 8003198:	4770      	bx	lr
	...

0800319c <HAL_TIM_PWM_Start>:
 800319c:	b580      	push	{r7, lr}
 800319e:	b084      	sub	sp, #16
 80031a0:	af00      	add	r7, sp, #0
 80031a2:	6078      	str	r0, [r7, #4]
 80031a4:	6039      	str	r1, [r7, #0]
 80031a6:	683b      	ldr	r3, [r7, #0]
 80031a8:	2b00      	cmp	r3, #0
 80031aa:	d109      	bne.n	80031c0 <HAL_TIM_PWM_Start+0x24>
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80031b2:	b2db      	uxtb	r3, r3
 80031b4:	2b01      	cmp	r3, #1
 80031b6:	bf14      	ite	ne
 80031b8:	2301      	movne	r3, #1
 80031ba:	2300      	moveq	r3, #0
 80031bc:	b2db      	uxtb	r3, r3
 80031be:	e022      	b.n	8003206 <HAL_TIM_PWM_Start+0x6a>
 80031c0:	683b      	ldr	r3, [r7, #0]
 80031c2:	2b04      	cmp	r3, #4
 80031c4:	d109      	bne.n	80031da <HAL_TIM_PWM_Start+0x3e>
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80031cc:	b2db      	uxtb	r3, r3
 80031ce:	2b01      	cmp	r3, #1
 80031d0:	bf14      	ite	ne
 80031d2:	2301      	movne	r3, #1
 80031d4:	2300      	moveq	r3, #0
 80031d6:	b2db      	uxtb	r3, r3
 80031d8:	e015      	b.n	8003206 <HAL_TIM_PWM_Start+0x6a>
 80031da:	683b      	ldr	r3, [r7, #0]
 80031dc:	2b08      	cmp	r3, #8
 80031de:	d109      	bne.n	80031f4 <HAL_TIM_PWM_Start+0x58>
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80031e6:	b2db      	uxtb	r3, r3
 80031e8:	2b01      	cmp	r3, #1
 80031ea:	bf14      	ite	ne
 80031ec:	2301      	movne	r3, #1
 80031ee:	2300      	moveq	r3, #0
 80031f0:	b2db      	uxtb	r3, r3
 80031f2:	e008      	b.n	8003206 <HAL_TIM_PWM_Start+0x6a>
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80031fa:	b2db      	uxtb	r3, r3
 80031fc:	2b01      	cmp	r3, #1
 80031fe:	bf14      	ite	ne
 8003200:	2301      	movne	r3, #1
 8003202:	2300      	moveq	r3, #0
 8003204:	b2db      	uxtb	r3, r3
 8003206:	2b00      	cmp	r3, #0
 8003208:	d001      	beq.n	800320e <HAL_TIM_PWM_Start+0x72>
 800320a:	2301      	movs	r3, #1
 800320c:	e059      	b.n	80032c2 <HAL_TIM_PWM_Start+0x126>
 800320e:	683b      	ldr	r3, [r7, #0]
 8003210:	2b00      	cmp	r3, #0
 8003212:	d104      	bne.n	800321e <HAL_TIM_PWM_Start+0x82>
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	2202      	movs	r2, #2
 8003218:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800321c:	e013      	b.n	8003246 <HAL_TIM_PWM_Start+0xaa>
 800321e:	683b      	ldr	r3, [r7, #0]
 8003220:	2b04      	cmp	r3, #4
 8003222:	d104      	bne.n	800322e <HAL_TIM_PWM_Start+0x92>
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	2202      	movs	r2, #2
 8003228:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800322c:	e00b      	b.n	8003246 <HAL_TIM_PWM_Start+0xaa>
 800322e:	683b      	ldr	r3, [r7, #0]
 8003230:	2b08      	cmp	r3, #8
 8003232:	d104      	bne.n	800323e <HAL_TIM_PWM_Start+0xa2>
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	2202      	movs	r2, #2
 8003238:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800323c:	e003      	b.n	8003246 <HAL_TIM_PWM_Start+0xaa>
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	2202      	movs	r2, #2
 8003242:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	2201      	movs	r2, #1
 800324c:	6839      	ldr	r1, [r7, #0]
 800324e:	4618      	mov	r0, r3
 8003250:	f000 fc40 	bl	8003ad4 <TIM_CCxChannelCmd>
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	4a1c      	ldr	r2, [pc, #112]	; (80032cc <HAL_TIM_PWM_Start+0x130>)
 800325a:	4293      	cmp	r3, r2
 800325c:	d107      	bne.n	800326e <HAL_TIM_PWM_Start+0xd2>
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800326c:	645a      	str	r2, [r3, #68]	; 0x44
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	4a16      	ldr	r2, [pc, #88]	; (80032cc <HAL_TIM_PWM_Start+0x130>)
 8003274:	4293      	cmp	r3, r2
 8003276:	d009      	beq.n	800328c <HAL_TIM_PWM_Start+0xf0>
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003280:	d004      	beq.n	800328c <HAL_TIM_PWM_Start+0xf0>
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	681b      	ldr	r3, [r3, #0]
 8003286:	4a12      	ldr	r2, [pc, #72]	; (80032d0 <HAL_TIM_PWM_Start+0x134>)
 8003288:	4293      	cmp	r3, r2
 800328a:	d111      	bne.n	80032b0 <HAL_TIM_PWM_Start+0x114>
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	689b      	ldr	r3, [r3, #8]
 8003292:	f003 0307 	and.w	r3, r3, #7
 8003296:	60fb      	str	r3, [r7, #12]
 8003298:	68fb      	ldr	r3, [r7, #12]
 800329a:	2b06      	cmp	r3, #6
 800329c:	d010      	beq.n	80032c0 <HAL_TIM_PWM_Start+0x124>
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	681b      	ldr	r3, [r3, #0]
 80032a2:	681a      	ldr	r2, [r3, #0]
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	f042 0201 	orr.w	r2, r2, #1
 80032ac:	601a      	str	r2, [r3, #0]
 80032ae:	e007      	b.n	80032c0 <HAL_TIM_PWM_Start+0x124>
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	681a      	ldr	r2, [r3, #0]
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	681b      	ldr	r3, [r3, #0]
 80032ba:	f042 0201 	orr.w	r2, r2, #1
 80032be:	601a      	str	r2, [r3, #0]
 80032c0:	2300      	movs	r3, #0
 80032c2:	4618      	mov	r0, r3
 80032c4:	3710      	adds	r7, #16
 80032c6:	46bd      	mov	sp, r7
 80032c8:	bd80      	pop	{r7, pc}
 80032ca:	bf00      	nop
 80032cc:	40012c00 	.word	0x40012c00
 80032d0:	40000400 	.word	0x40000400

080032d4 <HAL_TIM_PWM_ConfigChannel>:
 80032d4:	b580      	push	{r7, lr}
 80032d6:	b086      	sub	sp, #24
 80032d8:	af00      	add	r7, sp, #0
 80032da:	60f8      	str	r0, [r7, #12]
 80032dc:	60b9      	str	r1, [r7, #8]
 80032de:	607a      	str	r2, [r7, #4]
 80032e0:	2300      	movs	r3, #0
 80032e2:	75fb      	strb	r3, [r7, #23]
 80032e4:	68fb      	ldr	r3, [r7, #12]
 80032e6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80032ea:	2b01      	cmp	r3, #1
 80032ec:	d101      	bne.n	80032f2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80032ee:	2302      	movs	r3, #2
 80032f0:	e0ae      	b.n	8003450 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	2201      	movs	r2, #1
 80032f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	2b0c      	cmp	r3, #12
 80032fe:	f200 809f 	bhi.w	8003440 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8003302:	a201      	add	r2, pc, #4	; (adr r2, 8003308 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8003304:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003308:	0800333d 	.word	0x0800333d
 800330c:	08003441 	.word	0x08003441
 8003310:	08003441 	.word	0x08003441
 8003314:	08003441 	.word	0x08003441
 8003318:	0800337d 	.word	0x0800337d
 800331c:	08003441 	.word	0x08003441
 8003320:	08003441 	.word	0x08003441
 8003324:	08003441 	.word	0x08003441
 8003328:	080033bf 	.word	0x080033bf
 800332c:	08003441 	.word	0x08003441
 8003330:	08003441 	.word	0x08003441
 8003334:	08003441 	.word	0x08003441
 8003338:	080033ff 	.word	0x080033ff
 800333c:	68fb      	ldr	r3, [r7, #12]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	68b9      	ldr	r1, [r7, #8]
 8003342:	4618      	mov	r0, r3
 8003344:	f000 f9a8 	bl	8003698 <TIM_OC1_SetConfig>
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	681b      	ldr	r3, [r3, #0]
 800334c:	699a      	ldr	r2, [r3, #24]
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	f042 0208 	orr.w	r2, r2, #8
 8003356:	619a      	str	r2, [r3, #24]
 8003358:	68fb      	ldr	r3, [r7, #12]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	699a      	ldr	r2, [r3, #24]
 800335e:	68fb      	ldr	r3, [r7, #12]
 8003360:	681b      	ldr	r3, [r3, #0]
 8003362:	f022 0204 	bic.w	r2, r2, #4
 8003366:	619a      	str	r2, [r3, #24]
 8003368:	68fb      	ldr	r3, [r7, #12]
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	6999      	ldr	r1, [r3, #24]
 800336e:	68bb      	ldr	r3, [r7, #8]
 8003370:	691a      	ldr	r2, [r3, #16]
 8003372:	68fb      	ldr	r3, [r7, #12]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	430a      	orrs	r2, r1
 8003378:	619a      	str	r2, [r3, #24]
 800337a:	e064      	b.n	8003446 <HAL_TIM_PWM_ConfigChannel+0x172>
 800337c:	68fb      	ldr	r3, [r7, #12]
 800337e:	681b      	ldr	r3, [r3, #0]
 8003380:	68b9      	ldr	r1, [r7, #8]
 8003382:	4618      	mov	r0, r3
 8003384:	f000 f9ee 	bl	8003764 <TIM_OC2_SetConfig>
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	699a      	ldr	r2, [r3, #24]
 800338e:	68fb      	ldr	r3, [r7, #12]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003396:	619a      	str	r2, [r3, #24]
 8003398:	68fb      	ldr	r3, [r7, #12]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	699a      	ldr	r2, [r3, #24]
 800339e:	68fb      	ldr	r3, [r7, #12]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80033a6:	619a      	str	r2, [r3, #24]
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	6999      	ldr	r1, [r3, #24]
 80033ae:	68bb      	ldr	r3, [r7, #8]
 80033b0:	691b      	ldr	r3, [r3, #16]
 80033b2:	021a      	lsls	r2, r3, #8
 80033b4:	68fb      	ldr	r3, [r7, #12]
 80033b6:	681b      	ldr	r3, [r3, #0]
 80033b8:	430a      	orrs	r2, r1
 80033ba:	619a      	str	r2, [r3, #24]
 80033bc:	e043      	b.n	8003446 <HAL_TIM_PWM_ConfigChannel+0x172>
 80033be:	68fb      	ldr	r3, [r7, #12]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	68b9      	ldr	r1, [r7, #8]
 80033c4:	4618      	mov	r0, r3
 80033c6:	f000 fa37 	bl	8003838 <TIM_OC3_SetConfig>
 80033ca:	68fb      	ldr	r3, [r7, #12]
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	69da      	ldr	r2, [r3, #28]
 80033d0:	68fb      	ldr	r3, [r7, #12]
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	f042 0208 	orr.w	r2, r2, #8
 80033d8:	61da      	str	r2, [r3, #28]
 80033da:	68fb      	ldr	r3, [r7, #12]
 80033dc:	681b      	ldr	r3, [r3, #0]
 80033de:	69da      	ldr	r2, [r3, #28]
 80033e0:	68fb      	ldr	r3, [r7, #12]
 80033e2:	681b      	ldr	r3, [r3, #0]
 80033e4:	f022 0204 	bic.w	r2, r2, #4
 80033e8:	61da      	str	r2, [r3, #28]
 80033ea:	68fb      	ldr	r3, [r7, #12]
 80033ec:	681b      	ldr	r3, [r3, #0]
 80033ee:	69d9      	ldr	r1, [r3, #28]
 80033f0:	68bb      	ldr	r3, [r7, #8]
 80033f2:	691a      	ldr	r2, [r3, #16]
 80033f4:	68fb      	ldr	r3, [r7, #12]
 80033f6:	681b      	ldr	r3, [r3, #0]
 80033f8:	430a      	orrs	r2, r1
 80033fa:	61da      	str	r2, [r3, #28]
 80033fc:	e023      	b.n	8003446 <HAL_TIM_PWM_ConfigChannel+0x172>
 80033fe:	68fb      	ldr	r3, [r7, #12]
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	68b9      	ldr	r1, [r7, #8]
 8003404:	4618      	mov	r0, r3
 8003406:	f000 fa81 	bl	800390c <TIM_OC4_SetConfig>
 800340a:	68fb      	ldr	r3, [r7, #12]
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	69da      	ldr	r2, [r3, #28]
 8003410:	68fb      	ldr	r3, [r7, #12]
 8003412:	681b      	ldr	r3, [r3, #0]
 8003414:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003418:	61da      	str	r2, [r3, #28]
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	69da      	ldr	r2, [r3, #28]
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003428:	61da      	str	r2, [r3, #28]
 800342a:	68fb      	ldr	r3, [r7, #12]
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	69d9      	ldr	r1, [r3, #28]
 8003430:	68bb      	ldr	r3, [r7, #8]
 8003432:	691b      	ldr	r3, [r3, #16]
 8003434:	021a      	lsls	r2, r3, #8
 8003436:	68fb      	ldr	r3, [r7, #12]
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	430a      	orrs	r2, r1
 800343c:	61da      	str	r2, [r3, #28]
 800343e:	e002      	b.n	8003446 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003440:	2301      	movs	r3, #1
 8003442:	75fb      	strb	r3, [r7, #23]
 8003444:	bf00      	nop
 8003446:	68fb      	ldr	r3, [r7, #12]
 8003448:	2200      	movs	r2, #0
 800344a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800344e:	7dfb      	ldrb	r3, [r7, #23]
 8003450:	4618      	mov	r0, r3
 8003452:	3718      	adds	r7, #24
 8003454:	46bd      	mov	sp, r7
 8003456:	bd80      	pop	{r7, pc}

08003458 <HAL_TIM_ConfigClockSource>:
 8003458:	b580      	push	{r7, lr}
 800345a:	b084      	sub	sp, #16
 800345c:	af00      	add	r7, sp, #0
 800345e:	6078      	str	r0, [r7, #4]
 8003460:	6039      	str	r1, [r7, #0]
 8003462:	2300      	movs	r3, #0
 8003464:	73fb      	strb	r3, [r7, #15]
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800346c:	2b01      	cmp	r3, #1
 800346e:	d101      	bne.n	8003474 <HAL_TIM_ConfigClockSource+0x1c>
 8003470:	2302      	movs	r3, #2
 8003472:	e0b4      	b.n	80035de <HAL_TIM_ConfigClockSource+0x186>
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	2201      	movs	r2, #1
 8003478:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	2202      	movs	r2, #2
 8003480:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	681b      	ldr	r3, [r3, #0]
 8003488:	689b      	ldr	r3, [r3, #8]
 800348a:	60bb      	str	r3, [r7, #8]
 800348c:	68bb      	ldr	r3, [r7, #8]
 800348e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8003492:	60bb      	str	r3, [r7, #8]
 8003494:	68bb      	ldr	r3, [r7, #8]
 8003496:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800349a:	60bb      	str	r3, [r7, #8]
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	68ba      	ldr	r2, [r7, #8]
 80034a2:	609a      	str	r2, [r3, #8]
 80034a4:	683b      	ldr	r3, [r7, #0]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80034ac:	d03e      	beq.n	800352c <HAL_TIM_ConfigClockSource+0xd4>
 80034ae:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80034b2:	f200 8087 	bhi.w	80035c4 <HAL_TIM_ConfigClockSource+0x16c>
 80034b6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80034ba:	f000 8086 	beq.w	80035ca <HAL_TIM_ConfigClockSource+0x172>
 80034be:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80034c2:	d87f      	bhi.n	80035c4 <HAL_TIM_ConfigClockSource+0x16c>
 80034c4:	2b70      	cmp	r3, #112	; 0x70
 80034c6:	d01a      	beq.n	80034fe <HAL_TIM_ConfigClockSource+0xa6>
 80034c8:	2b70      	cmp	r3, #112	; 0x70
 80034ca:	d87b      	bhi.n	80035c4 <HAL_TIM_ConfigClockSource+0x16c>
 80034cc:	2b60      	cmp	r3, #96	; 0x60
 80034ce:	d050      	beq.n	8003572 <HAL_TIM_ConfigClockSource+0x11a>
 80034d0:	2b60      	cmp	r3, #96	; 0x60
 80034d2:	d877      	bhi.n	80035c4 <HAL_TIM_ConfigClockSource+0x16c>
 80034d4:	2b50      	cmp	r3, #80	; 0x50
 80034d6:	d03c      	beq.n	8003552 <HAL_TIM_ConfigClockSource+0xfa>
 80034d8:	2b50      	cmp	r3, #80	; 0x50
 80034da:	d873      	bhi.n	80035c4 <HAL_TIM_ConfigClockSource+0x16c>
 80034dc:	2b40      	cmp	r3, #64	; 0x40
 80034de:	d058      	beq.n	8003592 <HAL_TIM_ConfigClockSource+0x13a>
 80034e0:	2b40      	cmp	r3, #64	; 0x40
 80034e2:	d86f      	bhi.n	80035c4 <HAL_TIM_ConfigClockSource+0x16c>
 80034e4:	2b30      	cmp	r3, #48	; 0x30
 80034e6:	d064      	beq.n	80035b2 <HAL_TIM_ConfigClockSource+0x15a>
 80034e8:	2b30      	cmp	r3, #48	; 0x30
 80034ea:	d86b      	bhi.n	80035c4 <HAL_TIM_ConfigClockSource+0x16c>
 80034ec:	2b20      	cmp	r3, #32
 80034ee:	d060      	beq.n	80035b2 <HAL_TIM_ConfigClockSource+0x15a>
 80034f0:	2b20      	cmp	r3, #32
 80034f2:	d867      	bhi.n	80035c4 <HAL_TIM_ConfigClockSource+0x16c>
 80034f4:	2b00      	cmp	r3, #0
 80034f6:	d05c      	beq.n	80035b2 <HAL_TIM_ConfigClockSource+0x15a>
 80034f8:	2b10      	cmp	r3, #16
 80034fa:	d05a      	beq.n	80035b2 <HAL_TIM_ConfigClockSource+0x15a>
 80034fc:	e062      	b.n	80035c4 <HAL_TIM_ConfigClockSource+0x16c>
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	6818      	ldr	r0, [r3, #0]
 8003502:	683b      	ldr	r3, [r7, #0]
 8003504:	6899      	ldr	r1, [r3, #8]
 8003506:	683b      	ldr	r3, [r7, #0]
 8003508:	685a      	ldr	r2, [r3, #4]
 800350a:	683b      	ldr	r3, [r7, #0]
 800350c:	68db      	ldr	r3, [r3, #12]
 800350e:	f000 fac2 	bl	8003a96 <TIM_ETR_SetConfig>
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	681b      	ldr	r3, [r3, #0]
 8003516:	689b      	ldr	r3, [r3, #8]
 8003518:	60bb      	str	r3, [r7, #8]
 800351a:	68bb      	ldr	r3, [r7, #8]
 800351c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003520:	60bb      	str	r3, [r7, #8]
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	681b      	ldr	r3, [r3, #0]
 8003526:	68ba      	ldr	r2, [r7, #8]
 8003528:	609a      	str	r2, [r3, #8]
 800352a:	e04f      	b.n	80035cc <HAL_TIM_ConfigClockSource+0x174>
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	6818      	ldr	r0, [r3, #0]
 8003530:	683b      	ldr	r3, [r7, #0]
 8003532:	6899      	ldr	r1, [r3, #8]
 8003534:	683b      	ldr	r3, [r7, #0]
 8003536:	685a      	ldr	r2, [r3, #4]
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	68db      	ldr	r3, [r3, #12]
 800353c:	f000 faab 	bl	8003a96 <TIM_ETR_SetConfig>
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	689a      	ldr	r2, [r3, #8]
 8003546:	687b      	ldr	r3, [r7, #4]
 8003548:	681b      	ldr	r3, [r3, #0]
 800354a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800354e:	609a      	str	r2, [r3, #8]
 8003550:	e03c      	b.n	80035cc <HAL_TIM_ConfigClockSource+0x174>
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	6818      	ldr	r0, [r3, #0]
 8003556:	683b      	ldr	r3, [r7, #0]
 8003558:	6859      	ldr	r1, [r3, #4]
 800355a:	683b      	ldr	r3, [r7, #0]
 800355c:	68db      	ldr	r3, [r3, #12]
 800355e:	461a      	mov	r2, r3
 8003560:	f000 fa22 	bl	80039a8 <TIM_TI1_ConfigInputStage>
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	2150      	movs	r1, #80	; 0x50
 800356a:	4618      	mov	r0, r3
 800356c:	f000 fa79 	bl	8003a62 <TIM_ITRx_SetConfig>
 8003570:	e02c      	b.n	80035cc <HAL_TIM_ConfigClockSource+0x174>
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	6818      	ldr	r0, [r3, #0]
 8003576:	683b      	ldr	r3, [r7, #0]
 8003578:	6859      	ldr	r1, [r3, #4]
 800357a:	683b      	ldr	r3, [r7, #0]
 800357c:	68db      	ldr	r3, [r3, #12]
 800357e:	461a      	mov	r2, r3
 8003580:	f000 fa40 	bl	8003a04 <TIM_TI2_ConfigInputStage>
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	2160      	movs	r1, #96	; 0x60
 800358a:	4618      	mov	r0, r3
 800358c:	f000 fa69 	bl	8003a62 <TIM_ITRx_SetConfig>
 8003590:	e01c      	b.n	80035cc <HAL_TIM_ConfigClockSource+0x174>
 8003592:	687b      	ldr	r3, [r7, #4]
 8003594:	6818      	ldr	r0, [r3, #0]
 8003596:	683b      	ldr	r3, [r7, #0]
 8003598:	6859      	ldr	r1, [r3, #4]
 800359a:	683b      	ldr	r3, [r7, #0]
 800359c:	68db      	ldr	r3, [r3, #12]
 800359e:	461a      	mov	r2, r3
 80035a0:	f000 fa02 	bl	80039a8 <TIM_TI1_ConfigInputStage>
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	2140      	movs	r1, #64	; 0x40
 80035aa:	4618      	mov	r0, r3
 80035ac:	f000 fa59 	bl	8003a62 <TIM_ITRx_SetConfig>
 80035b0:	e00c      	b.n	80035cc <HAL_TIM_ConfigClockSource+0x174>
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	681a      	ldr	r2, [r3, #0]
 80035b6:	683b      	ldr	r3, [r7, #0]
 80035b8:	681b      	ldr	r3, [r3, #0]
 80035ba:	4619      	mov	r1, r3
 80035bc:	4610      	mov	r0, r2
 80035be:	f000 fa50 	bl	8003a62 <TIM_ITRx_SetConfig>
 80035c2:	e003      	b.n	80035cc <HAL_TIM_ConfigClockSource+0x174>
 80035c4:	2301      	movs	r3, #1
 80035c6:	73fb      	strb	r3, [r7, #15]
 80035c8:	e000      	b.n	80035cc <HAL_TIM_ConfigClockSource+0x174>
 80035ca:	bf00      	nop
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	2201      	movs	r2, #1
 80035d0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	2200      	movs	r2, #0
 80035d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80035dc:	7bfb      	ldrb	r3, [r7, #15]
 80035de:	4618      	mov	r0, r3
 80035e0:	3710      	adds	r7, #16
 80035e2:	46bd      	mov	sp, r7
 80035e4:	bd80      	pop	{r7, pc}
	...

080035e8 <TIM_Base_SetConfig>:
 80035e8:	b480      	push	{r7}
 80035ea:	b085      	sub	sp, #20
 80035ec:	af00      	add	r7, sp, #0
 80035ee:	6078      	str	r0, [r7, #4]
 80035f0:	6039      	str	r1, [r7, #0]
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	681b      	ldr	r3, [r3, #0]
 80035f6:	60fb      	str	r3, [r7, #12]
 80035f8:	687b      	ldr	r3, [r7, #4]
 80035fa:	4a25      	ldr	r2, [pc, #148]	; (8003690 <TIM_Base_SetConfig+0xa8>)
 80035fc:	4293      	cmp	r3, r2
 80035fe:	d007      	beq.n	8003610 <TIM_Base_SetConfig+0x28>
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003606:	d003      	beq.n	8003610 <TIM_Base_SetConfig+0x28>
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	4a22      	ldr	r2, [pc, #136]	; (8003694 <TIM_Base_SetConfig+0xac>)
 800360c:	4293      	cmp	r3, r2
 800360e:	d108      	bne.n	8003622 <TIM_Base_SetConfig+0x3a>
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003616:	60fb      	str	r3, [r7, #12]
 8003618:	683b      	ldr	r3, [r7, #0]
 800361a:	685b      	ldr	r3, [r3, #4]
 800361c:	68fa      	ldr	r2, [r7, #12]
 800361e:	4313      	orrs	r3, r2
 8003620:	60fb      	str	r3, [r7, #12]
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	4a1a      	ldr	r2, [pc, #104]	; (8003690 <TIM_Base_SetConfig+0xa8>)
 8003626:	4293      	cmp	r3, r2
 8003628:	d007      	beq.n	800363a <TIM_Base_SetConfig+0x52>
 800362a:	687b      	ldr	r3, [r7, #4]
 800362c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003630:	d003      	beq.n	800363a <TIM_Base_SetConfig+0x52>
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	4a17      	ldr	r2, [pc, #92]	; (8003694 <TIM_Base_SetConfig+0xac>)
 8003636:	4293      	cmp	r3, r2
 8003638:	d108      	bne.n	800364c <TIM_Base_SetConfig+0x64>
 800363a:	68fb      	ldr	r3, [r7, #12]
 800363c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003640:	60fb      	str	r3, [r7, #12]
 8003642:	683b      	ldr	r3, [r7, #0]
 8003644:	68db      	ldr	r3, [r3, #12]
 8003646:	68fa      	ldr	r2, [r7, #12]
 8003648:	4313      	orrs	r3, r2
 800364a:	60fb      	str	r3, [r7, #12]
 800364c:	68fb      	ldr	r3, [r7, #12]
 800364e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003652:	683b      	ldr	r3, [r7, #0]
 8003654:	695b      	ldr	r3, [r3, #20]
 8003656:	4313      	orrs	r3, r2
 8003658:	60fb      	str	r3, [r7, #12]
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	68fa      	ldr	r2, [r7, #12]
 800365e:	601a      	str	r2, [r3, #0]
 8003660:	683b      	ldr	r3, [r7, #0]
 8003662:	689a      	ldr	r2, [r3, #8]
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	62da      	str	r2, [r3, #44]	; 0x2c
 8003668:	683b      	ldr	r3, [r7, #0]
 800366a:	681a      	ldr	r2, [r3, #0]
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	629a      	str	r2, [r3, #40]	; 0x28
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	4a07      	ldr	r2, [pc, #28]	; (8003690 <TIM_Base_SetConfig+0xa8>)
 8003674:	4293      	cmp	r3, r2
 8003676:	d103      	bne.n	8003680 <TIM_Base_SetConfig+0x98>
 8003678:	683b      	ldr	r3, [r7, #0]
 800367a:	691a      	ldr	r2, [r3, #16]
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	631a      	str	r2, [r3, #48]	; 0x30
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	2201      	movs	r2, #1
 8003684:	615a      	str	r2, [r3, #20]
 8003686:	bf00      	nop
 8003688:	3714      	adds	r7, #20
 800368a:	46bd      	mov	sp, r7
 800368c:	bc80      	pop	{r7}
 800368e:	4770      	bx	lr
 8003690:	40012c00 	.word	0x40012c00
 8003694:	40000400 	.word	0x40000400

08003698 <TIM_OC1_SetConfig>:
 8003698:	b480      	push	{r7}
 800369a:	b087      	sub	sp, #28
 800369c:	af00      	add	r7, sp, #0
 800369e:	6078      	str	r0, [r7, #4]
 80036a0:	6039      	str	r1, [r7, #0]
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	6a1b      	ldr	r3, [r3, #32]
 80036a6:	617b      	str	r3, [r7, #20]
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	6a1b      	ldr	r3, [r3, #32]
 80036ac:	f023 0201 	bic.w	r2, r3, #1
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	621a      	str	r2, [r3, #32]
 80036b4:	687b      	ldr	r3, [r7, #4]
 80036b6:	685b      	ldr	r3, [r3, #4]
 80036b8:	613b      	str	r3, [r7, #16]
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	699b      	ldr	r3, [r3, #24]
 80036be:	60fb      	str	r3, [r7, #12]
 80036c0:	68fb      	ldr	r3, [r7, #12]
 80036c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80036c6:	60fb      	str	r3, [r7, #12]
 80036c8:	68fb      	ldr	r3, [r7, #12]
 80036ca:	f023 0303 	bic.w	r3, r3, #3
 80036ce:	60fb      	str	r3, [r7, #12]
 80036d0:	683b      	ldr	r3, [r7, #0]
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	68fa      	ldr	r2, [r7, #12]
 80036d6:	4313      	orrs	r3, r2
 80036d8:	60fb      	str	r3, [r7, #12]
 80036da:	697b      	ldr	r3, [r7, #20]
 80036dc:	f023 0302 	bic.w	r3, r3, #2
 80036e0:	617b      	str	r3, [r7, #20]
 80036e2:	683b      	ldr	r3, [r7, #0]
 80036e4:	689b      	ldr	r3, [r3, #8]
 80036e6:	697a      	ldr	r2, [r7, #20]
 80036e8:	4313      	orrs	r3, r2
 80036ea:	617b      	str	r3, [r7, #20]
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	4a1c      	ldr	r2, [pc, #112]	; (8003760 <TIM_OC1_SetConfig+0xc8>)
 80036f0:	4293      	cmp	r3, r2
 80036f2:	d10c      	bne.n	800370e <TIM_OC1_SetConfig+0x76>
 80036f4:	697b      	ldr	r3, [r7, #20]
 80036f6:	f023 0308 	bic.w	r3, r3, #8
 80036fa:	617b      	str	r3, [r7, #20]
 80036fc:	683b      	ldr	r3, [r7, #0]
 80036fe:	68db      	ldr	r3, [r3, #12]
 8003700:	697a      	ldr	r2, [r7, #20]
 8003702:	4313      	orrs	r3, r2
 8003704:	617b      	str	r3, [r7, #20]
 8003706:	697b      	ldr	r3, [r7, #20]
 8003708:	f023 0304 	bic.w	r3, r3, #4
 800370c:	617b      	str	r3, [r7, #20]
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	4a13      	ldr	r2, [pc, #76]	; (8003760 <TIM_OC1_SetConfig+0xc8>)
 8003712:	4293      	cmp	r3, r2
 8003714:	d111      	bne.n	800373a <TIM_OC1_SetConfig+0xa2>
 8003716:	693b      	ldr	r3, [r7, #16]
 8003718:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800371c:	613b      	str	r3, [r7, #16]
 800371e:	693b      	ldr	r3, [r7, #16]
 8003720:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003724:	613b      	str	r3, [r7, #16]
 8003726:	683b      	ldr	r3, [r7, #0]
 8003728:	695b      	ldr	r3, [r3, #20]
 800372a:	693a      	ldr	r2, [r7, #16]
 800372c:	4313      	orrs	r3, r2
 800372e:	613b      	str	r3, [r7, #16]
 8003730:	683b      	ldr	r3, [r7, #0]
 8003732:	699b      	ldr	r3, [r3, #24]
 8003734:	693a      	ldr	r2, [r7, #16]
 8003736:	4313      	orrs	r3, r2
 8003738:	613b      	str	r3, [r7, #16]
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	693a      	ldr	r2, [r7, #16]
 800373e:	605a      	str	r2, [r3, #4]
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	68fa      	ldr	r2, [r7, #12]
 8003744:	619a      	str	r2, [r3, #24]
 8003746:	683b      	ldr	r3, [r7, #0]
 8003748:	685a      	ldr	r2, [r3, #4]
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	635a      	str	r2, [r3, #52]	; 0x34
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	697a      	ldr	r2, [r7, #20]
 8003752:	621a      	str	r2, [r3, #32]
 8003754:	bf00      	nop
 8003756:	371c      	adds	r7, #28
 8003758:	46bd      	mov	sp, r7
 800375a:	bc80      	pop	{r7}
 800375c:	4770      	bx	lr
 800375e:	bf00      	nop
 8003760:	40012c00 	.word	0x40012c00

08003764 <TIM_OC2_SetConfig>:
 8003764:	b480      	push	{r7}
 8003766:	b087      	sub	sp, #28
 8003768:	af00      	add	r7, sp, #0
 800376a:	6078      	str	r0, [r7, #4]
 800376c:	6039      	str	r1, [r7, #0]
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	6a1b      	ldr	r3, [r3, #32]
 8003772:	617b      	str	r3, [r7, #20]
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	6a1b      	ldr	r3, [r3, #32]
 8003778:	f023 0210 	bic.w	r2, r3, #16
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	621a      	str	r2, [r3, #32]
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	685b      	ldr	r3, [r3, #4]
 8003784:	613b      	str	r3, [r7, #16]
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	699b      	ldr	r3, [r3, #24]
 800378a:	60fb      	str	r3, [r7, #12]
 800378c:	68fb      	ldr	r3, [r7, #12]
 800378e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003792:	60fb      	str	r3, [r7, #12]
 8003794:	68fb      	ldr	r3, [r7, #12]
 8003796:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800379a:	60fb      	str	r3, [r7, #12]
 800379c:	683b      	ldr	r3, [r7, #0]
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	021b      	lsls	r3, r3, #8
 80037a2:	68fa      	ldr	r2, [r7, #12]
 80037a4:	4313      	orrs	r3, r2
 80037a6:	60fb      	str	r3, [r7, #12]
 80037a8:	697b      	ldr	r3, [r7, #20]
 80037aa:	f023 0320 	bic.w	r3, r3, #32
 80037ae:	617b      	str	r3, [r7, #20]
 80037b0:	683b      	ldr	r3, [r7, #0]
 80037b2:	689b      	ldr	r3, [r3, #8]
 80037b4:	011b      	lsls	r3, r3, #4
 80037b6:	697a      	ldr	r2, [r7, #20]
 80037b8:	4313      	orrs	r3, r2
 80037ba:	617b      	str	r3, [r7, #20]
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	4a1d      	ldr	r2, [pc, #116]	; (8003834 <TIM_OC2_SetConfig+0xd0>)
 80037c0:	4293      	cmp	r3, r2
 80037c2:	d10d      	bne.n	80037e0 <TIM_OC2_SetConfig+0x7c>
 80037c4:	697b      	ldr	r3, [r7, #20]
 80037c6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80037ca:	617b      	str	r3, [r7, #20]
 80037cc:	683b      	ldr	r3, [r7, #0]
 80037ce:	68db      	ldr	r3, [r3, #12]
 80037d0:	011b      	lsls	r3, r3, #4
 80037d2:	697a      	ldr	r2, [r7, #20]
 80037d4:	4313      	orrs	r3, r2
 80037d6:	617b      	str	r3, [r7, #20]
 80037d8:	697b      	ldr	r3, [r7, #20]
 80037da:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80037de:	617b      	str	r3, [r7, #20]
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	4a14      	ldr	r2, [pc, #80]	; (8003834 <TIM_OC2_SetConfig+0xd0>)
 80037e4:	4293      	cmp	r3, r2
 80037e6:	d113      	bne.n	8003810 <TIM_OC2_SetConfig+0xac>
 80037e8:	693b      	ldr	r3, [r7, #16]
 80037ea:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80037ee:	613b      	str	r3, [r7, #16]
 80037f0:	693b      	ldr	r3, [r7, #16]
 80037f2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80037f6:	613b      	str	r3, [r7, #16]
 80037f8:	683b      	ldr	r3, [r7, #0]
 80037fa:	695b      	ldr	r3, [r3, #20]
 80037fc:	009b      	lsls	r3, r3, #2
 80037fe:	693a      	ldr	r2, [r7, #16]
 8003800:	4313      	orrs	r3, r2
 8003802:	613b      	str	r3, [r7, #16]
 8003804:	683b      	ldr	r3, [r7, #0]
 8003806:	699b      	ldr	r3, [r3, #24]
 8003808:	009b      	lsls	r3, r3, #2
 800380a:	693a      	ldr	r2, [r7, #16]
 800380c:	4313      	orrs	r3, r2
 800380e:	613b      	str	r3, [r7, #16]
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	693a      	ldr	r2, [r7, #16]
 8003814:	605a      	str	r2, [r3, #4]
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	68fa      	ldr	r2, [r7, #12]
 800381a:	619a      	str	r2, [r3, #24]
 800381c:	683b      	ldr	r3, [r7, #0]
 800381e:	685a      	ldr	r2, [r3, #4]
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	639a      	str	r2, [r3, #56]	; 0x38
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	697a      	ldr	r2, [r7, #20]
 8003828:	621a      	str	r2, [r3, #32]
 800382a:	bf00      	nop
 800382c:	371c      	adds	r7, #28
 800382e:	46bd      	mov	sp, r7
 8003830:	bc80      	pop	{r7}
 8003832:	4770      	bx	lr
 8003834:	40012c00 	.word	0x40012c00

08003838 <TIM_OC3_SetConfig>:
 8003838:	b480      	push	{r7}
 800383a:	b087      	sub	sp, #28
 800383c:	af00      	add	r7, sp, #0
 800383e:	6078      	str	r0, [r7, #4]
 8003840:	6039      	str	r1, [r7, #0]
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	6a1b      	ldr	r3, [r3, #32]
 8003846:	617b      	str	r3, [r7, #20]
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	6a1b      	ldr	r3, [r3, #32]
 800384c:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	621a      	str	r2, [r3, #32]
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	685b      	ldr	r3, [r3, #4]
 8003858:	613b      	str	r3, [r7, #16]
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	69db      	ldr	r3, [r3, #28]
 800385e:	60fb      	str	r3, [r7, #12]
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003866:	60fb      	str	r3, [r7, #12]
 8003868:	68fb      	ldr	r3, [r7, #12]
 800386a:	f023 0303 	bic.w	r3, r3, #3
 800386e:	60fb      	str	r3, [r7, #12]
 8003870:	683b      	ldr	r3, [r7, #0]
 8003872:	681b      	ldr	r3, [r3, #0]
 8003874:	68fa      	ldr	r2, [r7, #12]
 8003876:	4313      	orrs	r3, r2
 8003878:	60fb      	str	r3, [r7, #12]
 800387a:	697b      	ldr	r3, [r7, #20]
 800387c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003880:	617b      	str	r3, [r7, #20]
 8003882:	683b      	ldr	r3, [r7, #0]
 8003884:	689b      	ldr	r3, [r3, #8]
 8003886:	021b      	lsls	r3, r3, #8
 8003888:	697a      	ldr	r2, [r7, #20]
 800388a:	4313      	orrs	r3, r2
 800388c:	617b      	str	r3, [r7, #20]
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	4a1d      	ldr	r2, [pc, #116]	; (8003908 <TIM_OC3_SetConfig+0xd0>)
 8003892:	4293      	cmp	r3, r2
 8003894:	d10d      	bne.n	80038b2 <TIM_OC3_SetConfig+0x7a>
 8003896:	697b      	ldr	r3, [r7, #20]
 8003898:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800389c:	617b      	str	r3, [r7, #20]
 800389e:	683b      	ldr	r3, [r7, #0]
 80038a0:	68db      	ldr	r3, [r3, #12]
 80038a2:	021b      	lsls	r3, r3, #8
 80038a4:	697a      	ldr	r2, [r7, #20]
 80038a6:	4313      	orrs	r3, r2
 80038a8:	617b      	str	r3, [r7, #20]
 80038aa:	697b      	ldr	r3, [r7, #20]
 80038ac:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80038b0:	617b      	str	r3, [r7, #20]
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	4a14      	ldr	r2, [pc, #80]	; (8003908 <TIM_OC3_SetConfig+0xd0>)
 80038b6:	4293      	cmp	r3, r2
 80038b8:	d113      	bne.n	80038e2 <TIM_OC3_SetConfig+0xaa>
 80038ba:	693b      	ldr	r3, [r7, #16]
 80038bc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80038c0:	613b      	str	r3, [r7, #16]
 80038c2:	693b      	ldr	r3, [r7, #16]
 80038c4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80038c8:	613b      	str	r3, [r7, #16]
 80038ca:	683b      	ldr	r3, [r7, #0]
 80038cc:	695b      	ldr	r3, [r3, #20]
 80038ce:	011b      	lsls	r3, r3, #4
 80038d0:	693a      	ldr	r2, [r7, #16]
 80038d2:	4313      	orrs	r3, r2
 80038d4:	613b      	str	r3, [r7, #16]
 80038d6:	683b      	ldr	r3, [r7, #0]
 80038d8:	699b      	ldr	r3, [r3, #24]
 80038da:	011b      	lsls	r3, r3, #4
 80038dc:	693a      	ldr	r2, [r7, #16]
 80038de:	4313      	orrs	r3, r2
 80038e0:	613b      	str	r3, [r7, #16]
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	693a      	ldr	r2, [r7, #16]
 80038e6:	605a      	str	r2, [r3, #4]
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	68fa      	ldr	r2, [r7, #12]
 80038ec:	61da      	str	r2, [r3, #28]
 80038ee:	683b      	ldr	r3, [r7, #0]
 80038f0:	685a      	ldr	r2, [r3, #4]
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	63da      	str	r2, [r3, #60]	; 0x3c
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	697a      	ldr	r2, [r7, #20]
 80038fa:	621a      	str	r2, [r3, #32]
 80038fc:	bf00      	nop
 80038fe:	371c      	adds	r7, #28
 8003900:	46bd      	mov	sp, r7
 8003902:	bc80      	pop	{r7}
 8003904:	4770      	bx	lr
 8003906:	bf00      	nop
 8003908:	40012c00 	.word	0x40012c00

0800390c <TIM_OC4_SetConfig>:
 800390c:	b480      	push	{r7}
 800390e:	b087      	sub	sp, #28
 8003910:	af00      	add	r7, sp, #0
 8003912:	6078      	str	r0, [r7, #4]
 8003914:	6039      	str	r1, [r7, #0]
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	6a1b      	ldr	r3, [r3, #32]
 800391a:	613b      	str	r3, [r7, #16]
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	6a1b      	ldr	r3, [r3, #32]
 8003920:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	621a      	str	r2, [r3, #32]
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	685b      	ldr	r3, [r3, #4]
 800392c:	617b      	str	r3, [r7, #20]
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	69db      	ldr	r3, [r3, #28]
 8003932:	60fb      	str	r3, [r7, #12]
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800393a:	60fb      	str	r3, [r7, #12]
 800393c:	68fb      	ldr	r3, [r7, #12]
 800393e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003942:	60fb      	str	r3, [r7, #12]
 8003944:	683b      	ldr	r3, [r7, #0]
 8003946:	681b      	ldr	r3, [r3, #0]
 8003948:	021b      	lsls	r3, r3, #8
 800394a:	68fa      	ldr	r2, [r7, #12]
 800394c:	4313      	orrs	r3, r2
 800394e:	60fb      	str	r3, [r7, #12]
 8003950:	693b      	ldr	r3, [r7, #16]
 8003952:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003956:	613b      	str	r3, [r7, #16]
 8003958:	683b      	ldr	r3, [r7, #0]
 800395a:	689b      	ldr	r3, [r3, #8]
 800395c:	031b      	lsls	r3, r3, #12
 800395e:	693a      	ldr	r2, [r7, #16]
 8003960:	4313      	orrs	r3, r2
 8003962:	613b      	str	r3, [r7, #16]
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	4a0f      	ldr	r2, [pc, #60]	; (80039a4 <TIM_OC4_SetConfig+0x98>)
 8003968:	4293      	cmp	r3, r2
 800396a:	d109      	bne.n	8003980 <TIM_OC4_SetConfig+0x74>
 800396c:	697b      	ldr	r3, [r7, #20]
 800396e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003972:	617b      	str	r3, [r7, #20]
 8003974:	683b      	ldr	r3, [r7, #0]
 8003976:	695b      	ldr	r3, [r3, #20]
 8003978:	019b      	lsls	r3, r3, #6
 800397a:	697a      	ldr	r2, [r7, #20]
 800397c:	4313      	orrs	r3, r2
 800397e:	617b      	str	r3, [r7, #20]
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	697a      	ldr	r2, [r7, #20]
 8003984:	605a      	str	r2, [r3, #4]
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	68fa      	ldr	r2, [r7, #12]
 800398a:	61da      	str	r2, [r3, #28]
 800398c:	683b      	ldr	r3, [r7, #0]
 800398e:	685a      	ldr	r2, [r3, #4]
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	641a      	str	r2, [r3, #64]	; 0x40
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	693a      	ldr	r2, [r7, #16]
 8003998:	621a      	str	r2, [r3, #32]
 800399a:	bf00      	nop
 800399c:	371c      	adds	r7, #28
 800399e:	46bd      	mov	sp, r7
 80039a0:	bc80      	pop	{r7}
 80039a2:	4770      	bx	lr
 80039a4:	40012c00 	.word	0x40012c00

080039a8 <TIM_TI1_ConfigInputStage>:
 80039a8:	b480      	push	{r7}
 80039aa:	b087      	sub	sp, #28
 80039ac:	af00      	add	r7, sp, #0
 80039ae:	60f8      	str	r0, [r7, #12]
 80039b0:	60b9      	str	r1, [r7, #8]
 80039b2:	607a      	str	r2, [r7, #4]
 80039b4:	68fb      	ldr	r3, [r7, #12]
 80039b6:	6a1b      	ldr	r3, [r3, #32]
 80039b8:	617b      	str	r3, [r7, #20]
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	6a1b      	ldr	r3, [r3, #32]
 80039be:	f023 0201 	bic.w	r2, r3, #1
 80039c2:	68fb      	ldr	r3, [r7, #12]
 80039c4:	621a      	str	r2, [r3, #32]
 80039c6:	68fb      	ldr	r3, [r7, #12]
 80039c8:	699b      	ldr	r3, [r3, #24]
 80039ca:	613b      	str	r3, [r7, #16]
 80039cc:	693b      	ldr	r3, [r7, #16]
 80039ce:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80039d2:	613b      	str	r3, [r7, #16]
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	011b      	lsls	r3, r3, #4
 80039d8:	693a      	ldr	r2, [r7, #16]
 80039da:	4313      	orrs	r3, r2
 80039dc:	613b      	str	r3, [r7, #16]
 80039de:	697b      	ldr	r3, [r7, #20]
 80039e0:	f023 030a 	bic.w	r3, r3, #10
 80039e4:	617b      	str	r3, [r7, #20]
 80039e6:	697a      	ldr	r2, [r7, #20]
 80039e8:	68bb      	ldr	r3, [r7, #8]
 80039ea:	4313      	orrs	r3, r2
 80039ec:	617b      	str	r3, [r7, #20]
 80039ee:	68fb      	ldr	r3, [r7, #12]
 80039f0:	693a      	ldr	r2, [r7, #16]
 80039f2:	619a      	str	r2, [r3, #24]
 80039f4:	68fb      	ldr	r3, [r7, #12]
 80039f6:	697a      	ldr	r2, [r7, #20]
 80039f8:	621a      	str	r2, [r3, #32]
 80039fa:	bf00      	nop
 80039fc:	371c      	adds	r7, #28
 80039fe:	46bd      	mov	sp, r7
 8003a00:	bc80      	pop	{r7}
 8003a02:	4770      	bx	lr

08003a04 <TIM_TI2_ConfigInputStage>:
 8003a04:	b480      	push	{r7}
 8003a06:	b087      	sub	sp, #28
 8003a08:	af00      	add	r7, sp, #0
 8003a0a:	60f8      	str	r0, [r7, #12]
 8003a0c:	60b9      	str	r1, [r7, #8]
 8003a0e:	607a      	str	r2, [r7, #4]
 8003a10:	68fb      	ldr	r3, [r7, #12]
 8003a12:	6a1b      	ldr	r3, [r3, #32]
 8003a14:	617b      	str	r3, [r7, #20]
 8003a16:	68fb      	ldr	r3, [r7, #12]
 8003a18:	6a1b      	ldr	r3, [r3, #32]
 8003a1a:	f023 0210 	bic.w	r2, r3, #16
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	621a      	str	r2, [r3, #32]
 8003a22:	68fb      	ldr	r3, [r7, #12]
 8003a24:	699b      	ldr	r3, [r3, #24]
 8003a26:	613b      	str	r3, [r7, #16]
 8003a28:	693b      	ldr	r3, [r7, #16]
 8003a2a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003a2e:	613b      	str	r3, [r7, #16]
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	031b      	lsls	r3, r3, #12
 8003a34:	693a      	ldr	r2, [r7, #16]
 8003a36:	4313      	orrs	r3, r2
 8003a38:	613b      	str	r3, [r7, #16]
 8003a3a:	697b      	ldr	r3, [r7, #20]
 8003a3c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003a40:	617b      	str	r3, [r7, #20]
 8003a42:	68bb      	ldr	r3, [r7, #8]
 8003a44:	011b      	lsls	r3, r3, #4
 8003a46:	697a      	ldr	r2, [r7, #20]
 8003a48:	4313      	orrs	r3, r2
 8003a4a:	617b      	str	r3, [r7, #20]
 8003a4c:	68fb      	ldr	r3, [r7, #12]
 8003a4e:	693a      	ldr	r2, [r7, #16]
 8003a50:	619a      	str	r2, [r3, #24]
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	697a      	ldr	r2, [r7, #20]
 8003a56:	621a      	str	r2, [r3, #32]
 8003a58:	bf00      	nop
 8003a5a:	371c      	adds	r7, #28
 8003a5c:	46bd      	mov	sp, r7
 8003a5e:	bc80      	pop	{r7}
 8003a60:	4770      	bx	lr

08003a62 <TIM_ITRx_SetConfig>:
 8003a62:	b480      	push	{r7}
 8003a64:	b085      	sub	sp, #20
 8003a66:	af00      	add	r7, sp, #0
 8003a68:	6078      	str	r0, [r7, #4]
 8003a6a:	6039      	str	r1, [r7, #0]
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	689b      	ldr	r3, [r3, #8]
 8003a70:	60fb      	str	r3, [r7, #12]
 8003a72:	68fb      	ldr	r3, [r7, #12]
 8003a74:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003a78:	60fb      	str	r3, [r7, #12]
 8003a7a:	683a      	ldr	r2, [r7, #0]
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	4313      	orrs	r3, r2
 8003a80:	f043 0307 	orr.w	r3, r3, #7
 8003a84:	60fb      	str	r3, [r7, #12]
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	68fa      	ldr	r2, [r7, #12]
 8003a8a:	609a      	str	r2, [r3, #8]
 8003a8c:	bf00      	nop
 8003a8e:	3714      	adds	r7, #20
 8003a90:	46bd      	mov	sp, r7
 8003a92:	bc80      	pop	{r7}
 8003a94:	4770      	bx	lr

08003a96 <TIM_ETR_SetConfig>:
 8003a96:	b480      	push	{r7}
 8003a98:	b087      	sub	sp, #28
 8003a9a:	af00      	add	r7, sp, #0
 8003a9c:	60f8      	str	r0, [r7, #12]
 8003a9e:	60b9      	str	r1, [r7, #8]
 8003aa0:	607a      	str	r2, [r7, #4]
 8003aa2:	603b      	str	r3, [r7, #0]
 8003aa4:	68fb      	ldr	r3, [r7, #12]
 8003aa6:	689b      	ldr	r3, [r3, #8]
 8003aa8:	617b      	str	r3, [r7, #20]
 8003aaa:	697b      	ldr	r3, [r7, #20]
 8003aac:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003ab0:	617b      	str	r3, [r7, #20]
 8003ab2:	683b      	ldr	r3, [r7, #0]
 8003ab4:	021a      	lsls	r2, r3, #8
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	431a      	orrs	r2, r3
 8003aba:	68bb      	ldr	r3, [r7, #8]
 8003abc:	4313      	orrs	r3, r2
 8003abe:	697a      	ldr	r2, [r7, #20]
 8003ac0:	4313      	orrs	r3, r2
 8003ac2:	617b      	str	r3, [r7, #20]
 8003ac4:	68fb      	ldr	r3, [r7, #12]
 8003ac6:	697a      	ldr	r2, [r7, #20]
 8003ac8:	609a      	str	r2, [r3, #8]
 8003aca:	bf00      	nop
 8003acc:	371c      	adds	r7, #28
 8003ace:	46bd      	mov	sp, r7
 8003ad0:	bc80      	pop	{r7}
 8003ad2:	4770      	bx	lr

08003ad4 <TIM_CCxChannelCmd>:
 8003ad4:	b480      	push	{r7}
 8003ad6:	b087      	sub	sp, #28
 8003ad8:	af00      	add	r7, sp, #0
 8003ada:	60f8      	str	r0, [r7, #12]
 8003adc:	60b9      	str	r1, [r7, #8]
 8003ade:	607a      	str	r2, [r7, #4]
 8003ae0:	68bb      	ldr	r3, [r7, #8]
 8003ae2:	f003 031f 	and.w	r3, r3, #31
 8003ae6:	2201      	movs	r2, #1
 8003ae8:	fa02 f303 	lsl.w	r3, r2, r3
 8003aec:	617b      	str	r3, [r7, #20]
 8003aee:	68fb      	ldr	r3, [r7, #12]
 8003af0:	6a1a      	ldr	r2, [r3, #32]
 8003af2:	697b      	ldr	r3, [r7, #20]
 8003af4:	43db      	mvns	r3, r3
 8003af6:	401a      	ands	r2, r3
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	621a      	str	r2, [r3, #32]
 8003afc:	68fb      	ldr	r3, [r7, #12]
 8003afe:	6a1a      	ldr	r2, [r3, #32]
 8003b00:	68bb      	ldr	r3, [r7, #8]
 8003b02:	f003 031f 	and.w	r3, r3, #31
 8003b06:	6879      	ldr	r1, [r7, #4]
 8003b08:	fa01 f303 	lsl.w	r3, r1, r3
 8003b0c:	431a      	orrs	r2, r3
 8003b0e:	68fb      	ldr	r3, [r7, #12]
 8003b10:	621a      	str	r2, [r3, #32]
 8003b12:	bf00      	nop
 8003b14:	371c      	adds	r7, #28
 8003b16:	46bd      	mov	sp, r7
 8003b18:	bc80      	pop	{r7}
 8003b1a:	4770      	bx	lr

08003b1c <HAL_TIMEx_MasterConfigSynchronization>:
 8003b1c:	b480      	push	{r7}
 8003b1e:	b085      	sub	sp, #20
 8003b20:	af00      	add	r7, sp, #0
 8003b22:	6078      	str	r0, [r7, #4]
 8003b24:	6039      	str	r1, [r7, #0]
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003b2c:	2b01      	cmp	r3, #1
 8003b2e:	d101      	bne.n	8003b34 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003b30:	2302      	movs	r3, #2
 8003b32:	e041      	b.n	8003bb8 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	2201      	movs	r2, #1
 8003b38:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	2202      	movs	r2, #2
 8003b40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	685b      	ldr	r3, [r3, #4]
 8003b4a:	60fb      	str	r3, [r7, #12]
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	689b      	ldr	r3, [r3, #8]
 8003b52:	60bb      	str	r3, [r7, #8]
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003b5a:	60fb      	str	r3, [r7, #12]
 8003b5c:	683b      	ldr	r3, [r7, #0]
 8003b5e:	681b      	ldr	r3, [r3, #0]
 8003b60:	68fa      	ldr	r2, [r7, #12]
 8003b62:	4313      	orrs	r3, r2
 8003b64:	60fb      	str	r3, [r7, #12]
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	68fa      	ldr	r2, [r7, #12]
 8003b6c:	605a      	str	r2, [r3, #4]
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	4a14      	ldr	r2, [pc, #80]	; (8003bc4 <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8003b74:	4293      	cmp	r3, r2
 8003b76:	d009      	beq.n	8003b8c <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003b80:	d004      	beq.n	8003b8c <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8003b82:	687b      	ldr	r3, [r7, #4]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	4a10      	ldr	r2, [pc, #64]	; (8003bc8 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 8003b88:	4293      	cmp	r3, r2
 8003b8a:	d10c      	bne.n	8003ba6 <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 8003b8c:	68bb      	ldr	r3, [r7, #8]
 8003b8e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003b92:	60bb      	str	r3, [r7, #8]
 8003b94:	683b      	ldr	r3, [r7, #0]
 8003b96:	685b      	ldr	r3, [r3, #4]
 8003b98:	68ba      	ldr	r2, [r7, #8]
 8003b9a:	4313      	orrs	r3, r2
 8003b9c:	60bb      	str	r3, [r7, #8]
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	68ba      	ldr	r2, [r7, #8]
 8003ba4:	609a      	str	r2, [r3, #8]
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	2201      	movs	r2, #1
 8003baa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	2200      	movs	r2, #0
 8003bb2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003bb6:	2300      	movs	r3, #0
 8003bb8:	4618      	mov	r0, r3
 8003bba:	3714      	adds	r7, #20
 8003bbc:	46bd      	mov	sp, r7
 8003bbe:	bc80      	pop	{r7}
 8003bc0:	4770      	bx	lr
 8003bc2:	bf00      	nop
 8003bc4:	40012c00 	.word	0x40012c00
 8003bc8:	40000400 	.word	0x40000400

08003bcc <__libc_init_array>:
 8003bcc:	b570      	push	{r4, r5, r6, lr}
 8003bce:	2600      	movs	r6, #0
 8003bd0:	4d0c      	ldr	r5, [pc, #48]	; (8003c04 <__libc_init_array+0x38>)
 8003bd2:	4c0d      	ldr	r4, [pc, #52]	; (8003c08 <__libc_init_array+0x3c>)
 8003bd4:	1b64      	subs	r4, r4, r5
 8003bd6:	10a4      	asrs	r4, r4, #2
 8003bd8:	42a6      	cmp	r6, r4
 8003bda:	d109      	bne.n	8003bf0 <__libc_init_array+0x24>
 8003bdc:	f000 f822 	bl	8003c24 <_init>
 8003be0:	2600      	movs	r6, #0
 8003be2:	4d0a      	ldr	r5, [pc, #40]	; (8003c0c <__libc_init_array+0x40>)
 8003be4:	4c0a      	ldr	r4, [pc, #40]	; (8003c10 <__libc_init_array+0x44>)
 8003be6:	1b64      	subs	r4, r4, r5
 8003be8:	10a4      	asrs	r4, r4, #2
 8003bea:	42a6      	cmp	r6, r4
 8003bec:	d105      	bne.n	8003bfa <__libc_init_array+0x2e>
 8003bee:	bd70      	pop	{r4, r5, r6, pc}
 8003bf0:	f855 3b04 	ldr.w	r3, [r5], #4
 8003bf4:	4798      	blx	r3
 8003bf6:	3601      	adds	r6, #1
 8003bf8:	e7ee      	b.n	8003bd8 <__libc_init_array+0xc>
 8003bfa:	f855 3b04 	ldr.w	r3, [r5], #4
 8003bfe:	4798      	blx	r3
 8003c00:	3601      	adds	r6, #1
 8003c02:	e7f2      	b.n	8003bea <__libc_init_array+0x1e>
 8003c04:	08003c68 	.word	0x08003c68
 8003c08:	08003c68 	.word	0x08003c68
 8003c0c:	08003c68 	.word	0x08003c68
 8003c10:	08003c6c 	.word	0x08003c6c

08003c14 <memset>:
 8003c14:	4603      	mov	r3, r0
 8003c16:	4402      	add	r2, r0
 8003c18:	4293      	cmp	r3, r2
 8003c1a:	d100      	bne.n	8003c1e <memset+0xa>
 8003c1c:	4770      	bx	lr
 8003c1e:	f803 1b01 	strb.w	r1, [r3], #1
 8003c22:	e7f9      	b.n	8003c18 <memset+0x4>

08003c24 <_init>:
 8003c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c26:	bf00      	nop
 8003c28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003c2a:	bc08      	pop	{r3}
 8003c2c:	469e      	mov	lr, r3
 8003c2e:	4770      	bx	lr

08003c30 <_fini>:
 8003c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c32:	bf00      	nop
 8003c34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003c36:	bc08      	pop	{r3}
 8003c38:	469e      	mov	lr, r3
 8003c3a:	4770      	bx	lr
